{
  "version": 3,
  "sources": ["../../ol/Geolocation.js", "../../ol/style/IconImageCache.js", "../../ol/style/IconImage.js", "../../ol/style/Fill.js", "../../ol/style/Stroke.js", "../../ol/style/Image.js", "../../ol/colorlike.js", "../../ol/css.js", "../../ol/render/canvas.js", "../../ol/style/RegularShape.js", "../../ol/style/Circle.js", "../../ol/style/Style.js", "../../ol/style/Text.js", "../../ol/style/Icon.js", "../../ol/expr/expression.js", "../../ol/expr/cpu.js", "../../ol/render/canvas/style.js", "../../ol/layer/BaseVector.js", "../../ol/render/canvas/Instruction.js", "../../ol/render/VectorContext.js", "../../ol/render/canvas/Builder.js", "../../ol/render/canvas/ImageBuilder.js", "../../ol/render/canvas/LineStringBuilder.js", "../../ol/render/canvas/PolygonBuilder.js", "../../ol/geom/flat/linechunk.js", "../../ol/geom/flat/straightchunk.js", "../../ol/render/canvas/TextBuilder.js", "../../ol/render/canvas/BuilderGroup.js", "../../ol/geom/flat/textpath.js", "../../ol/render/canvas/Executor.js", "../../ol/render/canvas/ExecutorGroup.js", "../../ol/render/canvas/Immediate.js", "../../ol/render/canvas/hitdetect.js", "../../ol/renderer/vector.js", "../../ol/renderer/canvas/VectorLayer.js", "../../ol/layer/Vector.js", "../../ol/render.js", "../../ol/geom/flat/geodesic.js", "../../ol/layer/Graticule.js", "../../ol/Kinetic.js", "../../ol/renderer/Map.js", "../../ol/renderer/Composite.js", "../../ol/layer/Group.js", "../../ol/MapEvent.js", "../../ol/MapBrowserEvent.js", "../../ol/MapBrowserEventType.js", "../../ol/pointer/EventType.js", "../../ol/MapBrowserEventHandler.js", "../../ol/MapEventType.js", "../../ol/MapProperty.js", "../../ol/control/Control.js", "../../ol/control/Attribution.js", "../../ol/control/Rotate.js", "../../ol/control/Zoom.js", "../../ol/control/defaults.js", "../../ol/interaction/Property.js", "../../ol/interaction/Interaction.js", "../../ol/interaction/DoubleClickZoom.js", "../../ol/interaction/Pointer.js", "../../ol/events/condition.js", "../../ol/interaction/DragPan.js", "../../ol/interaction/DragRotate.js", "../../ol/render/Box.js", "../../ol/interaction/DragBox.js", "../../ol/interaction/DragZoom.js", "../../ol/events/Key.js", "../../ol/interaction/KeyboardPan.js", "../../ol/interaction/KeyboardZoom.js", "../../ol/interaction/MouseWheelZoom.js", "../../ol/interaction/PinchRotate.js", "../../ol/interaction/PinchZoom.js", "../../ol/interaction/defaults.js", "../../ol/Map.js", "../../ol/Overlay.js"],
  "sourcesContent": ["/**\r\n * @module ol/Geolocation\r\n */\r\nimport BaseEvent from './events/Event.js';\r\nimport BaseObject from './Object.js';\r\nimport {circular as circularPolygon} from './geom/Polygon.js';\r\nimport {\r\n  get as getProjection,\r\n  getTransformFromProjections,\r\n  identityTransform,\r\n} from './proj.js';\r\nimport {toRadians} from './math.js';\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst Property = {\r\n  ACCURACY: 'accuracy',\r\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\r\n  ALTITUDE: 'altitude',\r\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\r\n  HEADING: 'heading',\r\n  POSITION: 'position',\r\n  PROJECTION: 'projection',\r\n  SPEED: 'speed',\r\n  TRACKING: 'tracking',\r\n  TRACKING_OPTIONS: 'trackingOptions',\r\n};\r\n\r\n/**\r\n * @enum string\r\n */\r\nconst GeolocationErrorType = {\r\n  /**\r\n   * Triggered when a `GeolocationPositionError` occurs.\r\n   * @event module:ol/Geolocation.GeolocationError#error\r\n   * @api\r\n   */\r\n  ERROR: 'error',\r\n};\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted on [GeolocationPositionError](https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPositionError).\r\n */\r\nexport class GeolocationError extends BaseEvent {\r\n  /**\r\n   * @param {GeolocationPositionError} error error object.\r\n   */\r\n  constructor(error) {\r\n    super(GeolocationErrorType.ERROR);\r\n\r\n    /**\r\n     * Code of the underlying `GeolocationPositionError`.\r\n     * @type {number}\r\n     * @api\r\n     */\r\n    this.code = error.code;\r\n\r\n    /**\r\n     * Message of the underlying `GeolocationPositionError`.\r\n     * @type {string}\r\n     * @api\r\n     */\r\n    this.message = error.message;\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {boolean} [tracking=false] Start Tracking right after\r\n * instantiation.\r\n * @property {PositionOptions} [trackingOptions] Tracking options.\r\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\r\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\r\n * is reported in.\r\n */\r\n\r\n/**\r\n * @typedef {import(\"./ObjectEventType\").Types|'change:accuracy'|'change:accuracyGeometry'|'change:altitude'|\r\n *    'change:altitudeAccuracy'|'change:heading'|'change:position'|'change:projection'|'change:speed'|'change:tracking'|\r\n *    'change:trackingOptions'} GeolocationObjectEventTypes\r\n */\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"./Observable\").OnSignature<GeolocationObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\r\n *   import(\"./Observable\").OnSignature<'error', GeolocationError, Return> &\r\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|GeolocationObjectEventTypes, Return> &\r\n *   import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return>} GeolocationOnSignature\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Helper class for providing HTML5 Geolocation capabilities.\r\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\r\n * is used to locate a user's position.\r\n *\r\n * To get notified of position changes and errors, register listeners for the generic\r\n * `change` event and the `error` event on your instance of {@link module:ol/Geolocation~Geolocation}.\r\n *\r\n * Example:\r\n *\r\n *     const geolocation = new Geolocation({\r\n *       // take the projection to use from the map's view\r\n *       projection: view.getProjection()\r\n *     });\r\n *     // listen to changes in position\r\n *     geolocation.on('change', function(evt) {\r\n *       console.log(geolocation.getPosition());\r\n *     });\r\n *     // listen to error\r\n *     geolocation.on('error', function(evt) {\r\n *       window.console.log(evt.message);\r\n *     });\r\n *\r\n * @fires GeolocationError\r\n * @api\r\n */\r\nclass Geolocation extends BaseObject {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    /***\r\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {GeolocationOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    options = options || {};\r\n\r\n    /**\r\n     * The unprojected (EPSG:4326) device position.\r\n     * @private\r\n     * @type {?import(\"./coordinate.js\").Coordinate}\r\n     */\r\n    this.position_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./proj.js\").TransformFunction}\r\n     */\r\n    this.transform_ = identityTransform;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.watchId_ = undefined;\r\n\r\n    this.addChangeListener(Property.PROJECTION, this.handleProjectionChanged_);\r\n    this.addChangeListener(Property.TRACKING, this.handleTrackingChanged_);\r\n\r\n    if (options.projection !== undefined) {\r\n      this.setProjection(options.projection);\r\n    }\r\n    if (options.trackingOptions !== undefined) {\r\n      this.setTrackingOptions(options.trackingOptions);\r\n    }\r\n\r\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\r\n  }\r\n\r\n  /**\r\n   * Clean up.\r\n   */\r\n  disposeInternal() {\r\n    this.setTracking(false);\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleProjectionChanged_() {\r\n    const projection = this.getProjection();\r\n    if (projection) {\r\n      this.transform_ = getTransformFromProjections(\r\n        getProjection('EPSG:4326'),\r\n        projection,\r\n      );\r\n      if (this.position_) {\r\n        this.set(Property.POSITION, this.transform_(this.position_));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleTrackingChanged_() {\r\n    if ('geolocation' in navigator) {\r\n      const tracking = this.getTracking();\r\n      if (tracking && this.watchId_ === undefined) {\r\n        this.watchId_ = navigator.geolocation.watchPosition(\r\n          this.positionChange_.bind(this),\r\n          this.positionError_.bind(this),\r\n          this.getTrackingOptions(),\r\n        );\r\n      } else if (!tracking && this.watchId_ !== undefined) {\r\n        navigator.geolocation.clearWatch(this.watchId_);\r\n        this.watchId_ = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {GeolocationPosition} position position event.\r\n   */\r\n  positionChange_(position) {\r\n    const coords = position.coords;\r\n    this.set(Property.ACCURACY, coords.accuracy);\r\n    this.set(\r\n      Property.ALTITUDE,\r\n      coords.altitude === null ? undefined : coords.altitude,\r\n    );\r\n    this.set(\r\n      Property.ALTITUDE_ACCURACY,\r\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy,\r\n    );\r\n    this.set(\r\n      Property.HEADING,\r\n      coords.heading === null ? undefined : toRadians(coords.heading),\r\n    );\r\n    if (!this.position_) {\r\n      this.position_ = [coords.longitude, coords.latitude];\r\n    } else {\r\n      this.position_[0] = coords.longitude;\r\n      this.position_[1] = coords.latitude;\r\n    }\r\n    const projectedPosition = this.transform_(this.position_);\r\n    this.set(Property.POSITION, projectedPosition.slice());\r\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\r\n    const geometry = circularPolygon(this.position_, coords.accuracy);\r\n    geometry.applyTransform(this.transform_);\r\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {GeolocationPositionError} error error object.\r\n   */\r\n  positionError_(error) {\r\n    this.dispatchEvent(new GeolocationError(error));\r\n  }\r\n\r\n  /**\r\n   * Get the accuracy of the position in meters.\r\n   * @return {number|undefined} The accuracy of the position measurement in\r\n   *     meters.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getAccuracy() {\r\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\r\n  }\r\n\r\n  /**\r\n   * Get a geometry of the position accuracy.\r\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getAccuracyGeometry() {\r\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (\r\n      this.get(Property.ACCURACY_GEOMETRY) || null\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the altitude associated with the position.\r\n   * @return {number|undefined} The altitude of the position in meters above mean\r\n   *     sea level.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getAltitude() {\r\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\r\n  }\r\n\r\n  /**\r\n   * Get the altitude accuracy of the position.\r\n   * @return {number|undefined} The accuracy of the altitude measurement in\r\n   *     meters.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getAltitudeAccuracy() {\r\n    return /** @type {number|undefined} */ (\r\n      this.get(Property.ALTITUDE_ACCURACY)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the heading as radians clockwise from North.\r\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\r\n   * is set to `true` in the tracking options.\r\n   * @return {number|undefined} The heading of the device in radians from north.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getHeading() {\r\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\r\n  }\r\n\r\n  /**\r\n   * Get the position of the device.\r\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\r\n   *     in the current projection.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getPosition() {\r\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\r\n      this.get(Property.POSITION)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the projection associated with the position.\r\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\r\n   *     reported in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getProjection() {\r\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (\r\n      this.get(Property.PROJECTION)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the speed in meters per second.\r\n   * @return {number|undefined} The instantaneous speed of the device in meters\r\n   *     per second.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getSpeed() {\r\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\r\n  }\r\n\r\n  /**\r\n   * Determine if the device location is being tracked.\r\n   * @return {boolean} The device location is being tracked.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getTracking() {\r\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\r\n  }\r\n\r\n  /**\r\n   * Get the tracking options.\r\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\r\n   * @return {PositionOptions|undefined} PositionOptions as defined by\r\n   *     the [HTML5 Geolocation spec\r\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\r\n   * @observable\r\n   * @api\r\n   */\r\n  getTrackingOptions() {\r\n    return /** @type {PositionOptions|undefined} */ (\r\n      this.get(Property.TRACKING_OPTIONS)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set the projection to use for transforming the coordinates.\r\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\r\n   *     reported in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setProjection(projection) {\r\n    this.set(Property.PROJECTION, getProjection(projection));\r\n  }\r\n\r\n  /**\r\n   * Enable or disable tracking.\r\n   * @param {boolean} tracking Enable tracking.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setTracking(tracking) {\r\n    this.set(Property.TRACKING, tracking);\r\n  }\r\n\r\n  /**\r\n   * Set the tracking options.\r\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\r\n   * @param {PositionOptions} options PositionOptions as defined by the\r\n   *     [HTML5 Geolocation spec\r\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\r\n   * @observable\r\n   * @api\r\n   */\r\n  setTrackingOptions(options) {\r\n    this.set(Property.TRACKING_OPTIONS, options);\r\n  }\r\n}\r\n\r\nexport default Geolocation;\r\n", "/**\r\n * @module ol/style/IconImageCache\r\n */\r\nimport ImageState from '../ImageState.js';\r\nimport {asArray} from '../color.js';\r\nimport {getSharedCanvasContext2D} from '../dom.js';\r\n\r\n/**\r\n * @classdesc\r\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\r\n */\r\nclass IconImageCache {\r\n  constructor() {\r\n    /**\r\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\r\n     * @private\r\n     */\r\n    this.cache_ = {};\r\n\r\n    /**\r\n     * @type {!Object<string, CanvasPattern>}\r\n     * @private\r\n     */\r\n    this.patternCache_ = {};\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.cacheSize_ = 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.maxCacheSize_ = 32;\r\n  }\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  clear() {\r\n    this.cache_ = {};\r\n    this.patternCache_ = {};\r\n    this.cacheSize_ = 0;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Can expire cache.\r\n   */\r\n  canExpireCache() {\r\n    return this.cacheSize_ > this.maxCacheSize_;\r\n  }\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  expire() {\r\n    if (this.canExpireCache()) {\r\n      let i = 0;\r\n      for (const key in this.cache_) {\r\n        const iconImage = this.cache_[key];\r\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\r\n          delete this.cache_[key];\r\n          delete this.patternCache_[key];\r\n          --this.cacheSize_;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {string} src Src.\r\n   * @param {?string} crossOrigin Cross origin.\r\n   * @param {import(\"../color.js\").Color|string|null} color Color.\r\n   * @return {import(\"./IconImage.js\").default} Icon image.\r\n   */\r\n  get(src, crossOrigin, color) {\r\n    const key = getCacheKey(src, crossOrigin, color);\r\n    return key in this.cache_ ? this.cache_[key] : null;\r\n  }\r\n\r\n  /**\r\n   * @param {string} src Src.\r\n   * @param {?string} crossOrigin Cross origin.\r\n   * @param {import(\"../color.js\").Color|string|null} color Color.\r\n   * @return {CanvasPattern} Icon image.\r\n   */\r\n  getPattern(src, crossOrigin, color) {\r\n    const key = getCacheKey(src, crossOrigin, color);\r\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\r\n  }\r\n\r\n  /**\r\n   * @param {string} src Src.\r\n   * @param {?string} crossOrigin Cross origin.\r\n   * @param {import(\"../color.js\").Color|string|null} color Color.\r\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\r\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\r\n   */\r\n  set(src, crossOrigin, color, iconImage, pattern) {\r\n    const key = getCacheKey(src, crossOrigin, color);\r\n    const update = key in this.cache_;\r\n    this.cache_[key] = iconImage;\r\n    if (pattern) {\r\n      if (iconImage.getImageState() === ImageState.IDLE) {\r\n        iconImage.load();\r\n      }\r\n      if (iconImage.getImageState() === ImageState.LOADING) {\r\n        iconImage.ready().then(() => {\r\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\r\n            iconImage.getImage(1),\r\n            'repeat',\r\n          );\r\n        });\r\n      } else {\r\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\r\n          iconImage.getImage(1),\r\n          'repeat',\r\n        );\r\n      }\r\n    }\r\n    if (!update) {\r\n      ++this.cacheSize_;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\r\n   * your map uses more than 32 different icon images and you are not caching icon\r\n   * styles on the application level.\r\n   * @param {number} maxCacheSize Cache max size.\r\n   * @api\r\n   */\r\n  setSize(maxCacheSize) {\r\n    this.maxCacheSize_ = maxCacheSize;\r\n    this.expire();\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} src Src.\r\n * @param {?string} crossOrigin Cross origin.\r\n * @param {import(\"../color.js\").Color|string|null} color Color.\r\n * @return {string} Cache key.\r\n */\r\nexport function getCacheKey(src, crossOrigin, color) {\r\n  const colorString = color ? asArray(color) : 'null';\r\n  return crossOrigin + ':' + src + ':' + colorString;\r\n}\r\n\r\nexport default IconImageCache;\r\n\r\n/**\r\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\r\n * {@link module:ol/style/Icon~Icon} images.\r\n * @api\r\n */\r\nexport const shared = new IconImageCache();\r\n", "/**\r\n * @module ol/style/IconImage\r\n */\r\n\r\nimport EventTarget from '../events/Target.js';\r\nimport EventType from '../events/EventType.js';\r\nimport ImageState from '../ImageState.js';\r\nimport {asString} from '../color.js';\r\nimport {createCanvasContext2D} from '../dom.js';\r\nimport {decodeFallback} from '../Image.js';\r\nimport {shared as iconImageCache} from './IconImageCache.js';\r\n\r\n/**\r\n * @type {CanvasRenderingContext2D}\r\n */\r\nlet taintedTestContext = null;\r\n\r\nclass IconImage extends EventTarget {\r\n  /**\r\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\r\n   * @param {string|undefined} src Src.\r\n   * @param {?string} crossOrigin Cross origin.\r\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\r\n   * @param {import(\"../color.js\").Color|string|null} color Color.\r\n   */\r\n  constructor(image, src, crossOrigin, imageState, color) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\r\n     */\r\n    this.hitDetectionImage_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\r\n     */\r\n    this.image_ = image;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|null}\r\n     */\r\n    this.crossOrigin_ = crossOrigin;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<number, HTMLCanvasElement>}\r\n     */\r\n    this.canvas_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../color.js\").Color|string|null}\r\n     */\r\n    this.color_ = color;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../ImageState.js\").default}\r\n     */\r\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size|null}\r\n     */\r\n    this.size_ =\r\n      image && image.width && image.height ? [image.width, image.height] : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|undefined}\r\n     */\r\n    this.src_ = src;\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.tainted_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Promise<void>|null}\r\n     */\r\n    this.ready_ = null;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  initializeImage_() {\r\n    this.image_ = new Image();\r\n    if (this.crossOrigin_ !== null) {\r\n      this.image_.crossOrigin = this.crossOrigin_;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @return {boolean} The image canvas is tainted.\r\n   */\r\n  isTainted_() {\r\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\r\n      if (!taintedTestContext) {\r\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\r\n          willReadFrequently: true,\r\n        });\r\n      }\r\n      taintedTestContext.drawImage(this.image_, 0, 0);\r\n      try {\r\n        taintedTestContext.getImageData(0, 0, 1, 1);\r\n        this.tainted_ = false;\r\n      } catch (e) {\r\n        taintedTestContext = null;\r\n        this.tainted_ = true;\r\n      }\r\n    }\r\n    return this.tainted_ === true;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  dispatchChangeEvent_() {\r\n    this.dispatchEvent(EventType.CHANGE);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleImageError_() {\r\n    this.imageState_ = ImageState.ERROR;\r\n    this.dispatchChangeEvent_();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleImageLoad_() {\r\n    this.imageState_ = ImageState.LOADED;\r\n    this.size_ = [this.image_.width, this.image_.height];\r\n    this.dispatchChangeEvent_();\r\n  }\r\n\r\n  /**\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\r\n   */\r\n  getImage(pixelRatio) {\r\n    if (!this.image_) {\r\n      this.initializeImage_();\r\n    }\r\n    this.replaceColor_(pixelRatio);\r\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\r\n  }\r\n\r\n  /**\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {number} Image or Canvas element.\r\n   */\r\n  getPixelRatio(pixelRatio) {\r\n    this.replaceColor_(pixelRatio);\r\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../ImageState.js\").default} Image state.\r\n   */\r\n  getImageState() {\r\n    return this.imageState_;\r\n  }\r\n\r\n  /**\r\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\r\n   */\r\n  getHitDetectionImage() {\r\n    if (!this.image_) {\r\n      this.initializeImage_();\r\n    }\r\n    if (!this.hitDetectionImage_) {\r\n      if (this.isTainted_()) {\r\n        const width = this.size_[0];\r\n        const height = this.size_[1];\r\n        const context = createCanvasContext2D(width, height);\r\n        context.fillRect(0, 0, width, height);\r\n        this.hitDetectionImage_ = context.canvas;\r\n      } else {\r\n        this.hitDetectionImage_ = this.image_;\r\n      }\r\n    }\r\n    return this.hitDetectionImage_;\r\n  }\r\n\r\n  /**\r\n   * Get the size of the icon (in pixels).\r\n   * @return {import(\"../size.js\").Size} Image size.\r\n   */\r\n  getSize() {\r\n    return this.size_;\r\n  }\r\n\r\n  /**\r\n   * @return {string|undefined} Image src.\r\n   */\r\n  getSrc() {\r\n    return this.src_;\r\n  }\r\n\r\n  /**\r\n   * Load not yet loaded URI.\r\n   */\r\n  load() {\r\n    if (this.imageState_ !== ImageState.IDLE) {\r\n      return;\r\n    }\r\n    if (!this.image_) {\r\n      this.initializeImage_();\r\n    }\r\n\r\n    this.imageState_ = ImageState.LOADING;\r\n    try {\r\n      if (this.src_ !== undefined) {\r\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\r\n      }\r\n    } catch (e) {\r\n      this.handleImageError_();\r\n    }\r\n    if (this.image_ instanceof HTMLImageElement) {\r\n      decodeFallback(this.image_, this.src_)\r\n        .then((image) => {\r\n          this.image_ = image;\r\n          this.handleImageLoad_();\r\n        })\r\n        .catch(this.handleImageError_.bind(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @private\r\n   */\r\n  replaceColor_(pixelRatio) {\r\n    if (\r\n      !this.color_ ||\r\n      this.canvas_[pixelRatio] ||\r\n      this.imageState_ !== ImageState.LOADED\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const image = this.image_;\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = Math.ceil(image.width * pixelRatio);\r\n    canvas.height = Math.ceil(image.height * pixelRatio);\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.scale(pixelRatio, pixelRatio);\r\n    ctx.drawImage(image, 0, 0);\r\n\r\n    ctx.globalCompositeOperation = 'multiply';\r\n    ctx.fillStyle = asString(this.color_);\r\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\r\n\r\n    ctx.globalCompositeOperation = 'destination-in';\r\n    ctx.drawImage(image, 0, 0);\r\n\r\n    this.canvas_[pixelRatio] = canvas;\r\n  }\r\n\r\n  /**\r\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\r\n   */\r\n  ready() {\r\n    if (!this.ready_) {\r\n      this.ready_ = new Promise((resolve) => {\r\n        if (\r\n          this.imageState_ === ImageState.LOADED ||\r\n          this.imageState_ === ImageState.ERROR\r\n        ) {\r\n          resolve();\r\n        } else {\r\n          this.addEventListener(EventType.CHANGE, function onChange() {\r\n            if (\r\n              this.imageState_ === ImageState.LOADED ||\r\n              this.imageState_ === ImageState.ERROR\r\n            ) {\r\n              this.removeEventListener(EventType.CHANGE, onChange);\r\n              resolve();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n    return this.ready_;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\r\n * @param {string|undefined} cacheKey Src.\r\n * @param {?string} crossOrigin Cross origin.\r\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\r\n * @param {import(\"../color.js\").Color|string|null} color Color.\r\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\r\n * @return {IconImage} Icon image.\r\n */\r\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\r\n  let iconImage =\r\n    cacheKey === undefined\r\n      ? undefined\r\n      : iconImageCache.get(cacheKey, crossOrigin, color);\r\n  if (!iconImage) {\r\n    iconImage = new IconImage(\r\n      image,\r\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\r\n      crossOrigin,\r\n      imageState,\r\n      color,\r\n    );\r\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\r\n  }\r\n  if (\r\n    pattern &&\r\n    iconImage &&\r\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\r\n  ) {\r\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\r\n  }\r\n  return iconImage;\r\n}\r\n\r\nexport default IconImage;\r\n", "/**\r\n * @module ol/style/Fill\r\n */\r\n\r\nimport ImageState from '../ImageState.js';\r\nimport {get as getIconImage} from './IconImage.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\r\n * gradient or pattern.\r\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\r\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\r\n * Default null; if null, the Canvas/renderer default black will be used.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Set fill style for vector features.\r\n * @api\r\n */\r\nclass Fill {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./IconImage.js\").default|null}\r\n     */\r\n    this.patternImage_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\r\n     */\r\n    this.color_ = null;\r\n    if (options.color !== undefined) {\r\n      this.setColor(options.color);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\r\n   * @return {Fill} The cloned style.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const color = this.getColor();\r\n    return new Fill({\r\n      color: Array.isArray(color) ? color.slice() : color || undefined,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the fill color.\r\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\r\n   * @api\r\n   */\r\n  getColor() {\r\n    return this.color_;\r\n  }\r\n\r\n  /**\r\n   * Set the color.\r\n   *\r\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\r\n   * @api\r\n   */\r\n  setColor(color) {\r\n    if (color !== null && typeof color === 'object' && 'src' in color) {\r\n      const patternImage = getIconImage(\r\n        null,\r\n        color.src,\r\n        'anonymous',\r\n        undefined,\r\n        color.offset ? null : color.color ? color.color : null,\r\n        !(color.offset && color.size),\r\n      );\r\n      patternImage.ready().then(() => {\r\n        this.patternImage_ = null;\r\n      });\r\n      if (patternImage.getImageState() === ImageState.IDLE) {\r\n        patternImage.load();\r\n      }\r\n      if (patternImage.getImageState() === ImageState.LOADING) {\r\n        this.patternImage_ = patternImage;\r\n      }\r\n    }\r\n    this.color_ = color;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} The fill style is loading an image pattern.\r\n   */\r\n  loading() {\r\n    return !!this.patternImage_;\r\n  }\r\n\r\n  /**\r\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\r\n   */\r\n  ready() {\r\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\r\n  }\r\n}\r\n\r\nexport default Fill;\r\n", "/**\r\n * @module ol/style/Stroke\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\r\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\r\n * Default null; if null, the Canvas/renderer default black will be used.\r\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\r\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\r\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\r\n * @property {number} [lineDashOffset=0] Line dash offset.\r\n * @property {number} [miterLimit=10] Miter limit.\r\n * @property {number} [width] Width.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Set stroke style for vector features.\r\n * Note that the defaults given are the Canvas defaults, which will be used if\r\n * option is not defined. The `get` functions return whatever was entered in\r\n * the options; they will not return the default.\r\n * @api\r\n */\r\nclass Stroke {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\r\n     */\r\n    this.color_ = options.color !== undefined ? options.color : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasLineCap|undefined}\r\n     */\r\n    this.lineCap_ = options.lineCap;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>|null}\r\n     */\r\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lineDashOffset_ = options.lineDashOffset;\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasLineJoin|undefined}\r\n     */\r\n    this.lineJoin_ = options.lineJoin;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.miterLimit_ = options.miterLimit;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.width_ = options.width;\r\n  }\r\n\r\n  /**\r\n   * Clones the style.\r\n   * @return {Stroke} The cloned style.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const color = this.getColor();\r\n    return new Stroke({\r\n      color: Array.isArray(color) ? color.slice() : color || undefined,\r\n      lineCap: this.getLineCap(),\r\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\r\n      lineDashOffset: this.getLineDashOffset(),\r\n      lineJoin: this.getLineJoin(),\r\n      miterLimit: this.getMiterLimit(),\r\n      width: this.getWidth(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the stroke color.\r\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\r\n   * @api\r\n   */\r\n  getColor() {\r\n    return this.color_;\r\n  }\r\n\r\n  /**\r\n   * Get the line cap type for the stroke.\r\n   * @return {CanvasLineCap|undefined} Line cap.\r\n   * @api\r\n   */\r\n  getLineCap() {\r\n    return this.lineCap_;\r\n  }\r\n\r\n  /**\r\n   * Get the line dash style for the stroke.\r\n   * @return {Array<number>|null} Line dash.\r\n   * @api\r\n   */\r\n  getLineDash() {\r\n    return this.lineDash_;\r\n  }\r\n\r\n  /**\r\n   * Get the line dash offset for the stroke.\r\n   * @return {number|undefined} Line dash offset.\r\n   * @api\r\n   */\r\n  getLineDashOffset() {\r\n    return this.lineDashOffset_;\r\n  }\r\n\r\n  /**\r\n   * Get the line join type for the stroke.\r\n   * @return {CanvasLineJoin|undefined} Line join.\r\n   * @api\r\n   */\r\n  getLineJoin() {\r\n    return this.lineJoin_;\r\n  }\r\n\r\n  /**\r\n   * Get the miter limit for the stroke.\r\n   * @return {number|undefined} Miter limit.\r\n   * @api\r\n   */\r\n  getMiterLimit() {\r\n    return this.miterLimit_;\r\n  }\r\n\r\n  /**\r\n   * Get the stroke width.\r\n   * @return {number|undefined} Width.\r\n   * @api\r\n   */\r\n  getWidth() {\r\n    return this.width_;\r\n  }\r\n\r\n  /**\r\n   * Set the color.\r\n   *\r\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\r\n   * @api\r\n   */\r\n  setColor(color) {\r\n    this.color_ = color;\r\n  }\r\n\r\n  /**\r\n   * Set the line cap.\r\n   *\r\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\r\n   * @api\r\n   */\r\n  setLineCap(lineCap) {\r\n    this.lineCap_ = lineCap;\r\n  }\r\n\r\n  /**\r\n   * Set the line dash.\r\n   *\r\n   * @param {Array<number>|null} lineDash Line dash.\r\n   * @api\r\n   */\r\n  setLineDash(lineDash) {\r\n    this.lineDash_ = lineDash;\r\n  }\r\n\r\n  /**\r\n   * Set the line dash offset.\r\n   *\r\n   * @param {number|undefined} lineDashOffset Line dash offset.\r\n   * @api\r\n   */\r\n  setLineDashOffset(lineDashOffset) {\r\n    this.lineDashOffset_ = lineDashOffset;\r\n  }\r\n\r\n  /**\r\n   * Set the line join.\r\n   *\r\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\r\n   * @api\r\n   */\r\n  setLineJoin(lineJoin) {\r\n    this.lineJoin_ = lineJoin;\r\n  }\r\n\r\n  /**\r\n   * Set the miter limit.\r\n   *\r\n   * @param {number|undefined} miterLimit Miter limit.\r\n   * @api\r\n   */\r\n  setMiterLimit(miterLimit) {\r\n    this.miterLimit_ = miterLimit;\r\n  }\r\n\r\n  /**\r\n   * Set the width.\r\n   *\r\n   * @param {number|undefined} width Width.\r\n   * @api\r\n   */\r\n  setWidth(width) {\r\n    this.width_ = width;\r\n  }\r\n}\r\n\r\nexport default Stroke;\r\n", "/**\r\n * @module ol/style/Image\r\n */\r\nimport {abstract} from '../util.js';\r\nimport {toSize} from '../size.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} opacity Opacity.\r\n * @property {boolean} rotateWithView If the image should get rotated with the view.\r\n * @property {number} rotation Rotation.\r\n * @property {number|import(\"../size.js\").Size} scale Scale.\r\n * @property {Array<number>} displacement Displacement.\r\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A base class used for creating subclasses and not instantiated in\r\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\r\n * {@link module:ol/style/RegularShape~RegularShape}.\r\n * @abstract\r\n * @api\r\n */\r\nclass ImageStyle {\r\n  /**\r\n   * @param {Options} options Options.\r\n   */\r\n  constructor(options) {\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.opacity_ = options.opacity;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.rotateWithView_ = options.rotateWithView;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.rotation_ = options.rotation;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|import(\"../size.js\").Size}\r\n     */\r\n    this.scale_ = options.scale;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.scaleArray_ = toSize(options.scale);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.displacement_ = options.displacement;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import('../style/Style.js').DeclutterMode}\r\n     */\r\n    this.declutterMode_ = options.declutterMode;\r\n  }\r\n\r\n  /**\r\n   * Clones the style.\r\n   * @return {ImageStyle} The cloned style.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const scale = this.getScale();\r\n    return new ImageStyle({\r\n      opacity: this.getOpacity(),\r\n      scale: Array.isArray(scale) ? scale.slice() : scale,\r\n      rotation: this.getRotation(),\r\n      rotateWithView: this.getRotateWithView(),\r\n      displacement: this.getDisplacement().slice(),\r\n      declutterMode: this.getDeclutterMode(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the symbolizer opacity.\r\n   * @return {number} Opacity.\r\n   * @api\r\n   */\r\n  getOpacity() {\r\n    return this.opacity_;\r\n  }\r\n\r\n  /**\r\n   * Determine whether the symbolizer rotates with the map.\r\n   * @return {boolean} Rotate with map.\r\n   * @api\r\n   */\r\n  getRotateWithView() {\r\n    return this.rotateWithView_;\r\n  }\r\n\r\n  /**\r\n   * Get the symoblizer rotation.\r\n   * @return {number} Rotation.\r\n   * @api\r\n   */\r\n  getRotation() {\r\n    return this.rotation_;\r\n  }\r\n\r\n  /**\r\n   * Get the symbolizer scale.\r\n   * @return {number|import(\"../size.js\").Size} Scale.\r\n   * @api\r\n   */\r\n  getScale() {\r\n    return this.scale_;\r\n  }\r\n\r\n  /**\r\n   * Get the symbolizer scale array.\r\n   * @return {import(\"../size.js\").Size} Scale array.\r\n   */\r\n  getScaleArray() {\r\n    return this.scaleArray_;\r\n  }\r\n\r\n  /**\r\n   * Get the displacement of the shape\r\n   * @return {Array<number>} Shape's center displacement\r\n   * @api\r\n   */\r\n  getDisplacement() {\r\n    return this.displacement_;\r\n  }\r\n\r\n  /**\r\n   * Get the declutter mode of the shape\r\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\r\n   * @api\r\n   */\r\n  getDeclutterMode() {\r\n    return this.declutterMode_;\r\n  }\r\n\r\n  /**\r\n   * Get the anchor point in pixels. The anchor determines the center point for the\r\n   * symbolizer.\r\n   * @abstract\r\n   * @return {Array<number>} Anchor.\r\n   */\r\n  getAnchor() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Get the image element for the symbolizer.\r\n   * @abstract\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {import('../DataTile.js').ImageLike} Image element.\r\n   */\r\n  getImage(pixelRatio) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {import('../DataTile.js').ImageLike} Image element.\r\n   */\r\n  getHitDetectionImage() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Get the image pixel ratio.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {number} Pixel ratio.\r\n   */\r\n  getPixelRatio(pixelRatio) {\r\n    return 1;\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {import(\"../ImageState.js\").default} Image state.\r\n   */\r\n  getImageState() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {import(\"../size.js\").Size} Image size.\r\n   */\r\n  getImageSize() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Get the origin of the symbolizer.\r\n   * @abstract\r\n   * @return {Array<number>} Origin.\r\n   */\r\n  getOrigin() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Get the size of the symbolizer (in pixels).\r\n   * @abstract\r\n   * @return {import(\"../size.js\").Size} Size.\r\n   */\r\n  getSize() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Set the displacement.\r\n   *\r\n   * @param {Array<number>} displacement Displacement.\r\n   * @api\r\n   */\r\n  setDisplacement(displacement) {\r\n    this.displacement_ = displacement;\r\n  }\r\n\r\n  /**\r\n   * Set the opacity.\r\n   *\r\n   * @param {number} opacity Opacity.\r\n   * @api\r\n   */\r\n  setOpacity(opacity) {\r\n    this.opacity_ = opacity;\r\n  }\r\n\r\n  /**\r\n   * Set whether to rotate the style with the view.\r\n   *\r\n   * @param {boolean} rotateWithView Rotate with map.\r\n   * @api\r\n   */\r\n  setRotateWithView(rotateWithView) {\r\n    this.rotateWithView_ = rotateWithView;\r\n  }\r\n\r\n  /**\r\n   * Set the rotation.\r\n   *\r\n   * @param {number} rotation Rotation.\r\n   * @api\r\n   */\r\n  setRotation(rotation) {\r\n    this.rotation_ = rotation;\r\n  }\r\n\r\n  /**\r\n   * Set the scale.\r\n   *\r\n   * @param {number|import(\"../size.js\").Size} scale Scale.\r\n   * @api\r\n   */\r\n  setScale(scale) {\r\n    this.scale_ = scale;\r\n    this.scaleArray_ = toSize(scale);\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\r\n   */\r\n  listenImageChange(listener) {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * Load not yet loaded URI.\r\n   * @abstract\r\n   */\r\n  load() {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\r\n   */\r\n  unlistenImageChange(listener) {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\r\n   */\r\n  ready() {\r\n    return Promise.resolve();\r\n  }\r\n}\r\n\r\nexport default ImageStyle;\r\n", "/**\r\n * @module ol/colorlike\r\n */\r\nimport ImageState from './ImageState.js';\r\nimport {createCanvasContext2D} from './dom.js';\r\nimport {get as getIconImage} from './style/IconImage.js';\r\nimport {shared as iconCache} from './style/IconImageCache.js';\r\nimport {toString} from './color.js';\r\n\r\n/**\r\n * @typedef {Object} PatternDescriptor\r\n * @property {string} src Pattern image URL\r\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\r\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\r\n * Use this together with `offset` when the pattern image is a sprite sheet.\r\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\r\n * Use this together with `size` when the pattern image is a sprite sheet.\r\n */\r\n\r\n/**\r\n * A type accepted by CanvasRenderingContext2D.fillStyle\r\n * or CanvasRenderingContext2D.strokeStyle.\r\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\r\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\r\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\r\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\r\n * must be a factor of two (2, 4, 8, ..., 512).\r\n *\r\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\r\n * @api\r\n */\r\n\r\n/**\r\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\r\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\r\n * @api\r\n */\r\nexport function asColorLike(color) {\r\n  if (!color) {\r\n    return null;\r\n  }\r\n  if (Array.isArray(color)) {\r\n    return toString(color);\r\n  }\r\n  if (typeof color === 'object' && 'src' in color) {\r\n    return asCanvasPattern(color);\r\n  }\r\n  return color;\r\n}\r\n\r\n/**\r\n * @param {PatternDescriptor} pattern Pattern descriptor.\r\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\r\n * PatternDescriptor was not found in the icon image cache.\r\n */\r\nfunction asCanvasPattern(pattern) {\r\n  if (!pattern.offset || !pattern.size) {\r\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\r\n  }\r\n\r\n  const cacheKey = pattern.src + ':' + pattern.offset;\r\n\r\n  const canvasPattern = iconCache.getPattern(\r\n    cacheKey,\r\n    undefined,\r\n    pattern.color,\r\n  );\r\n  if (canvasPattern) {\r\n    return canvasPattern;\r\n  }\r\n\r\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\r\n  if (iconImage.getImageState() !== ImageState.LOADED) {\r\n    return null;\r\n  }\r\n  const patternCanvasContext = createCanvasContext2D(\r\n    pattern.size[0],\r\n    pattern.size[1],\r\n  );\r\n  patternCanvasContext.drawImage(\r\n    iconImage.getImage(1),\r\n    pattern.offset[0],\r\n    pattern.offset[1],\r\n    pattern.size[0],\r\n    pattern.size[1],\r\n    0,\r\n    0,\r\n    pattern.size[0],\r\n    pattern.size[1],\r\n  );\r\n  getIconImage(\r\n    patternCanvasContext.canvas,\r\n    cacheKey,\r\n    undefined,\r\n    ImageState.LOADED,\r\n    pattern.color,\r\n    true,\r\n  );\r\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\r\n}\r\n", "/**\r\n * @module ol/css\r\n */\r\n\r\n/**\r\n * @typedef {Object} FontParameters\r\n * @property {string} style Style.\r\n * @property {string} variant Variant.\r\n * @property {string} weight Weight.\r\n * @property {string} size Size.\r\n * @property {string} lineHeight LineHeight.\r\n * @property {string} family Family.\r\n * @property {Array<string>} families Families.\r\n */\r\n\r\n/**\r\n * The CSS class for hidden feature.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_HIDDEN = 'ol-hidden';\r\n\r\n/**\r\n * The CSS class that we'll give the DOM elements to have them selectable.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_SELECTABLE = 'ol-selectable';\r\n\r\n/**\r\n * The CSS class that we'll give the DOM elements to have them unselectable.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\r\n\r\n/**\r\n * The CSS class for unsupported feature.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\r\n\r\n/**\r\n * The CSS class for controls.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_CONTROL = 'ol-control';\r\n\r\n/**\r\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\r\n * to those elements which usually can be expanded.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_COLLAPSED = 'ol-collapsed';\r\n\r\n/**\r\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\r\n * @type {RegExp}\r\n */\r\nconst fontRegEx = new RegExp(\r\n  [\r\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\r\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\r\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\r\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\r\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\r\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\r\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\r\n  ].join(''),\r\n  'i',\r\n);\r\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\r\nconst fontRegExMatchIndex = [\r\n  'style',\r\n  'variant',\r\n  'weight',\r\n  'size',\r\n  'lineHeight',\r\n  'family',\r\n];\r\n\r\n/**\r\n * Get the list of font families from a font spec.  Note that this doesn't work\r\n * for font families that have commas in them.\r\n * @param {string} fontSpec The CSS font property.\r\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\r\n */\r\nexport const getFontParameters = function (fontSpec) {\r\n  const match = fontSpec.match(fontRegEx);\r\n  if (!match) {\r\n    return null;\r\n  }\r\n  const style = /** @type {FontParameters} */ ({\r\n    lineHeight: 'normal',\r\n    size: '1.2em',\r\n    style: 'normal',\r\n    weight: 'normal',\r\n    variant: 'normal',\r\n  });\r\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\r\n    const value = match[i + 1];\r\n    if (value !== undefined) {\r\n      style[fontRegExMatchIndex[i]] = value;\r\n    }\r\n  }\r\n  style.families = style.family.split(/,\\s?/);\r\n  return style;\r\n};\r\n", "/**\r\n * @module ol/render/canvas\r\n */\r\nimport BaseObject from '../Object.js';\r\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\r\nimport {clear} from '../obj.js';\r\nimport {createCanvasContext2D} from '../dom.js';\r\nimport {getFontParameters} from '../css.js';\r\n\r\n/**\r\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\r\n */\r\n\r\n/**\r\n * @typedef {Object} FillState\r\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\r\n */\r\n\r\n/**\r\n * @typedef Label\r\n * @property {number} width Width.\r\n * @property {number} height Height.\r\n * @property {Array<string|number>} contextInstructions ContextInstructions.\r\n */\r\n\r\n/**\r\n * @typedef {Object} FillStrokeState\r\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\r\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\r\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\r\n * @property {Array<number>} currentLineDash Current LineDash.\r\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\r\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\r\n * @property {number} [currentLineWidth] Current LineWidth.\r\n * @property {number} [currentMiterLimit] Current MiterLimit.\r\n * @property {number} [lastStroke] Last stroke.\r\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\r\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\r\n * @property {CanvasLineCap} [lineCap] LineCap.\r\n * @property {Array<number>} lineDash LineDash.\r\n * @property {number} [lineDashOffset] LineDashOffset.\r\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\r\n * @property {number} [lineWidth] LineWidth.\r\n * @property {number} [miterLimit] MiterLimit.\r\n * @property {number} [fillPatternScale] Fill pattern scale.\r\n */\r\n\r\n/**\r\n * @typedef {Object} StrokeState\r\n * @property {CanvasLineCap} lineCap LineCap.\r\n * @property {Array<number>} lineDash LineDash.\r\n * @property {number} lineDashOffset LineDashOffset.\r\n * @property {CanvasLineJoin} lineJoin LineJoin.\r\n * @property {number} lineWidth LineWidth.\r\n * @property {number} miterLimit MiterLimit.\r\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\r\n */\r\n\r\n/**\r\n * @typedef {Object} TextState\r\n * @property {string} font Font.\r\n * @property {CanvasTextAlign} [textAlign] TextAlign.\r\n * @property {number} [repeat] Repeat.\r\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\r\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\r\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\r\n * @property {number} [maxAngle] MaxAngle.\r\n * @property {boolean} [overflow] Overflow.\r\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\r\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\r\n * @property {import(\"../size.js\").Size} [scale] Scale.\r\n * @property {Array<number>} [padding] Padding.\r\n */\r\n\r\n/**\r\n * @typedef {Object} SerializableInstructions\r\n * @property {Array<*>} instructions The rendering instructions.\r\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\r\n * @property {Array<number>} coordinates The array of all coordinates.\r\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\r\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\r\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\r\n */\r\n\r\n/**\r\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\r\n */\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport const defaultFont = '10px sans-serif';\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport const defaultFillStyle = '#000';\r\n\r\n/**\r\n * @const\r\n * @type {CanvasLineCap}\r\n */\r\nexport const defaultLineCap = 'round';\r\n\r\n/**\r\n * @const\r\n * @type {Array<number>}\r\n */\r\nexport const defaultLineDash = [];\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const defaultLineDashOffset = 0;\r\n\r\n/**\r\n * @const\r\n * @type {CanvasLineJoin}\r\n */\r\nexport const defaultLineJoin = 'round';\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const defaultMiterLimit = 10;\r\n\r\n/**\r\n * @const\r\n * @type {import(\"../colorlike.js\").ColorLike}\r\n */\r\nexport const defaultStrokeStyle = '#000';\r\n\r\n/**\r\n * @const\r\n * @type {CanvasTextAlign}\r\n */\r\nexport const defaultTextAlign = 'center';\r\n\r\n/**\r\n * @const\r\n * @type {CanvasTextBaseline}\r\n */\r\nexport const defaultTextBaseline = 'middle';\r\n\r\n/**\r\n * @const\r\n * @type {Array<number>}\r\n */\r\nexport const defaultPadding = [0, 0, 0, 0];\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const defaultLineWidth = 1;\r\n\r\n/**\r\n * @type {BaseObject}\r\n */\r\nexport const checkedFonts = new BaseObject();\r\n\r\n/**\r\n * @type {CanvasRenderingContext2D}\r\n */\r\nlet measureContext = null;\r\n\r\n/**\r\n * @type {string}\r\n */\r\nlet measureFont;\r\n\r\n/**\r\n * @type {!Object<string, number>}\r\n */\r\nexport const textHeights = {};\r\n\r\n/**\r\n * Clears the label cache when a font becomes available.\r\n * @param {string} fontSpec CSS font spec.\r\n */\r\nexport const registerFont = (function () {\r\n  const retries = 100;\r\n  const size = '32px ';\r\n  const referenceFonts = ['monospace', 'serif'];\r\n  const len = referenceFonts.length;\r\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\r\n  let interval, referenceWidth;\r\n\r\n  /**\r\n   * @param {string} fontStyle Css font-style\r\n   * @param {string} fontWeight Css font-weight\r\n   * @param {*} fontFamily Css font-family\r\n   * @return {boolean} Font with style and weight is available\r\n   */\r\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\r\n    let available = true;\r\n    for (let i = 0; i < len; ++i) {\r\n      const referenceFont = referenceFonts[i];\r\n      referenceWidth = measureTextWidth(\r\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\r\n        text,\r\n      );\r\n      if (fontFamily != referenceFont) {\r\n        const width = measureTextWidth(\r\n          fontStyle +\r\n            ' ' +\r\n            fontWeight +\r\n            ' ' +\r\n            size +\r\n            fontFamily +\r\n            ',' +\r\n            referenceFont,\r\n          text,\r\n        );\r\n        // If width and referenceWidth are the same, then the fallback was used\r\n        // instead of the font we wanted, so the font is not available.\r\n        available = available && width != referenceWidth;\r\n      }\r\n    }\r\n    if (available) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function check() {\r\n    let done = true;\r\n    const fonts = checkedFonts.getKeys();\r\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\r\n      const font = fonts[i];\r\n      if (checkedFonts.get(font) < retries) {\r\n        if (isAvailable.apply(this, font.split('\\n'))) {\r\n          clear(textHeights);\r\n          // Make sure that loaded fonts are picked up by Safari\r\n          measureContext = null;\r\n          measureFont = undefined;\r\n          checkedFonts.set(font, retries);\r\n        } else {\r\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\r\n          done = false;\r\n        }\r\n      }\r\n    }\r\n    if (done) {\r\n      clearInterval(interval);\r\n      interval = undefined;\r\n    }\r\n  }\r\n\r\n  return function (fontSpec) {\r\n    const font = getFontParameters(fontSpec);\r\n    if (!font) {\r\n      return;\r\n    }\r\n    const families = font.families;\r\n    for (let i = 0, ii = families.length; i < ii; ++i) {\r\n      const family = families[i];\r\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\r\n      if (checkedFonts.get(key) === undefined) {\r\n        checkedFonts.set(key, retries, true);\r\n        if (!isAvailable(font.style, font.weight, family)) {\r\n          checkedFonts.set(key, 0, true);\r\n          if (interval === undefined) {\r\n            interval = setInterval(check, 32);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n})();\r\n\r\n/**\r\n * @param {string} font Font to use for measuring.\r\n * @return {import(\"../size.js\").Size} Measurement.\r\n */\r\nexport const measureTextHeight = (function () {\r\n  /**\r\n   * @type {HTMLDivElement}\r\n   */\r\n  let measureElement;\r\n  return function (fontSpec) {\r\n    let height = textHeights[fontSpec];\r\n    if (height == undefined) {\r\n      if (WORKER_OFFSCREEN_CANVAS) {\r\n        const font = getFontParameters(fontSpec);\r\n        const metrics = measureText(fontSpec, 'Žg');\r\n        const lineHeight = isNaN(Number(font.lineHeight))\r\n          ? 1.2\r\n          : Number(font.lineHeight);\r\n        height =\r\n          lineHeight *\r\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\r\n      } else {\r\n        if (!measureElement) {\r\n          measureElement = document.createElement('div');\r\n          measureElement.innerHTML = 'M';\r\n          measureElement.style.minHeight = '0';\r\n          measureElement.style.maxHeight = 'none';\r\n          measureElement.style.height = 'auto';\r\n          measureElement.style.padding = '0';\r\n          measureElement.style.border = 'none';\r\n          measureElement.style.position = 'absolute';\r\n          measureElement.style.display = 'block';\r\n          measureElement.style.left = '-99999px';\r\n        }\r\n        measureElement.style.font = fontSpec;\r\n        document.body.appendChild(measureElement);\r\n        height = measureElement.offsetHeight;\r\n        document.body.removeChild(measureElement);\r\n      }\r\n      textHeights[fontSpec] = height;\r\n    }\r\n    return height;\r\n  };\r\n})();\r\n\r\n/**\r\n * @param {string} font Font.\r\n * @param {string} text Text.\r\n * @return {TextMetrics} Text metrics.\r\n */\r\nfunction measureText(font, text) {\r\n  if (!measureContext) {\r\n    measureContext = createCanvasContext2D(1, 1);\r\n  }\r\n  if (font != measureFont) {\r\n    measureContext.font = font;\r\n    measureFont = measureContext.font;\r\n  }\r\n  return measureContext.measureText(text);\r\n}\r\n\r\n/**\r\n * @param {string} font Font.\r\n * @param {string} text Text.\r\n * @return {number} Width.\r\n */\r\nexport function measureTextWidth(font, text) {\r\n  return measureText(font, text).width;\r\n}\r\n\r\n/**\r\n * Measure text width using a cache.\r\n * @param {string} font The font.\r\n * @param {string} text The text to measure.\r\n * @param {Object<string, number>} cache A lookup of cached widths by text.\r\n * @return {number} The text width.\r\n */\r\nexport function measureAndCacheTextWidth(font, text, cache) {\r\n  if (text in cache) {\r\n    return cache[text];\r\n  }\r\n  const width = text\r\n    .split('\\n')\r\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\r\n  cache[text] = width;\r\n  return width;\r\n}\r\n\r\n/**\r\n * @param {TextState} baseStyle Base style.\r\n * @param {Array<string>} chunks Text chunks to measure.\r\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\r\n */\r\nexport function getTextDimensions(baseStyle, chunks) {\r\n  const widths = [];\r\n  const heights = [];\r\n  const lineWidths = [];\r\n  let width = 0;\r\n  let lineWidth = 0;\r\n  let height = 0;\r\n  let lineHeight = 0;\r\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\r\n    const text = chunks[i];\r\n    if (text === '\\n' || i === ii) {\r\n      width = Math.max(width, lineWidth);\r\n      lineWidths.push(lineWidth);\r\n      lineWidth = 0;\r\n      height += lineHeight;\r\n      continue;\r\n    }\r\n    const font = chunks[i + 1] || baseStyle.font;\r\n    const currentWidth = measureTextWidth(font, text);\r\n    widths.push(currentWidth);\r\n    lineWidth += currentWidth;\r\n    const currentHeight = measureTextHeight(font);\r\n    heights.push(currentHeight);\r\n    lineHeight = Math.max(lineHeight, currentHeight);\r\n  }\r\n  return {width, height, widths, heights, lineWidths};\r\n}\r\n\r\n/**\r\n * @param {CanvasRenderingContext2D} context Context.\r\n * @param {number} rotation Rotation.\r\n * @param {number} offsetX X offset.\r\n * @param {number} offsetY Y offset.\r\n */\r\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\r\n  if (rotation !== 0) {\r\n    context.translate(offsetX, offsetY);\r\n    context.rotate(rotation);\r\n    context.translate(-offsetX, -offsetY);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\r\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\r\n * @param {number} opacity Opacity.\r\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\r\n * @param {number} originX Origin X.\r\n * @param {number} originY Origin Y.\r\n * @param {number} w Width.\r\n * @param {number} h Height.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {import(\"../size.js\").Size} scale Scale.\r\n */\r\nexport function drawImageOrLabel(\r\n  context,\r\n  transform,\r\n  opacity,\r\n  labelOrImage,\r\n  originX,\r\n  originY,\r\n  w,\r\n  h,\r\n  x,\r\n  y,\r\n  scale,\r\n) {\r\n  context.save();\r\n\r\n  if (opacity !== 1) {\r\n    if (context.globalAlpha === undefined) {\r\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\r\n    } else {\r\n      context.globalAlpha *= opacity;\r\n    }\r\n  }\r\n  if (transform) {\r\n    context.transform.apply(context, transform);\r\n  }\r\n\r\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\r\n    // label\r\n    context.translate(x, y);\r\n    context.scale(scale[0], scale[1]);\r\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\r\n  } else if (scale[0] < 0 || scale[1] < 0) {\r\n    // flipped image\r\n    context.translate(x, y);\r\n    context.scale(scale[0], scale[1]);\r\n    context.drawImage(\r\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\r\n        labelOrImage\r\n      ),\r\n      originX,\r\n      originY,\r\n      w,\r\n      h,\r\n      0,\r\n      0,\r\n      w,\r\n      h,\r\n    );\r\n  } else {\r\n    // if image not flipped translate and scale can be avoided\r\n    context.drawImage(\r\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\r\n        labelOrImage\r\n      ),\r\n      originX,\r\n      originY,\r\n      w,\r\n      h,\r\n      x,\r\n      y,\r\n      w * scale[0],\r\n      h * scale[1],\r\n    );\r\n  }\r\n\r\n  context.restore();\r\n}\r\n\r\n/**\r\n * @param {Label} label Label.\r\n * @param {CanvasRenderingContext2D} context Context.\r\n */\r\nfunction executeLabelInstructions(label, context) {\r\n  const contextInstructions = label.contextInstructions;\r\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\r\n    if (Array.isArray(contextInstructions[i + 1])) {\r\n      context[contextInstructions[i]].apply(\r\n        context,\r\n        contextInstructions[i + 1],\r\n      );\r\n    } else {\r\n      context[contextInstructions[i]] = contextInstructions[i + 1];\r\n    }\r\n  }\r\n}\r\n", "/**\r\n * @module ol/style/RegularShape\r\n */\r\n\r\nimport ImageState from '../ImageState.js';\r\nimport ImageStyle from './Image.js';\r\nimport {asArray} from '../color.js';\r\nimport {asColorLike} from '../colorlike.js';\r\nimport {createCanvasContext2D} from '../dom.js';\r\nimport {\r\n  defaultFillStyle,\r\n  defaultLineCap,\r\n  defaultLineJoin,\r\n  defaultLineWidth,\r\n  defaultMiterLimit,\r\n  defaultStrokeStyle,\r\n} from '../render/canvas.js';\r\n\r\n/**\r\n * Specify radius for regular polygons, or both radius and radius2 for stars.\r\n * @typedef {Object} Options\r\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\r\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\r\n * is the number of sides.\r\n * @property {number} radius Radius of a regular polygon.\r\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\r\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\r\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\r\n * Positive values will shift the shape right and up.\r\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\r\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\r\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\r\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\r\n * result may be obtained with appropriate settings for `radius` and `radius2`.\r\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\r\n */\r\n\r\n/**\r\n * @typedef {Object} RenderOptions\r\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\r\n * @property {number} strokeWidth StrokeWidth.\r\n * @property {number} size Size.\r\n * @property {CanvasLineCap} lineCap LineCap.\r\n * @property {Array<number>|null} lineDash LineDash.\r\n * @property {number} lineDashOffset LineDashOffset.\r\n * @property {CanvasLineJoin} lineJoin LineJoin.\r\n * @property {number} miterLimit MiterLimit.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Set regular shape style for vector features. The resulting shape will be\r\n * a regular polygon when `radius` is provided, or a star when both `radius` and\r\n * `radius2` are provided.\r\n * @api\r\n */\r\nclass RegularShape extends ImageStyle {\r\n  /**\r\n   * @param {Options} options Options.\r\n   */\r\n  constructor(options) {\r\n    super({\r\n      opacity: 1,\r\n      rotateWithView:\r\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\r\n      rotation: options.rotation !== undefined ? options.rotation : 0,\r\n      scale: options.scale !== undefined ? options.scale : 1,\r\n      displacement:\r\n        options.displacement !== undefined ? options.displacement : [0, 0],\r\n      declutterMode: options.declutterMode,\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<number, HTMLCanvasElement>}\r\n     */\r\n    this.canvases_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement|null}\r\n     */\r\n    this.hitDetectionCanvas_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Fill.js\").default|null}\r\n     */\r\n    this.fill_ = options.fill !== undefined ? options.fill : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.origin_ = [0, 0];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.points_ = options.points;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.radius_ = options.radius;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.radius2_ = options.radius2;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Stroke.js\").default|null}\r\n     */\r\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.size_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {RenderOptions}\r\n     */\r\n    this.renderOptions_;\r\n\r\n    this.imageState_ =\r\n      this.fill_ && this.fill_.loading()\r\n        ? ImageState.LOADING\r\n        : ImageState.LOADED;\r\n    if (this.imageState_ === ImageState.LOADING) {\r\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\r\n    }\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * Clones the style.\r\n   * @return {RegularShape} The cloned style.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const scale = this.getScale();\r\n    const style = new RegularShape({\r\n      fill: this.getFill() ? this.getFill().clone() : undefined,\r\n      points: this.getPoints(),\r\n      radius: this.getRadius(),\r\n      radius2: this.getRadius2(),\r\n      angle: this.getAngle(),\r\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\r\n      rotation: this.getRotation(),\r\n      rotateWithView: this.getRotateWithView(),\r\n      scale: Array.isArray(scale) ? scale.slice() : scale,\r\n      displacement: this.getDisplacement().slice(),\r\n      declutterMode: this.getDeclutterMode(),\r\n    });\r\n    style.setOpacity(this.getOpacity());\r\n    return style;\r\n  }\r\n\r\n  /**\r\n   * Get the anchor point in pixels. The anchor determines the center point for the\r\n   * symbolizer.\r\n   * @return {Array<number>} Anchor.\r\n   * @api\r\n   */\r\n  getAnchor() {\r\n    const size = this.size_;\r\n    const displacement = this.getDisplacement();\r\n    const scale = this.getScaleArray();\r\n    // anchor is scaled by renderer but displacement should not be scaled\r\n    // so divide by scale here\r\n    return [\r\n      size[0] / 2 - displacement[0] / scale[0],\r\n      size[1] / 2 + displacement[1] / scale[1],\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Get the angle used in generating the shape.\r\n   * @return {number} Shape's rotation in radians.\r\n   * @api\r\n   */\r\n  getAngle() {\r\n    return this.angle_;\r\n  }\r\n\r\n  /**\r\n   * Get the fill style for the shape.\r\n   * @return {import(\"./Fill.js\").default|null} Fill style.\r\n   * @api\r\n   */\r\n  getFill() {\r\n    return this.fill_;\r\n  }\r\n\r\n  /**\r\n   * Set the fill style.\r\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\r\n   * @api\r\n   */\r\n  setFill(fill) {\r\n    this.fill_ = fill;\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @return {HTMLCanvasElement} Image element.\r\n   */\r\n  getHitDetectionImage() {\r\n    if (!this.hitDetectionCanvas_) {\r\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\r\n        this.renderOptions_,\r\n      );\r\n    }\r\n    return this.hitDetectionCanvas_;\r\n  }\r\n\r\n  /**\r\n   * Get the image icon.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {HTMLCanvasElement} Image or Canvas element.\r\n   * @api\r\n   */\r\n  getImage(pixelRatio) {\r\n    let image = this.canvases_[pixelRatio];\r\n    if (!image) {\r\n      const renderOptions = this.renderOptions_;\r\n      const context = createCanvasContext2D(\r\n        renderOptions.size * pixelRatio,\r\n        renderOptions.size * pixelRatio,\r\n      );\r\n      this.draw_(renderOptions, context, pixelRatio);\r\n\r\n      image = context.canvas;\r\n      this.canvases_[pixelRatio] = image;\r\n    }\r\n    return image;\r\n  }\r\n\r\n  /**\r\n   * Get the image pixel ratio.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {number} Pixel ratio.\r\n   */\r\n  getPixelRatio(pixelRatio) {\r\n    return pixelRatio;\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../size.js\").Size} Image size.\r\n   */\r\n  getImageSize() {\r\n    return this.size_;\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../ImageState.js\").default} Image state.\r\n   */\r\n  getImageState() {\r\n    return this.imageState_;\r\n  }\r\n\r\n  /**\r\n   * Get the origin of the symbolizer.\r\n   * @return {Array<number>} Origin.\r\n   * @api\r\n   */\r\n  getOrigin() {\r\n    return this.origin_;\r\n  }\r\n\r\n  /**\r\n   * Get the number of points for generating the shape.\r\n   * @return {number} Number of points for stars and regular polygons.\r\n   * @api\r\n   */\r\n  getPoints() {\r\n    return this.points_;\r\n  }\r\n\r\n  /**\r\n   * Get the (primary) radius for the shape.\r\n   * @return {number} Radius.\r\n   * @api\r\n   */\r\n  getRadius() {\r\n    return this.radius_;\r\n  }\r\n\r\n  /**\r\n   * Get the secondary radius for the shape.\r\n   * @return {number|undefined} Radius2.\r\n   * @api\r\n   */\r\n  getRadius2() {\r\n    return this.radius2_;\r\n  }\r\n\r\n  /**\r\n   * Get the size of the symbolizer (in pixels).\r\n   * @return {import(\"../size.js\").Size} Size.\r\n   * @api\r\n   */\r\n  getSize() {\r\n    return this.size_;\r\n  }\r\n\r\n  /**\r\n   * Get the stroke style for the shape.\r\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\r\n   * @api\r\n   */\r\n  getStroke() {\r\n    return this.stroke_;\r\n  }\r\n\r\n  /**\r\n   * Set the stroke style.\r\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\r\n   * @api\r\n   */\r\n  setStroke(stroke) {\r\n    this.stroke_ = stroke;\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\r\n   */\r\n  listenImageChange(listener) {}\r\n\r\n  /**\r\n   * Load not yet loaded URI.\r\n   */\r\n  load() {}\r\n\r\n  /**\r\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\r\n   */\r\n  unlistenImageChange(listener) {}\r\n\r\n  /**\r\n   * Calculate additional canvas size needed for the miter.\r\n   * @param {string} lineJoin Line join\r\n   * @param {number} strokeWidth Stroke width\r\n   * @param {number} miterLimit Miter limit\r\n   * @return {number} Additional canvas size needed\r\n   * @private\r\n   */\r\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\r\n    if (\r\n      strokeWidth === 0 ||\r\n      this.points_ === Infinity ||\r\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\r\n    ) {\r\n      return strokeWidth;\r\n    }\r\n    // m  | ^\r\n    // i  | |\\                  .\r\n    // t >|  #\\\r\n    // e  | |\\ \\              .\r\n    // r      \\s\\\r\n    //      |  \\t\\          .                 .\r\n    //          \\r\\                      .   .\r\n    //      |    \\o\\      .          .  . . .\r\n    //          e \\k\\            .  .    . .\r\n    //      |      \\e\\  .    .  .       . .\r\n    //       d      \\ \\  .  .          . .\r\n    //      | _ _a_ _\\#  .            . .\r\n    //   r1          / `             . .\r\n    //      |                       . .\r\n    //       b     /               . .\r\n    //      |                     . .\r\n    //           / r2            . .\r\n    //      |                        .   .\r\n    //         /                           .   .\r\n    //      |α                                   .   .\r\n    //       /                                         .   .\r\n    //      ° center\r\n    let r1 = this.radius_;\r\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\r\n    if (r1 < r2) {\r\n      const tmp = r1;\r\n      r1 = r2;\r\n      r2 = tmp;\r\n    }\r\n    const points =\r\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\r\n    const alpha = (2 * Math.PI) / points;\r\n    const a = r2 * Math.sin(alpha);\r\n    const b = Math.sqrt(r2 * r2 - a * a);\r\n    const d = r1 - b;\r\n    const e = Math.sqrt(a * a + d * d);\r\n    const miterRatio = e / a;\r\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\r\n      return miterRatio * strokeWidth;\r\n    }\r\n    // Calculate the distance from center to the stroke corner where\r\n    // it was cut short because of the miter limit.\r\n    //              l\r\n    //        ----+---- <= distance from center to here is maxr\r\n    //       /####|k ##\\\r\n    //      /#####^#####\\\r\n    //     /#### /+\\# s #\\\r\n    //    /### h/+++\\# t #\\\r\n    //   /### t/+++++\\# r #\\\r\n    //  /### a/+++++++\\# o #\\\r\n    // /### p/++ fill +\\# k #\\\r\n    ///#### /+++++^+++++\\# e #\\\r\n    //#####/+++++/+\\+++++\\#####\\\r\n    const k = strokeWidth / 2 / miterRatio;\r\n    const l = (strokeWidth / 2) * (d / e);\r\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\r\n    const bevelAdd = maxr - r1;\r\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\r\n      return bevelAdd * 2;\r\n    }\r\n    // If outer miter is over the miter limit the inner miter may reach through the\r\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\r\n    const aa = r1 * Math.sin(alpha);\r\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\r\n    const dd = r2 - bb;\r\n    const ee = Math.sqrt(aa * aa + dd * dd);\r\n    const innerMiterRatio = ee / aa;\r\n    if (innerMiterRatio <= miterLimit) {\r\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\r\n      return 2 * Math.max(bevelAdd, innerLength);\r\n    }\r\n    return bevelAdd * 2;\r\n  }\r\n\r\n  /**\r\n   * @return {RenderOptions}  The render options\r\n   * @protected\r\n   */\r\n  createRenderOptions() {\r\n    let lineCap = defaultLineCap;\r\n    let lineJoin = defaultLineJoin;\r\n    let miterLimit = 0;\r\n    let lineDash = null;\r\n    let lineDashOffset = 0;\r\n    let strokeStyle;\r\n    let strokeWidth = 0;\r\n\r\n    if (this.stroke_) {\r\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\r\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\r\n      lineDash = this.stroke_.getLineDash();\r\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\r\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\r\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\r\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\r\n    }\r\n\r\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\r\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\r\n    const size = Math.ceil(2 * maxRadius + add);\r\n\r\n    return {\r\n      strokeStyle: strokeStyle,\r\n      strokeWidth: strokeWidth,\r\n      size: size,\r\n      lineCap: lineCap,\r\n      lineDash: lineDash,\r\n      lineDashOffset: lineDashOffset,\r\n      lineJoin: lineJoin,\r\n      miterLimit: miterLimit,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  render() {\r\n    this.renderOptions_ = this.createRenderOptions();\r\n    const size = this.renderOptions_.size;\r\n    this.canvases_ = {};\r\n    this.hitDetectionCanvas_ = null;\r\n    this.size_ = [size, size];\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {RenderOptions} renderOptions Render options.\r\n   * @param {CanvasRenderingContext2D} context The rendering context.\r\n   * @param {number} pixelRatio The pixel ratio.\r\n   */\r\n  draw_(renderOptions, context, pixelRatio) {\r\n    context.scale(pixelRatio, pixelRatio);\r\n    // set origin to canvas center\r\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\r\n\r\n    this.createPath_(context);\r\n\r\n    if (this.fill_) {\r\n      let color = this.fill_.getColor();\r\n      if (color === null) {\r\n        color = defaultFillStyle;\r\n      }\r\n      context.fillStyle = asColorLike(color);\r\n      context.fill();\r\n    }\r\n    if (renderOptions.strokeStyle) {\r\n      context.strokeStyle = renderOptions.strokeStyle;\r\n      context.lineWidth = renderOptions.strokeWidth;\r\n      if (renderOptions.lineDash) {\r\n        context.setLineDash(renderOptions.lineDash);\r\n        context.lineDashOffset = renderOptions.lineDashOffset;\r\n      }\r\n      context.lineCap = renderOptions.lineCap;\r\n      context.lineJoin = renderOptions.lineJoin;\r\n      context.miterLimit = renderOptions.miterLimit;\r\n      context.stroke();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {RenderOptions} renderOptions Render options.\r\n   * @return {HTMLCanvasElement} Canvas containing the icon\r\n   */\r\n  createHitDetectionCanvas_(renderOptions) {\r\n    let context;\r\n    if (this.fill_) {\r\n      let color = this.fill_.getColor();\r\n\r\n      // determine if fill is transparent (or pattern or gradient)\r\n      let opacity = 0;\r\n      if (typeof color === 'string') {\r\n        color = asArray(color);\r\n      }\r\n      if (color === null) {\r\n        opacity = 1;\r\n      } else if (Array.isArray(color)) {\r\n        opacity = color.length === 4 ? color[3] : 1;\r\n      }\r\n      if (opacity === 0) {\r\n        // if a transparent fill style is set, create an extra hit-detection image\r\n        // with a default fill style\r\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\r\n        this.drawHitDetectionCanvas_(renderOptions, context);\r\n      }\r\n    }\r\n    return context ? context.canvas : this.getImage(1);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} context The context to draw in.\r\n   */\r\n  createPath_(context) {\r\n    let points = this.points_;\r\n    const radius = this.radius_;\r\n    if (points === Infinity) {\r\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\r\n    } else {\r\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\r\n      if (this.radius2_ !== undefined) {\r\n        points *= 2;\r\n      }\r\n      const startAngle = this.angle_ - Math.PI / 2;\r\n      const step = (2 * Math.PI) / points;\r\n      for (let i = 0; i < points; i++) {\r\n        const angle0 = startAngle + i * step;\r\n        const radiusC = i % 2 === 0 ? radius : radius2;\r\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\r\n      }\r\n      context.closePath();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {RenderOptions} renderOptions Render options.\r\n   * @param {CanvasRenderingContext2D} context The context.\r\n   */\r\n  drawHitDetectionCanvas_(renderOptions, context) {\r\n    // set origin to canvas center\r\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\r\n\r\n    this.createPath_(context);\r\n\r\n    context.fillStyle = defaultFillStyle;\r\n    context.fill();\r\n    if (renderOptions.strokeStyle) {\r\n      context.strokeStyle = renderOptions.strokeStyle;\r\n      context.lineWidth = renderOptions.strokeWidth;\r\n      if (renderOptions.lineDash) {\r\n        context.setLineDash(renderOptions.lineDash);\r\n        context.lineDashOffset = renderOptions.lineDashOffset;\r\n      }\r\n      context.lineJoin = renderOptions.lineJoin;\r\n      context.miterLimit = renderOptions.miterLimit;\r\n      context.stroke();\r\n    }\r\n  }\r\n\r\n  ready() {\r\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\r\n  }\r\n}\r\n\r\nexport default RegularShape;\r\n", "/**\r\n * @module ol/style/Circle\r\n */\r\n\r\nimport RegularShape from './RegularShape.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\r\n * @property {number} radius Circle radius.\r\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\r\n * @property {Array<number>} [displacement=[0,0]] displacement\r\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\r\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\r\n * @property {number} [rotation=0] Rotation in radians\r\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\r\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\r\n * (meaningful only when used in conjunction with a two dimensional scale).\r\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Set circle style for vector features.\r\n * @api\r\n */\r\nclass CircleStyle extends RegularShape {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {radius: 5};\r\n\r\n    super({\r\n      points: Infinity,\r\n      fill: options.fill,\r\n      radius: options.radius,\r\n      stroke: options.stroke,\r\n      scale: options.scale !== undefined ? options.scale : 1,\r\n      rotation: options.rotation !== undefined ? options.rotation : 0,\r\n      rotateWithView:\r\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\r\n      displacement:\r\n        options.displacement !== undefined ? options.displacement : [0, 0],\r\n      declutterMode: options.declutterMode,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clones the style.\r\n   * @return {CircleStyle} The cloned style.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const scale = this.getScale();\r\n    const style = new CircleStyle({\r\n      fill: this.getFill() ? this.getFill().clone() : undefined,\r\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\r\n      radius: this.getRadius(),\r\n      scale: Array.isArray(scale) ? scale.slice() : scale,\r\n      rotation: this.getRotation(),\r\n      rotateWithView: this.getRotateWithView(),\r\n      displacement: this.getDisplacement().slice(),\r\n      declutterMode: this.getDeclutterMode(),\r\n    });\r\n    style.setOpacity(this.getOpacity());\r\n    return style;\r\n  }\r\n\r\n  /**\r\n   * Set the circle radius.\r\n   *\r\n   * @param {number} radius Circle radius.\r\n   * @api\r\n   */\r\n  setRadius(radius) {\r\n    this.radius_ = radius;\r\n    this.render();\r\n  }\r\n}\r\n\r\nexport default CircleStyle;\r\n", "/**\r\n * @module ol/style/Style\r\n */\r\n\r\nimport CircleStyle from './Circle.js';\r\nimport Fill from './Fill.js';\r\nimport Stroke from './Stroke.js';\r\nimport {assert} from '../asserts.js';\r\n\r\n/**\r\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\r\n * * **declutter**: Overlapping symbols and text are decluttered.\r\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\r\n *   to place a symbol or text at the same location.\r\n * * **none**: No decluttering is done.\r\n *\r\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\r\n */\r\n\r\n/**\r\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\r\n * representing the view's resolution. The function should return a\r\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\r\n * vector layer can be styled. If the function returns `undefined`, the\r\n * feature will not be rendered.\r\n *\r\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\r\n */\r\n\r\n/**\r\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\r\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\r\n */\r\n\r\n/**\r\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\r\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\r\n *\r\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\r\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\r\n */\r\n\r\n/**\r\n * Custom renderer function. Takes two arguments:\r\n *\r\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\r\n * 2. The {@link module:ol/render~State} of the layer renderer.\r\n *\r\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\r\n * or function returning a geometry to render for this style.\r\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\r\n * @property {import(\"./Image.js\").default} [image] Image style.\r\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\r\n * ignored, and the provided function will be called with each render frame for each geometry.\r\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\r\n * in hit detection rendering.\r\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\r\n * @property {import(\"./Text.js\").default} [text] Text style.\r\n * @property {number} [zIndex] Z index.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Container for vector feature rendering styles. Any changes made to the style\r\n * or its children through `set*()` methods will not take effect until the\r\n * feature or layer that uses the style is re-rendered.\r\n *\r\n * ## Feature styles\r\n *\r\n * If no style is defined, the following default style is used:\r\n * ```js\r\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\r\n *\r\n *  const fill = new Fill({\r\n *    color: 'rgba(255,255,255,0.4)',\r\n *  });\r\n *  const stroke = new Stroke({\r\n *    color: '#3399CC',\r\n *    width: 1.25,\r\n *  });\r\n *  const styles = [\r\n *    new Style({\r\n *      image: new Circle({\r\n *        fill: fill,\r\n *        stroke: stroke,\r\n *        radius: 5,\r\n *      }),\r\n *      fill: fill,\r\n *      stroke: stroke,\r\n *    }),\r\n *  ];\r\n * ```\r\n *\r\n * A separate editing style has the following defaults:\r\n * ```js\r\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\r\n *\r\n *  const styles = {};\r\n *  const white = [255, 255, 255, 1];\r\n *  const blue = [0, 153, 255, 1];\r\n *  const width = 3;\r\n *  styles['Polygon'] = [\r\n *    new Style({\r\n *      fill: new Fill({\r\n *        color: [255, 255, 255, 0.5],\r\n *      }),\r\n *    }),\r\n *  ];\r\n *  styles['MultiPolygon'] =\r\n *      styles['Polygon'];\r\n *  styles['LineString'] = [\r\n *    new Style({\r\n *      stroke: new Stroke({\r\n *        color: white,\r\n *        width: width + 2,\r\n *      }),\r\n *    }),\r\n *    new Style({\r\n *      stroke: new Stroke({\r\n *        color: blue,\r\n *        width: width,\r\n *      }),\r\n *    }),\r\n *  ];\r\n *  styles['MultiLineString'] = styles['LineString'];\r\n *\r\n *  styles['Circle'] = styles['Polygon'].concat(\r\n *    styles['LineString']\r\n *  );\r\n *\r\n *  styles['Point'] = [\r\n *    new Style({\r\n *      image: new Circle({\r\n *        radius: width * 2,\r\n *        fill: new Fill({\r\n *          color: blue,\r\n *        }),\r\n *        stroke: new Stroke({\r\n *          color: white,\r\n *          width: width / 2,\r\n *        }),\r\n *      }),\r\n *      zIndex: Infinity,\r\n *    }),\r\n *  ];\r\n *  styles['MultiPoint'] =\r\n *      styles['Point'];\r\n *  styles['GeometryCollection'] =\r\n *      styles['Polygon'].concat(\r\n *          styles['LineString'],\r\n *          styles['Point']\r\n *      );\r\n * ```\r\n *\r\n * @api\r\n */\r\nclass Style {\r\n  /**\r\n   * @param {Options} [options] Style options.\r\n   */\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\r\n     */\r\n    this.geometry_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!GeometryFunction}\r\n     */\r\n    this.geometryFunction_ = defaultGeometryFunction;\r\n\r\n    if (options.geometry !== undefined) {\r\n      this.setGeometry(options.geometry);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Fill.js\").default|null}\r\n     */\r\n    this.fill_ = options.fill !== undefined ? options.fill : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Image.js\").default|null}\r\n     */\r\n    this.image_ = options.image !== undefined ? options.image : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {RenderFunction|null}\r\n     */\r\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {RenderFunction|null}\r\n     */\r\n    this.hitDetectionRenderer_ =\r\n      options.hitDetectionRenderer !== undefined\r\n        ? options.hitDetectionRenderer\r\n        : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Stroke.js\").default|null}\r\n     */\r\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Text.js\").default|null}\r\n     */\r\n    this.text_ = options.text !== undefined ? options.text : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.zIndex_ = options.zIndex;\r\n  }\r\n\r\n  /**\r\n   * Clones the style.\r\n   * @return {Style} The cloned style.\r\n   * @api\r\n   */\r\n  clone() {\r\n    let geometry = this.getGeometry();\r\n    if (geometry && typeof geometry === 'object') {\r\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\r\n        geometry\r\n      ).clone();\r\n    }\r\n    return new Style({\r\n      geometry: geometry ?? undefined,\r\n      fill: this.getFill() ? this.getFill().clone() : undefined,\r\n      image: this.getImage() ? this.getImage().clone() : undefined,\r\n      renderer: this.getRenderer() ?? undefined,\r\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\r\n      text: this.getText() ? this.getText().clone() : undefined,\r\n      zIndex: this.getZIndex(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the custom renderer function that was configured with\r\n   * {@link #setRenderer} or the `renderer` constructor option.\r\n   * @return {RenderFunction|null} Custom renderer function.\r\n   * @api\r\n   */\r\n  getRenderer() {\r\n    return this.renderer_;\r\n  }\r\n\r\n  /**\r\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\r\n   * and `image` options of the style will be ignored.\r\n   * @param {RenderFunction|null} renderer Custom renderer function.\r\n   * @api\r\n   */\r\n  setRenderer(renderer) {\r\n    this.renderer_ = renderer;\r\n  }\r\n\r\n  /**\r\n   * Sets a custom renderer function for this style used\r\n   * in hit detection.\r\n   * @param {RenderFunction|null} renderer Custom renderer function.\r\n   * @api\r\n   */\r\n  setHitDetectionRenderer(renderer) {\r\n    this.hitDetectionRenderer_ = renderer;\r\n  }\r\n\r\n  /**\r\n   * Get the custom renderer function that was configured with\r\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\r\n   * @return {RenderFunction|null} Custom renderer function.\r\n   * @api\r\n   */\r\n  getHitDetectionRenderer() {\r\n    return this.hitDetectionRenderer_;\r\n  }\r\n\r\n  /**\r\n   * Get the geometry to be rendered.\r\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\r\n   * Feature property or geometry or function that returns the geometry that will\r\n   * be rendered with this style.\r\n   * @api\r\n   */\r\n  getGeometry() {\r\n    return this.geometry_;\r\n  }\r\n\r\n  /**\r\n   * Get the function used to generate a geometry for rendering.\r\n   * @return {!GeometryFunction} Function that is called with a feature\r\n   * and returns the geometry to render instead of the feature's geometry.\r\n   * @api\r\n   */\r\n  getGeometryFunction() {\r\n    return this.geometryFunction_;\r\n  }\r\n\r\n  /**\r\n   * Get the fill style.\r\n   * @return {import(\"./Fill.js\").default|null} Fill style.\r\n   * @api\r\n   */\r\n  getFill() {\r\n    return this.fill_;\r\n  }\r\n\r\n  /**\r\n   * Set the fill style.\r\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\r\n   * @api\r\n   */\r\n  setFill(fill) {\r\n    this.fill_ = fill;\r\n  }\r\n\r\n  /**\r\n   * Get the image style.\r\n   * @return {import(\"./Image.js\").default|null} Image style.\r\n   * @api\r\n   */\r\n  getImage() {\r\n    return this.image_;\r\n  }\r\n\r\n  /**\r\n   * Set the image style.\r\n   * @param {import(\"./Image.js\").default} image Image style.\r\n   * @api\r\n   */\r\n  setImage(image) {\r\n    this.image_ = image;\r\n  }\r\n\r\n  /**\r\n   * Get the stroke style.\r\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\r\n   * @api\r\n   */\r\n  getStroke() {\r\n    return this.stroke_;\r\n  }\r\n\r\n  /**\r\n   * Set the stroke style.\r\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\r\n   * @api\r\n   */\r\n  setStroke(stroke) {\r\n    this.stroke_ = stroke;\r\n  }\r\n\r\n  /**\r\n   * Get the text style.\r\n   * @return {import(\"./Text.js\").default|null} Text style.\r\n   * @api\r\n   */\r\n  getText() {\r\n    return this.text_;\r\n  }\r\n\r\n  /**\r\n   * Set the text style.\r\n   * @param {import(\"./Text.js\").default} text Text style.\r\n   * @api\r\n   */\r\n  setText(text) {\r\n    this.text_ = text;\r\n  }\r\n\r\n  /**\r\n   * Get the z-index for the style.\r\n   * @return {number|undefined} ZIndex.\r\n   * @api\r\n   */\r\n  getZIndex() {\r\n    return this.zIndex_;\r\n  }\r\n\r\n  /**\r\n   * Set a geometry that is rendered instead of the feature's geometry.\r\n   *\r\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\r\n   *     Feature property or geometry or function returning a geometry to render\r\n   *     for this style.\r\n   * @api\r\n   */\r\n  setGeometry(geometry) {\r\n    if (typeof geometry === 'function') {\r\n      this.geometryFunction_ = geometry;\r\n    } else if (typeof geometry === 'string') {\r\n      this.geometryFunction_ = function (feature) {\r\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\r\n          feature.get(geometry)\r\n        );\r\n      };\r\n    } else if (!geometry) {\r\n      this.geometryFunction_ = defaultGeometryFunction;\r\n    } else if (geometry !== undefined) {\r\n      this.geometryFunction_ = function () {\r\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\r\n      };\r\n    }\r\n    this.geometry_ = geometry;\r\n  }\r\n\r\n  /**\r\n   * Set the z-index.\r\n   *\r\n   * @param {number|undefined} zIndex ZIndex.\r\n   * @api\r\n   */\r\n  setZIndex(zIndex) {\r\n    this.zIndex_ = zIndex;\r\n  }\r\n}\r\n\r\n/**\r\n * Convert the provided object into a style function.  Functions passed through\r\n * unchanged.  Arrays of Style or single style objects wrapped in a\r\n * new style function.\r\n * @param {StyleFunction|Array<Style>|Style} obj\r\n *     A style function, a single style, or an array of styles.\r\n * @return {StyleFunction} A style function.\r\n */\r\nexport function toFunction(obj) {\r\n  let styleFunction;\r\n\r\n  if (typeof obj === 'function') {\r\n    styleFunction = obj;\r\n  } else {\r\n    /**\r\n     * @type {Array<Style>}\r\n     */\r\n    let styles;\r\n    if (Array.isArray(obj)) {\r\n      styles = obj;\r\n    } else {\r\n      assert(\r\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\r\n        'Expected an `Style` or an array of `Style`',\r\n      );\r\n      const style = /** @type {Style} */ (obj);\r\n      styles = [style];\r\n    }\r\n    styleFunction = function () {\r\n      return styles;\r\n    };\r\n  }\r\n  return styleFunction;\r\n}\r\n\r\n/**\r\n * @type {Array<Style>|null}\r\n */\r\nlet defaultStyles = null;\r\n\r\n/**\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {number} resolution Resolution.\r\n * @return {Array<Style>} Style.\r\n */\r\nexport function createDefaultStyle(feature, resolution) {\r\n  // We don't use an immediately-invoked function\r\n  // and a closure so we don't get an error at script evaluation time in\r\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\r\n  // canvas.getContext('2d') at construction time, which will cause an.error\r\n  // in such browsers.)\r\n  if (!defaultStyles) {\r\n    const fill = new Fill({\r\n      color: 'rgba(255,255,255,0.4)',\r\n    });\r\n    const stroke = new Stroke({\r\n      color: '#3399CC',\r\n      width: 1.25,\r\n    });\r\n    defaultStyles = [\r\n      new Style({\r\n        image: new CircleStyle({\r\n          fill: fill,\r\n          stroke: stroke,\r\n          radius: 5,\r\n        }),\r\n        fill: fill,\r\n        stroke: stroke,\r\n      }),\r\n    ];\r\n  }\r\n  return defaultStyles;\r\n}\r\n\r\n/**\r\n * Default styles for editing features.\r\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\r\n */\r\nexport function createEditingStyle() {\r\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\r\n  const styles = {};\r\n  const white = [255, 255, 255, 1];\r\n  const blue = [0, 153, 255, 1];\r\n  const width = 3;\r\n  styles['Polygon'] = [\r\n    new Style({\r\n      fill: new Fill({\r\n        color: [255, 255, 255, 0.5],\r\n      }),\r\n    }),\r\n  ];\r\n  styles['MultiPolygon'] = styles['Polygon'];\r\n\r\n  styles['LineString'] = [\r\n    new Style({\r\n      stroke: new Stroke({\r\n        color: white,\r\n        width: width + 2,\r\n      }),\r\n    }),\r\n    new Style({\r\n      stroke: new Stroke({\r\n        color: blue,\r\n        width: width,\r\n      }),\r\n    }),\r\n  ];\r\n  styles['MultiLineString'] = styles['LineString'];\r\n\r\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\r\n\r\n  styles['Point'] = [\r\n    new Style({\r\n      image: new CircleStyle({\r\n        radius: width * 2,\r\n        fill: new Fill({\r\n          color: blue,\r\n        }),\r\n        stroke: new Stroke({\r\n          color: white,\r\n          width: width / 2,\r\n        }),\r\n      }),\r\n      zIndex: Infinity,\r\n    }),\r\n  ];\r\n  styles['MultiPoint'] = styles['Point'];\r\n\r\n  styles['GeometryCollection'] = styles['Polygon'].concat(\r\n    styles['LineString'],\r\n    styles['Point'],\r\n  );\r\n\r\n  return styles;\r\n}\r\n\r\n/**\r\n * Function that is called with a feature and returns its default geometry.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\r\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\r\n */\r\nfunction defaultGeometryFunction(feature) {\r\n  return feature.getGeometry();\r\n}\r\n\r\nexport default Style;\r\n", "/**\r\n * @module ol/style/Text\r\n */\r\nimport Fill from './Fill.js';\r\nimport {toSize} from '../size.js';\r\n\r\n/**\r\n * @typedef {'point' | 'line'} TextPlacement\r\n * Default text placement is `'point'`. Note that\r\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\r\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\r\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\r\n */\r\n\r\n/**\r\n * @typedef {'left' | 'center' | 'right'} TextJustify\r\n */\r\n\r\n/**\r\n * The default fill color to use if no fill was set at construction time; a\r\n * blackish `#333`.\r\n *\r\n * @const {string}\r\n */\r\nconst DEFAULT_FILL_COLOR = '#333';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [font] Font style as CSS `font` value, see:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\r\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\r\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\r\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\r\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\r\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\r\n * the width of the polygon at the label position or the length of the path that it follows.\r\n * @property {TextPlacement} [placement='point'] Text placement.\r\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\r\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\r\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\r\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\r\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\r\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\r\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\r\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\r\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\r\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\r\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\r\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\r\n * placement where `maxAngle` is not exceeded.\r\n * @property {TextJustify} [justify] Text justification within the text box.\r\n * If not set, text is justified towards the `textAlign` anchor.\r\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\r\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\r\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\r\n * `'hanging'`, `'ideographic'`.\r\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\r\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\r\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\r\n * `'point'`. Default is no fill.\r\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\r\n * is `'point'`. Default is no stroke.\r\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\r\n * values in the array is `[top, right, bottom, left]`.\r\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Set text style for vector features.\r\n * @api\r\n */\r\nclass Text {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|undefined}\r\n     */\r\n    this.font_ = options.font;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.rotation_ = options.rotation;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.rotateWithView_ = options.rotateWithView;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|import(\"../size.js\").Size|undefined}\r\n     */\r\n    this.scale_ = options.scale;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|Array<string>|undefined}\r\n     */\r\n    this.text_ = options.text;\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasTextAlign|undefined}\r\n     */\r\n    this.textAlign_ = options.textAlign;\r\n\r\n    /**\r\n     * @private\r\n     * @type {TextJustify|undefined}\r\n     */\r\n    this.justify_ = options.justify;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.repeat_ = options.repeat;\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasTextBaseline|undefined}\r\n     */\r\n    this.textBaseline_ = options.textBaseline;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Fill.js\").default|null}\r\n     */\r\n    this.fill_ =\r\n      options.fill !== undefined\r\n        ? options.fill\r\n        : new Fill({color: DEFAULT_FILL_COLOR});\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxAngle_ =\r\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\r\n\r\n    /**\r\n     * @private\r\n     * @type {TextPlacement}\r\n     */\r\n    this.placement_ =\r\n      options.placement !== undefined ? options.placement : 'point';\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.overflow_ = !!options.overflow;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Stroke.js\").default|null}\r\n     */\r\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Fill.js\").default|null}\r\n     */\r\n    this.backgroundFill_ = options.backgroundFill\r\n      ? options.backgroundFill\r\n      : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Stroke.js\").default|null}\r\n     */\r\n    this.backgroundStroke_ = options.backgroundStroke\r\n      ? options.backgroundStroke\r\n      : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>|null}\r\n     */\r\n    this.padding_ = options.padding === undefined ? null : options.padding;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import('../style/Style.js').DeclutterMode}\r\n     */\r\n    this.declutterMode_ = options.declutterMode;\r\n  }\r\n\r\n  /**\r\n   * Clones the style.\r\n   * @return {Text} The cloned style.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const scale = this.getScale();\r\n    return new Text({\r\n      font: this.getFont(),\r\n      placement: this.getPlacement(),\r\n      repeat: this.getRepeat(),\r\n      maxAngle: this.getMaxAngle(),\r\n      overflow: this.getOverflow(),\r\n      rotation: this.getRotation(),\r\n      rotateWithView: this.getRotateWithView(),\r\n      scale: Array.isArray(scale) ? scale.slice() : scale,\r\n      text: this.getText(),\r\n      textAlign: this.getTextAlign(),\r\n      justify: this.getJustify(),\r\n      textBaseline: this.getTextBaseline(),\r\n      fill: this.getFill() ? this.getFill().clone() : undefined,\r\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\r\n      offsetX: this.getOffsetX(),\r\n      offsetY: this.getOffsetY(),\r\n      backgroundFill: this.getBackgroundFill()\r\n        ? this.getBackgroundFill().clone()\r\n        : undefined,\r\n      backgroundStroke: this.getBackgroundStroke()\r\n        ? this.getBackgroundStroke().clone()\r\n        : undefined,\r\n      padding: this.getPadding() || undefined,\r\n      declutterMode: this.getDeclutterMode(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the `overflow` configuration.\r\n   * @return {boolean} Let text overflow the length of the path they follow.\r\n   * @api\r\n   */\r\n  getOverflow() {\r\n    return this.overflow_;\r\n  }\r\n\r\n  /**\r\n   * Get the font name.\r\n   * @return {string|undefined} Font.\r\n   * @api\r\n   */\r\n  getFont() {\r\n    return this.font_;\r\n  }\r\n\r\n  /**\r\n   * Get the maximum angle between adjacent characters.\r\n   * @return {number} Angle in radians.\r\n   * @api\r\n   */\r\n  getMaxAngle() {\r\n    return this.maxAngle_;\r\n  }\r\n\r\n  /**\r\n   * Get the label placement.\r\n   * @return {TextPlacement} Text placement.\r\n   * @api\r\n   */\r\n  getPlacement() {\r\n    return this.placement_;\r\n  }\r\n\r\n  /**\r\n   * Get the repeat interval of the text.\r\n   * @return {number|undefined} Repeat interval in pixels.\r\n   * @api\r\n   */\r\n  getRepeat() {\r\n    return this.repeat_;\r\n  }\r\n\r\n  /**\r\n   * Get the x-offset for the text.\r\n   * @return {number} Horizontal text offset.\r\n   * @api\r\n   */\r\n  getOffsetX() {\r\n    return this.offsetX_;\r\n  }\r\n\r\n  /**\r\n   * Get the y-offset for the text.\r\n   * @return {number} Vertical text offset.\r\n   * @api\r\n   */\r\n  getOffsetY() {\r\n    return this.offsetY_;\r\n  }\r\n\r\n  /**\r\n   * Get the fill style for the text.\r\n   * @return {import(\"./Fill.js\").default|null} Fill style.\r\n   * @api\r\n   */\r\n  getFill() {\r\n    return this.fill_;\r\n  }\r\n\r\n  /**\r\n   * Determine whether the text rotates with the map.\r\n   * @return {boolean|undefined} Rotate with map.\r\n   * @api\r\n   */\r\n  getRotateWithView() {\r\n    return this.rotateWithView_;\r\n  }\r\n\r\n  /**\r\n   * Get the text rotation.\r\n   * @return {number|undefined} Rotation.\r\n   * @api\r\n   */\r\n  getRotation() {\r\n    return this.rotation_;\r\n  }\r\n\r\n  /**\r\n   * Get the text scale.\r\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\r\n   * @api\r\n   */\r\n  getScale() {\r\n    return this.scale_;\r\n  }\r\n\r\n  /**\r\n   * Get the symbolizer scale array.\r\n   * @return {import(\"../size.js\").Size} Scale array.\r\n   */\r\n  getScaleArray() {\r\n    return this.scaleArray_;\r\n  }\r\n\r\n  /**\r\n   * Get the stroke style for the text.\r\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\r\n   * @api\r\n   */\r\n  getStroke() {\r\n    return this.stroke_;\r\n  }\r\n\r\n  /**\r\n   * Get the text to be rendered.\r\n   * @return {string|Array<string>|undefined} Text.\r\n   * @api\r\n   */\r\n  getText() {\r\n    return this.text_;\r\n  }\r\n\r\n  /**\r\n   * Get the text alignment.\r\n   * @return {CanvasTextAlign|undefined} Text align.\r\n   * @api\r\n   */\r\n  getTextAlign() {\r\n    return this.textAlign_;\r\n  }\r\n\r\n  /**\r\n   * Get the justification.\r\n   * @return {TextJustify|undefined} Justification.\r\n   * @api\r\n   */\r\n  getJustify() {\r\n    return this.justify_;\r\n  }\r\n\r\n  /**\r\n   * Get the text baseline.\r\n   * @return {CanvasTextBaseline|undefined} Text baseline.\r\n   * @api\r\n   */\r\n  getTextBaseline() {\r\n    return this.textBaseline_;\r\n  }\r\n\r\n  /**\r\n   * Get the background fill style for the text.\r\n   * @return {import(\"./Fill.js\").default|null} Fill style.\r\n   * @api\r\n   */\r\n  getBackgroundFill() {\r\n    return this.backgroundFill_;\r\n  }\r\n\r\n  /**\r\n   * Get the background stroke style for the text.\r\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\r\n   * @api\r\n   */\r\n  getBackgroundStroke() {\r\n    return this.backgroundStroke_;\r\n  }\r\n\r\n  /**\r\n   * Get the padding for the text.\r\n   * @return {Array<number>|null} Padding.\r\n   * @api\r\n   */\r\n  getPadding() {\r\n    return this.padding_;\r\n  }\r\n\r\n  /**\r\n   * Get the declutter mode of the shape\r\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\r\n   * @api\r\n   */\r\n  getDeclutterMode() {\r\n    return this.declutterMode_;\r\n  }\r\n\r\n  /**\r\n   * Set the `overflow` property.\r\n   *\r\n   * @param {boolean} overflow Let text overflow the path that it follows.\r\n   * @api\r\n   */\r\n  setOverflow(overflow) {\r\n    this.overflow_ = overflow;\r\n  }\r\n\r\n  /**\r\n   * Set the font.\r\n   *\r\n   * @param {string|undefined} font Font.\r\n   * @api\r\n   */\r\n  setFont(font) {\r\n    this.font_ = font;\r\n  }\r\n\r\n  /**\r\n   * Set the maximum angle between adjacent characters.\r\n   *\r\n   * @param {number} maxAngle Angle in radians.\r\n   * @api\r\n   */\r\n  setMaxAngle(maxAngle) {\r\n    this.maxAngle_ = maxAngle;\r\n  }\r\n\r\n  /**\r\n   * Set the x offset.\r\n   *\r\n   * @param {number} offsetX Horizontal text offset.\r\n   * @api\r\n   */\r\n  setOffsetX(offsetX) {\r\n    this.offsetX_ = offsetX;\r\n  }\r\n\r\n  /**\r\n   * Set the y offset.\r\n   *\r\n   * @param {number} offsetY Vertical text offset.\r\n   * @api\r\n   */\r\n  setOffsetY(offsetY) {\r\n    this.offsetY_ = offsetY;\r\n  }\r\n\r\n  /**\r\n   * Set the text placement.\r\n   *\r\n   * @param {TextPlacement} placement Placement.\r\n   * @api\r\n   */\r\n  setPlacement(placement) {\r\n    this.placement_ = placement;\r\n  }\r\n\r\n  /**\r\n   * Set the repeat interval of the text.\r\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\r\n   * @api\r\n   */\r\n  setRepeat(repeat) {\r\n    this.repeat_ = repeat;\r\n  }\r\n\r\n  /**\r\n   * Set whether to rotate the text with the view.\r\n   *\r\n   * @param {boolean} rotateWithView Rotate with map.\r\n   * @api\r\n   */\r\n  setRotateWithView(rotateWithView) {\r\n    this.rotateWithView_ = rotateWithView;\r\n  }\r\n\r\n  /**\r\n   * Set the fill.\r\n   *\r\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\r\n   * @api\r\n   */\r\n  setFill(fill) {\r\n    this.fill_ = fill;\r\n  }\r\n\r\n  /**\r\n   * Set the rotation.\r\n   *\r\n   * @param {number|undefined} rotation Rotation.\r\n   * @api\r\n   */\r\n  setRotation(rotation) {\r\n    this.rotation_ = rotation;\r\n  }\r\n\r\n  /**\r\n   * Set the scale.\r\n   *\r\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\r\n   * @api\r\n   */\r\n  setScale(scale) {\r\n    this.scale_ = scale;\r\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\r\n  }\r\n\r\n  /**\r\n   * Set the stroke.\r\n   *\r\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\r\n   * @api\r\n   */\r\n  setStroke(stroke) {\r\n    this.stroke_ = stroke;\r\n  }\r\n\r\n  /**\r\n   * Set the text.\r\n   *\r\n   * @param {string|Array<string>|undefined} text Text.\r\n   * @api\r\n   */\r\n  setText(text) {\r\n    this.text_ = text;\r\n  }\r\n\r\n  /**\r\n   * Set the text alignment.\r\n   *\r\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\r\n   * @api\r\n   */\r\n  setTextAlign(textAlign) {\r\n    this.textAlign_ = textAlign;\r\n  }\r\n\r\n  /**\r\n   * Set the justification.\r\n   *\r\n   * @param {TextJustify|undefined} justify Justification.\r\n   * @api\r\n   */\r\n  setJustify(justify) {\r\n    this.justify_ = justify;\r\n  }\r\n\r\n  /**\r\n   * Set the text baseline.\r\n   *\r\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\r\n   * @api\r\n   */\r\n  setTextBaseline(textBaseline) {\r\n    this.textBaseline_ = textBaseline;\r\n  }\r\n\r\n  /**\r\n   * Set the background fill.\r\n   *\r\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\r\n   * @api\r\n   */\r\n  setBackgroundFill(fill) {\r\n    this.backgroundFill_ = fill;\r\n  }\r\n\r\n  /**\r\n   * Set the background stroke.\r\n   *\r\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\r\n   * @api\r\n   */\r\n  setBackgroundStroke(stroke) {\r\n    this.backgroundStroke_ = stroke;\r\n  }\r\n\r\n  /**\r\n   * Set the padding (`[top, right, bottom, left]`).\r\n   *\r\n   * @param {Array<number>|null} padding Padding.\r\n   * @api\r\n   */\r\n  setPadding(padding) {\r\n    this.padding_ = padding;\r\n  }\r\n}\r\n\r\nexport default Text;\r\n", "/**\r\n * @module ol/style/Icon\r\n */\r\nimport EventType from '../events/EventType.js';\r\nimport ImageState from '../ImageState.js';\r\nimport ImageStyle from './Image.js';\r\nimport {asArray} from '../color.js';\r\nimport {assert} from '../asserts.js';\r\nimport {get as getIconImage} from './IconImage.js';\r\nimport {getUid} from '../util.js';\r\n\r\n/**\r\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\r\n * Anchor unit can be either a fraction of the icon size or in pixels.\r\n */\r\n\r\n/**\r\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\r\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\r\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\r\n * `top-left` or `top-right`.\r\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\r\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\r\n * the x value in pixels.\r\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\r\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\r\n * the y value in pixels.\r\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\r\n * the icon will be left as is.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\r\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\r\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\r\n * Positive values will shift the icon right and up.\r\n * @property {number} [opacity=1] Opacity of the icon.\r\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\r\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\r\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\r\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\r\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\r\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\r\n * sub-rectangle to use from the original (sprite) image.\r\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\r\n * `top-left` or `top-right`.\r\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\r\n * sub-rectangle to use from the original (sprite) image.\r\n * @property {string} [src] Image source URI.\r\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\r\n */\r\n\r\n/**\r\n * @param {number} width The width.\r\n * @param {number} height The height.\r\n * @param {number|undefined} wantedWidth The wanted width.\r\n * @param {number|undefined} wantedHeight The wanted height.\r\n * @return {number|Array<number>} The scale.\r\n */\r\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\r\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\r\n    return [wantedWidth / width, wantedHeight / height];\r\n  }\r\n  if (wantedWidth !== undefined) {\r\n    return wantedWidth / width;\r\n  }\r\n  if (wantedHeight !== undefined) {\r\n    return wantedHeight / height;\r\n  }\r\n  return 1;\r\n}\r\n\r\n/**\r\n * @classdesc\r\n * Set icon style for vector features.\r\n * @api\r\n */\r\nclass Icon extends ImageStyle {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\r\n\r\n    /**\r\n     * @type {number|import(\"../size.js\").Size}\r\n     */\r\n    const scale = options.scale !== undefined ? options.scale : 1;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    const rotateWithView =\r\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\r\n\r\n    super({\r\n      opacity: opacity,\r\n      rotation: rotation,\r\n      scale: scale,\r\n      displacement:\r\n        options.displacement !== undefined ? options.displacement : [0, 0],\r\n      rotateWithView: rotateWithView,\r\n      declutterMode: options.declutterMode,\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.normalizedAnchor_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {IconOrigin}\r\n     */\r\n    this.anchorOrigin_ =\r\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\r\n\r\n    /**\r\n     * @private\r\n     * @type {IconAnchorUnits}\r\n     */\r\n    this.anchorXUnits_ =\r\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\r\n\r\n    /**\r\n     * @private\r\n     * @type {IconAnchorUnits}\r\n     */\r\n    this.anchorYUnits_ =\r\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\r\n\r\n    /**\r\n     * @private\r\n     * @type {?string}\r\n     */\r\n    this.crossOrigin_ =\r\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\r\n\r\n    const image = options.img !== undefined ? options.img : null;\r\n\r\n    let cacheKey = options.src;\r\n\r\n    assert(\r\n      !(cacheKey !== undefined && image),\r\n      '`image` and `src` cannot be provided at the same time',\r\n    );\r\n\r\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\r\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\r\n    }\r\n    assert(\r\n      cacheKey !== undefined && cacheKey.length > 0,\r\n      'A defined and non-empty `src` or `image` must be provided',\r\n    );\r\n\r\n    assert(\r\n      !(\r\n        (options.width !== undefined || options.height !== undefined) &&\r\n        options.scale !== undefined\r\n      ),\r\n      '`width` or `height` cannot be provided together with `scale`',\r\n    );\r\n\r\n    let imageState;\r\n    if (options.src !== undefined) {\r\n      imageState = ImageState.IDLE;\r\n    } else if (image !== undefined) {\r\n      if (image instanceof HTMLImageElement) {\r\n        if (image.complete) {\r\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\r\n        } else {\r\n          imageState = ImageState.LOADING;\r\n        }\r\n      } else {\r\n        imageState = ImageState.LOADED;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../color.js\").Color}\r\n     */\r\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./IconImage.js\").default}\r\n     */\r\n    this.iconImage_ = getIconImage(\r\n      image,\r\n      /** @type {string} */ (cacheKey),\r\n      this.crossOrigin_,\r\n      imageState,\r\n      this.color_,\r\n    );\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\r\n    /**\r\n     * @private\r\n     * @type {IconOrigin}\r\n     */\r\n    this.offsetOrigin_ =\r\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.origin_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.size_ = options.size !== undefined ? options.size : null;\r\n\r\n    /**\r\n     * Calculate the scale if width or height were given.\r\n     */\r\n    if (options.width !== undefined || options.height !== undefined) {\r\n      let width, height;\r\n      if (options.size) {\r\n        [width, height] = options.size;\r\n      } else {\r\n        const image = this.getImage(1);\r\n        if (image.width && image.height) {\r\n          width = image.width;\r\n          height = image.height;\r\n        } else if (image instanceof HTMLImageElement) {\r\n          this.initialOptions_ = options;\r\n          const onload = () => {\r\n            this.unlistenImageChange(onload);\r\n            if (!this.initialOptions_) {\r\n              return;\r\n            }\r\n            const imageSize = this.iconImage_.getSize();\r\n            this.setScale(\r\n              calculateScale(\r\n                imageSize[0],\r\n                imageSize[1],\r\n                options.width,\r\n                options.height,\r\n              ),\r\n            );\r\n          };\r\n          this.listenImageChange(onload);\r\n          return;\r\n        }\r\n      }\r\n      if (width !== undefined) {\r\n        this.setScale(\r\n          calculateScale(width, height, options.width, options.height),\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\r\n   * @return {Icon} The cloned style.\r\n   * @api\r\n   */\r\n  clone() {\r\n    let scale, width, height;\r\n    if (this.initialOptions_) {\r\n      width = this.initialOptions_.width;\r\n      height = this.initialOptions_.height;\r\n    } else {\r\n      scale = this.getScale();\r\n      scale = Array.isArray(scale) ? scale.slice() : scale;\r\n    }\r\n    return new Icon({\r\n      anchor: this.anchor_.slice(),\r\n      anchorOrigin: this.anchorOrigin_,\r\n      anchorXUnits: this.anchorXUnits_,\r\n      anchorYUnits: this.anchorYUnits_,\r\n      color:\r\n        this.color_ && this.color_.slice\r\n          ? this.color_.slice()\r\n          : this.color_ || undefined,\r\n      crossOrigin: this.crossOrigin_,\r\n      offset: this.offset_.slice(),\r\n      offsetOrigin: this.offsetOrigin_,\r\n      opacity: this.getOpacity(),\r\n      rotateWithView: this.getRotateWithView(),\r\n      rotation: this.getRotation(),\r\n      scale,\r\n      width,\r\n      height,\r\n      size: this.size_ !== null ? this.size_.slice() : undefined,\r\n      src: this.getSrc(),\r\n      displacement: this.getDisplacement().slice(),\r\n      declutterMode: this.getDeclutterMode(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the anchor point in pixels. The anchor determines the center point for the\r\n   * symbolizer.\r\n   * @return {Array<number>} Anchor.\r\n   * @api\r\n   */\r\n  getAnchor() {\r\n    let anchor = this.normalizedAnchor_;\r\n    if (!anchor) {\r\n      anchor = this.anchor_;\r\n      const size = this.getSize();\r\n      if (\r\n        this.anchorXUnits_ == 'fraction' ||\r\n        this.anchorYUnits_ == 'fraction'\r\n      ) {\r\n        if (!size) {\r\n          return null;\r\n        }\r\n        anchor = this.anchor_.slice();\r\n        if (this.anchorXUnits_ == 'fraction') {\r\n          anchor[0] *= size[0];\r\n        }\r\n        if (this.anchorYUnits_ == 'fraction') {\r\n          anchor[1] *= size[1];\r\n        }\r\n      }\r\n\r\n      if (this.anchorOrigin_ != 'top-left') {\r\n        if (!size) {\r\n          return null;\r\n        }\r\n        if (anchor === this.anchor_) {\r\n          anchor = this.anchor_.slice();\r\n        }\r\n        if (\r\n          this.anchorOrigin_ == 'top-right' ||\r\n          this.anchorOrigin_ == 'bottom-right'\r\n        ) {\r\n          anchor[0] = -anchor[0] + size[0];\r\n        }\r\n        if (\r\n          this.anchorOrigin_ == 'bottom-left' ||\r\n          this.anchorOrigin_ == 'bottom-right'\r\n        ) {\r\n          anchor[1] = -anchor[1] + size[1];\r\n        }\r\n      }\r\n      this.normalizedAnchor_ = anchor;\r\n    }\r\n    const displacement = this.getDisplacement();\r\n    const scale = this.getScaleArray();\r\n    // anchor is scaled by renderer but displacement should not be scaled\r\n    // so divide by scale here\r\n    return [\r\n      anchor[0] - displacement[0] / scale[0],\r\n      anchor[1] + displacement[1] / scale[1],\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Set the anchor point. The anchor determines the center point for the\r\n   * symbolizer.\r\n   *\r\n   * @param {Array<number>} anchor Anchor.\r\n   * @api\r\n   */\r\n  setAnchor(anchor) {\r\n    this.anchor_ = anchor;\r\n    this.normalizedAnchor_ = null;\r\n  }\r\n\r\n  /**\r\n   * Get the icon color.\r\n   * @return {import(\"../color.js\").Color} Color.\r\n   * @api\r\n   */\r\n  getColor() {\r\n    return this.color_;\r\n  }\r\n\r\n  /**\r\n   * Get the image icon.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\r\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\r\n   * @api\r\n   */\r\n  getImage(pixelRatio) {\r\n    return this.iconImage_.getImage(pixelRatio);\r\n  }\r\n\r\n  /**\r\n   * Get the pixel ratio.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {number} The pixel ratio of the image.\r\n   * @api\r\n   */\r\n  getPixelRatio(pixelRatio) {\r\n    return this.iconImage_.getPixelRatio(pixelRatio);\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../size.js\").Size} Image size.\r\n   */\r\n  getImageSize() {\r\n    return this.iconImage_.getSize();\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../ImageState.js\").default} Image state.\r\n   */\r\n  getImageState() {\r\n    return this.iconImage_.getImageState();\r\n  }\r\n\r\n  /**\r\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\r\n   */\r\n  getHitDetectionImage() {\r\n    return this.iconImage_.getHitDetectionImage();\r\n  }\r\n\r\n  /**\r\n   * Get the origin of the symbolizer.\r\n   * @return {Array<number>} Origin.\r\n   * @api\r\n   */\r\n  getOrigin() {\r\n    if (this.origin_) {\r\n      return this.origin_;\r\n    }\r\n    let offset = this.offset_;\r\n\r\n    if (this.offsetOrigin_ != 'top-left') {\r\n      const size = this.getSize();\r\n      const iconImageSize = this.iconImage_.getSize();\r\n      if (!size || !iconImageSize) {\r\n        return null;\r\n      }\r\n      offset = offset.slice();\r\n      if (\r\n        this.offsetOrigin_ == 'top-right' ||\r\n        this.offsetOrigin_ == 'bottom-right'\r\n      ) {\r\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\r\n      }\r\n      if (\r\n        this.offsetOrigin_ == 'bottom-left' ||\r\n        this.offsetOrigin_ == 'bottom-right'\r\n      ) {\r\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\r\n      }\r\n    }\r\n    this.origin_ = offset;\r\n    return this.origin_;\r\n  }\r\n\r\n  /**\r\n   * Get the image URL.\r\n   * @return {string|undefined} Image src.\r\n   * @api\r\n   */\r\n  getSrc() {\r\n    return this.iconImage_.getSrc();\r\n  }\r\n\r\n  /**\r\n   * Get the size of the icon (in pixels).\r\n   * @return {import(\"../size.js\").Size} Image size.\r\n   * @api\r\n   */\r\n  getSize() {\r\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\r\n  }\r\n\r\n  /**\r\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\r\n   * @return {number} Icon width (in pixels).\r\n   * @api\r\n   */\r\n  getWidth() {\r\n    const scale = this.getScaleArray();\r\n    if (this.size_) {\r\n      return this.size_[0] * scale[0];\r\n    }\r\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\r\n      return this.iconImage_.getSize()[0] * scale[0];\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\r\n   * @return {number} Icon height (in pixels).\r\n   * @api\r\n   */\r\n  getHeight() {\r\n    const scale = this.getScaleArray();\r\n    if (this.size_) {\r\n      return this.size_[1] * scale[1];\r\n    }\r\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\r\n      return this.iconImage_.getSize()[1] * scale[1];\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Set the scale.\r\n   *\r\n   * @param {number|import(\"../size.js\").Size} scale Scale.\r\n   * @api\r\n   */\r\n  setScale(scale) {\r\n    delete this.initialOptions_;\r\n    super.setScale(scale);\r\n  }\r\n\r\n  /**\r\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\r\n   */\r\n  listenImageChange(listener) {\r\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\r\n  }\r\n\r\n  /**\r\n   * Load not yet loaded URI.\r\n   * When rendering a feature with an icon style, the vector renderer will\r\n   * automatically call this method. However, you might want to call this\r\n   * method yourself for preloading or other purposes.\r\n   * @api\r\n   */\r\n  load() {\r\n    this.iconImage_.load();\r\n  }\r\n\r\n  /**\r\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\r\n   */\r\n  unlistenImageChange(listener) {\r\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\r\n  }\r\n\r\n  ready() {\r\n    return this.iconImage_.ready();\r\n  }\r\n}\r\n\r\nexport default Icon;\r\n", "/**\r\n * @module ol/expr/expression\r\n */\r\nimport {ascending} from '../array.js';\r\nimport {isStringColor} from '../color.js';\r\n\r\n/**\r\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\r\n * The result of parsing an encoded expression is one of the specific expression classes.\r\n * During parsing, information is added to the parsing context about the data accessed by the\r\n * expression.\r\n */\r\n\r\n/**\r\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\r\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\r\n *\r\n * The following operators can be used:\r\n *\r\n * * Reading operators:\r\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\r\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\r\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\r\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\r\n *     of bands, depending on the underlying data source and\r\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\r\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\r\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\r\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\r\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\r\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\r\n *     `Multi*` values are returned as their singular equivalent\r\n *     `Circle` geometries are returned as 'Polygon'\r\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\r\n *   * `['resolution']` returns the current resolution\r\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\r\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\r\n *   * `['zoom']` The current zoom level (WebGL only).\r\n *\r\n * * Math operators:\r\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\r\n *   * `['/', value1, value2]` divides `value1` by `value2`\r\n *   * `['+', value1, value2, ...]` adds the values\r\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\r\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\r\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\r\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\r\n *   * `['abs', value1]` returns the absolute value of `value1`\r\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\r\n *   * `['round', value1]` returns the nearest integer to `value1`\r\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\r\n *   * `['sin', value1]` returns the sine of `value1`\r\n *   * `['cos', value1]` returns the cosine of `value1`\r\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\r\n *   * `['sqrt', value1]` returns the square root of `value1`\r\n *\r\n * * Transform operators:\r\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\r\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\r\n *     All conditions should be `boolean`, output and fallback can be any kind.\r\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\r\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\r\n *     returns the `fallback` value.\r\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\r\n *     `fallback` values must be of the same type, and can be of any kind.\r\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\r\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\r\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\r\n *     of 1 is equivalent to `['linear']`.\r\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\r\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\r\n *     between `output1` and `outputN`.\r\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\r\n *     An example would be to provide a default value for get: ['coalesce',['get','propertynanme'],'default value']]\r\n *\r\n * * Logical operators:\r\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\r\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\r\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\r\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\r\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\r\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\r\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\r\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\r\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\r\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\r\n *     (inclusively), or `false` otherwise.\r\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\r\n *     `false` otherwise.\r\n *     This operator has the following limitations:\r\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\r\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\r\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\r\n *     `['literal', ['abc', 'def', 'ghi']]`\r\n *\r\n * * Conversion operators:\r\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\r\n *     values can currently only be 2, 3 or 4 (WebGL only).\r\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\r\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\r\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\r\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\r\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\r\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\r\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\r\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\r\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\r\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\r\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\r\n *\r\n * Values can either be literals or another operator, as they will be evaluated recursively.\r\n * Literal values can be of the following types:\r\n * * `boolean`\r\n * * `number`\r\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\r\n * * `string`\r\n * * {@link module:ol/color~Color}\r\n *\r\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\r\n * @api\r\n */\r\n\r\nlet numTypes = 0;\r\nexport const NoneType = 0;\r\nexport const BooleanType = 1 << numTypes++;\r\nexport const NumberType = 1 << numTypes++;\r\nexport const StringType = 1 << numTypes++;\r\nexport const ColorType = 1 << numTypes++;\r\nexport const NumberArrayType = 1 << numTypes++;\r\nexport const AnyType = Math.pow(2, numTypes) - 1;\r\n\r\nconst typeNames = {\r\n  [BooleanType]: 'boolean',\r\n  [NumberType]: 'number',\r\n  [StringType]: 'string',\r\n  [ColorType]: 'color',\r\n  [NumberArrayType]: 'number[]',\r\n};\r\n\r\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\r\n\r\n/**\r\n * Get a string representation for a type.\r\n * @param {number} type The type.\r\n * @return {string} The type name.\r\n */\r\nexport function typeName(type) {\r\n  const names = [];\r\n  for (const namedType of namedTypes) {\r\n    if (includesType(type, namedType)) {\r\n      names.push(typeNames[namedType]);\r\n    }\r\n  }\r\n  if (names.length === 0) {\r\n    return 'untyped';\r\n  }\r\n  if (names.length < 3) {\r\n    return names.join(' or ');\r\n  }\r\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\r\n}\r\n\r\n/**\r\n * @param {number} broad The broad type.\r\n * @param {number} specific The specific type.\r\n * @return {boolean} The broad type includes the specific type.\r\n */\r\nexport function includesType(broad, specific) {\r\n  return (broad & specific) === specific;\r\n}\r\n\r\n/**\r\n * @param {number} oneType One type.\r\n * @param {number} otherType Another type.\r\n * @return {boolean} The set of types overlap (share a common specific type)\r\n */\r\nexport function overlapsType(oneType, otherType) {\r\n  return !!(oneType & otherType);\r\n}\r\n\r\n/**\r\n * @param {number} type The type.\r\n * @param {number} expected The expected type.\r\n * @return {boolean} The given type is exactly the expected type.\r\n */\r\nexport function isType(type, expected) {\r\n  return type === expected;\r\n}\r\n\r\n/**\r\n * @typedef {boolean|number|string|Array<number>} LiteralValue\r\n */\r\n\r\nexport class LiteralExpression {\r\n  /**\r\n   * @param {number} type The value type.\r\n   * @param {LiteralValue} value The literal value.\r\n   */\r\n  constructor(type, value) {\r\n    this.type = type;\r\n    this.value = value;\r\n  }\r\n}\r\n\r\nexport class CallExpression {\r\n  /**\r\n   * @param {number} type The return type.\r\n   * @param {string} operator The operator.\r\n   * @param {...Expression} args The arguments.\r\n   */\r\n  constructor(type, operator, ...args) {\r\n    this.type = type;\r\n    this.operator = operator;\r\n    this.args = args;\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {LiteralExpression|CallExpression} Expression\r\n */\r\n\r\n/**\r\n * @typedef {Object} ParsingContext\r\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\r\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\r\n * @property {boolean} featureId The style uses the feature id.\r\n * @property {boolean} geometryType The style uses the feature geometry type.\r\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\r\n */\r\n\r\n/**\r\n * @return {ParsingContext} A new parsing context.\r\n */\r\nexport function newParsingContext() {\r\n  return {\r\n    variables: new Set(),\r\n    properties: new Set(),\r\n    featureId: false,\r\n    geometryType: false,\r\n    style: {},\r\n  };\r\n}\r\n\r\n/**\r\n * @param {string} typeHint Type hint\r\n * @return {number} Resulting value type (will be a single type)\r\n */\r\nfunction getTypeFromHint(typeHint) {\r\n  switch (typeHint) {\r\n    case 'string':\r\n      return StringType;\r\n    case 'color':\r\n      return ColorType;\r\n    case 'number':\r\n      return NumberType;\r\n    case 'boolean':\r\n      return BooleanType;\r\n    case 'number[]':\r\n      return NumberArrayType;\r\n    default:\r\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {LiteralValue|Array} EncodedExpression\r\n */\r\n\r\n/**\r\n * @param {EncodedExpression} encoded The encoded expression.\r\n * @param {ParsingContext} context The parsing context.\r\n * @param {number} [typeHint] Optional type hint\r\n * @return {Expression} The parsed expression result.\r\n */\r\nexport function parse(encoded, context, typeHint) {\r\n  switch (typeof encoded) {\r\n    case 'boolean': {\r\n      return new LiteralExpression(BooleanType, encoded);\r\n    }\r\n    case 'number': {\r\n      return new LiteralExpression(NumberType, encoded);\r\n    }\r\n    case 'string': {\r\n      let type = StringType;\r\n      if (isStringColor(encoded)) {\r\n        type |= ColorType;\r\n      }\r\n      // apply the given type hint only if it won't result in an empty type\r\n      if (!isType(type & typeHint, NoneType)) {\r\n        type &= typeHint;\r\n      }\r\n      return new LiteralExpression(type, encoded);\r\n    }\r\n    default: {\r\n      // pass\r\n    }\r\n  }\r\n\r\n  if (!Array.isArray(encoded)) {\r\n    throw new Error('Expression must be an array or a primitive value');\r\n  }\r\n\r\n  if (encoded.length === 0) {\r\n    throw new Error('Empty expression');\r\n  }\r\n\r\n  if (typeof encoded[0] === 'string') {\r\n    return parseCallExpression(encoded, context, typeHint);\r\n  }\r\n\r\n  for (const item of encoded) {\r\n    if (typeof item !== 'number') {\r\n      throw new Error('Expected an array of numbers');\r\n    }\r\n  }\r\n\r\n  let type = NumberArrayType;\r\n  if (encoded.length === 3 || encoded.length === 4) {\r\n    type |= ColorType;\r\n  }\r\n  if (typeHint) {\r\n    type &= typeHint;\r\n  }\r\n  return new LiteralExpression(type, encoded);\r\n}\r\n\r\n/**\r\n * @type {Object<string, string>}\r\n */\r\nexport const Ops = {\r\n  Get: 'get',\r\n  Var: 'var',\r\n  Concat: 'concat',\r\n  GeometryType: 'geometry-type',\r\n  Any: 'any',\r\n  All: 'all',\r\n  Not: '!',\r\n  Resolution: 'resolution',\r\n  Zoom: 'zoom',\r\n  Time: 'time',\r\n  Equal: '==',\r\n  NotEqual: '!=',\r\n  GreaterThan: '>',\r\n  GreaterThanOrEqualTo: '>=',\r\n  LessThan: '<',\r\n  LessThanOrEqualTo: '<=',\r\n  Multiply: '*',\r\n  Divide: '/',\r\n  Add: '+',\r\n  Subtract: '-',\r\n  Clamp: 'clamp',\r\n  Mod: '%',\r\n  Pow: '^',\r\n  Abs: 'abs',\r\n  Floor: 'floor',\r\n  Ceil: 'ceil',\r\n  Round: 'round',\r\n  Sin: 'sin',\r\n  Cos: 'cos',\r\n  Atan: 'atan',\r\n  Sqrt: 'sqrt',\r\n  Match: 'match',\r\n  Between: 'between',\r\n  Interpolate: 'interpolate',\r\n  Coalesce: 'coalesce',\r\n  Case: 'case',\r\n  In: 'in',\r\n  Number: 'number',\r\n  String: 'string',\r\n  Array: 'array',\r\n  Color: 'color',\r\n  Id: 'id',\r\n  Band: 'band',\r\n  Palette: 'palette',\r\n  ToString: 'to-string',\r\n};\r\n\r\n/**\r\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\r\n * Third argument is a type hint\r\n */\r\n\r\n/**\r\n * @type {Object<string, Parser>}\r\n */\r\nconst parsers = {\r\n  [Ops.Get]: createParser(\r\n    ([_, typeHint]) => {\r\n      if (typeHint !== undefined) {\r\n        return getTypeFromHint(\r\n          /** @type {string} */ (\r\n            /** @type {LiteralExpression} */ (typeHint).value\r\n          ),\r\n        );\r\n      }\r\n      return AnyType;\r\n    },\r\n    withArgsCount(1, 2),\r\n    withGetArgs,\r\n  ),\r\n  [Ops.Var]: createParser(\r\n    ([firstArg]) => firstArg.type,\r\n    withArgsCount(1, 1),\r\n    withVarArgs,\r\n  ),\r\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\r\n  [Ops.Concat]: createParser(\r\n    StringType,\r\n    withArgsCount(2, Infinity),\r\n    parseArgsOfType(AnyType),\r\n  ),\r\n  [Ops.GeometryType]: createParser(StringType, withNoArgs, usesGeometryType),\r\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\r\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\r\n  [Ops.Time]: createParser(NumberType, withNoArgs),\r\n  [Ops.Any]: createParser(\r\n    BooleanType,\r\n    withArgsCount(2, Infinity),\r\n    parseArgsOfType(BooleanType),\r\n  ),\r\n  [Ops.All]: createParser(\r\n    BooleanType,\r\n    withArgsCount(2, Infinity),\r\n    parseArgsOfType(BooleanType),\r\n  ),\r\n  [Ops.Not]: createParser(\r\n    BooleanType,\r\n    withArgsCount(1, 1),\r\n    parseArgsOfType(BooleanType),\r\n  ),\r\n  [Ops.Equal]: createParser(\r\n    BooleanType,\r\n    withArgsCount(2, 2),\r\n    parseArgsOfType(AnyType),\r\n    narrowArgsType,\r\n  ),\r\n  [Ops.NotEqual]: createParser(\r\n    BooleanType,\r\n    withArgsCount(2, 2),\r\n    parseArgsOfType(AnyType),\r\n    narrowArgsType,\r\n  ),\r\n  [Ops.GreaterThan]: createParser(\r\n    BooleanType,\r\n    withArgsCount(2, 2),\r\n    parseArgsOfType(AnyType),\r\n    narrowArgsType,\r\n  ),\r\n  [Ops.GreaterThanOrEqualTo]: createParser(\r\n    BooleanType,\r\n    withArgsCount(2, 2),\r\n    parseArgsOfType(AnyType),\r\n    narrowArgsType,\r\n  ),\r\n  [Ops.LessThan]: createParser(\r\n    BooleanType,\r\n    withArgsCount(2, 2),\r\n    parseArgsOfType(AnyType),\r\n    narrowArgsType,\r\n  ),\r\n  [Ops.LessThanOrEqualTo]: createParser(\r\n    BooleanType,\r\n    withArgsCount(2, 2),\r\n    parseArgsOfType(AnyType),\r\n    narrowArgsType,\r\n  ),\r\n  [Ops.Multiply]: createParser(\r\n    (parsedArgs) => {\r\n      let outputType = NumberType | ColorType;\r\n      for (let i = 0; i < parsedArgs.length; i++) {\r\n        outputType &= parsedArgs[i].type;\r\n      }\r\n      return outputType;\r\n    },\r\n    withArgsCount(2, Infinity),\r\n    parseArgsOfType(NumberType | ColorType),\r\n    narrowArgsType,\r\n  ),\r\n  [Ops.Coalesce]: createParser(\r\n    (parsedArgs) => {\r\n      let type = AnyType;\r\n      for (let i = 1; i < parsedArgs.length; i += 2) {\r\n        type &= parsedArgs[i].type;\r\n      }\r\n      type &= parsedArgs[parsedArgs.length - 1].type;\r\n      return type;\r\n    },\r\n    withArgsCount(2, Infinity),\r\n    parseArgsOfType(AnyType),\r\n    narrowArgsType,\r\n  ),\r\n  [Ops.Divide]: createParser(\r\n    NumberType,\r\n    withArgsCount(2, 2),\r\n    parseArgsOfType(NumberType),\r\n  ),\r\n  [Ops.Add]: createParser(\r\n    NumberType,\r\n    withArgsCount(2, Infinity),\r\n    parseArgsOfType(NumberType),\r\n  ),\r\n  [Ops.Subtract]: createParser(\r\n    NumberType,\r\n    withArgsCount(2, 2),\r\n    parseArgsOfType(NumberType),\r\n  ),\r\n  [Ops.Clamp]: createParser(\r\n    NumberType,\r\n    withArgsCount(3, 3),\r\n    parseArgsOfType(NumberType),\r\n  ),\r\n  [Ops.Mod]: createParser(\r\n    NumberType,\r\n    withArgsCount(2, 2),\r\n    parseArgsOfType(NumberType),\r\n  ),\r\n  [Ops.Pow]: createParser(\r\n    NumberType,\r\n    withArgsCount(2, 2),\r\n    parseArgsOfType(NumberType),\r\n  ),\r\n  [Ops.Abs]: createParser(\r\n    NumberType,\r\n    withArgsCount(1, 1),\r\n    parseArgsOfType(NumberType),\r\n  ),\r\n  [Ops.Floor]: createParser(\r\n    NumberType,\r\n    withArgsCount(1, 1),\r\n    parseArgsOfType(NumberType),\r\n  ),\r\n  [Ops.Ceil]: createParser(\r\n    NumberType,\r\n    withArgsCount(1, 1),\r\n    parseArgsOfType(NumberType),\r\n  ),\r\n  [Ops.Round]: createParser(\r\n    NumberType,\r\n    withArgsCount(1, 1),\r\n    parseArgsOfType(NumberType),\r\n  ),\r\n  [Ops.Sin]: createParser(\r\n    NumberType,\r\n    withArgsCount(1, 1),\r\n    parseArgsOfType(NumberType),\r\n  ),\r\n  [Ops.Cos]: createParser(\r\n    NumberType,\r\n    withArgsCount(1, 1),\r\n    parseArgsOfType(NumberType),\r\n  ),\r\n  [Ops.Atan]: createParser(\r\n    NumberType,\r\n    withArgsCount(1, 2),\r\n    parseArgsOfType(NumberType),\r\n  ),\r\n  [Ops.Sqrt]: createParser(\r\n    NumberType,\r\n    withArgsCount(1, 1),\r\n    parseArgsOfType(NumberType),\r\n  ),\r\n  [Ops.Match]: createParser(\r\n    (parsedArgs) => {\r\n      let type = AnyType;\r\n      for (let i = 2; i < parsedArgs.length; i += 2) {\r\n        type &= parsedArgs[i].type;\r\n      }\r\n      type &= parsedArgs[parsedArgs.length - 1].type;\r\n      return type;\r\n    },\r\n    withArgsCount(4, Infinity),\r\n    withEvenArgs,\r\n    parseMatchArgs,\r\n  ),\r\n  [Ops.Between]: createParser(\r\n    BooleanType,\r\n    withArgsCount(3, 3),\r\n    parseArgsOfType(NumberType),\r\n  ),\r\n  [Ops.Interpolate]: createParser(\r\n    (parsedArgs) => {\r\n      let type = ColorType | NumberType;\r\n      for (let i = 3; i < parsedArgs.length; i += 2) {\r\n        type &= parsedArgs[i].type;\r\n      }\r\n      return type;\r\n    },\r\n    withArgsCount(6, Infinity),\r\n    withEvenArgs,\r\n    parseInterpolateArgs,\r\n  ),\r\n  [Ops.Case]: createParser(\r\n    (parsedArgs) => {\r\n      let type = AnyType;\r\n      for (let i = 1; i < parsedArgs.length; i += 2) {\r\n        type &= parsedArgs[i].type;\r\n      }\r\n      type &= parsedArgs[parsedArgs.length - 1].type;\r\n      return type;\r\n    },\r\n    withArgsCount(3, Infinity),\r\n    withOddArgs,\r\n    parseCaseArgs,\r\n  ),\r\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\r\n  [Ops.Number]: createParser(\r\n    NumberType,\r\n    withArgsCount(1, Infinity),\r\n    parseArgsOfType(AnyType),\r\n  ),\r\n  [Ops.String]: createParser(\r\n    StringType,\r\n    withArgsCount(1, Infinity),\r\n    parseArgsOfType(AnyType),\r\n  ),\r\n  [Ops.Array]: createParser(\r\n    (parsedArgs) => {\r\n      return parsedArgs.length === 3 || parsedArgs.length === 4\r\n        ? NumberArrayType | ColorType\r\n        : NumberArrayType;\r\n    },\r\n    withArgsCount(1, Infinity),\r\n    parseArgsOfType(NumberType),\r\n  ),\r\n  [Ops.Color]: createParser(\r\n    ColorType,\r\n    withArgsCount(1, 4),\r\n    parseArgsOfType(NumberType),\r\n  ),\r\n  [Ops.Band]: createParser(\r\n    NumberType,\r\n    withArgsCount(1, 3),\r\n    parseArgsOfType(NumberType),\r\n  ),\r\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\r\n  [Ops.ToString]: createParser(\r\n    StringType,\r\n    withArgsCount(1, 1),\r\n    parseArgsOfType(BooleanType | NumberType | StringType | ColorType),\r\n  ),\r\n};\r\n\r\n/**\r\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\r\n * An argument validator applies various checks to an encoded expression arguments\r\n * Returns the parsed arguments if any.\r\n * Third argument is the array of parsed arguments from previous validators\r\n * Fourth argument is an optional type hint\r\n */\r\n\r\n/**\r\n * @type ArgValidator\r\n */\r\nfunction withGetArgs(encoded, context) {\r\n  const arg = parse(encoded[1], context);\r\n  if (!(arg instanceof LiteralExpression)) {\r\n    throw new Error('Expected a literal argument for get operation');\r\n  }\r\n  if (typeof arg.value !== 'string') {\r\n    throw new Error('Expected a string argument for get operation');\r\n  }\r\n  context.properties.add(arg.value);\r\n  if (encoded.length === 3) {\r\n    const hint = parse(encoded[2], context);\r\n    return [arg, hint];\r\n  }\r\n  return [arg];\r\n}\r\n\r\n/**\r\n * @type ArgValidator\r\n */\r\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\r\n  const varName = encoded[1];\r\n  if (typeof varName !== 'string') {\r\n    throw new Error('Expected a string argument for var operation');\r\n  }\r\n  context.variables.add(varName);\r\n  if (\r\n    !('variables' in context.style) ||\r\n    context.style.variables[varName] === undefined\r\n  ) {\r\n    return [new LiteralExpression(AnyType, varName)];\r\n  }\r\n  const initialValue = context.style.variables[varName];\r\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\r\n  arg.value = varName;\r\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\r\n    throw new Error(\r\n      `The variable ${varName} has type ${typeName(\r\n        arg.type,\r\n      )} but the following type was expected: ${typeName(typeHint)}`,\r\n    );\r\n  }\r\n  return [arg];\r\n}\r\n\r\n/**\r\n * @type ArgValidator\r\n */\r\nfunction usesFeatureId(encoded, context) {\r\n  context.featureId = true;\r\n}\r\n\r\n/**\r\n * @type ArgValidator\r\n */\r\nfunction usesGeometryType(encoded, context) {\r\n  context.geometryType = true;\r\n}\r\n\r\n/**\r\n * @type ArgValidator\r\n */\r\nfunction withNoArgs(encoded, context) {\r\n  const operation = encoded[0];\r\n  if (encoded.length !== 1) {\r\n    throw new Error(`Expected no arguments for ${operation} operation`);\r\n  }\r\n  return [];\r\n}\r\n\r\n/**\r\n * @param {number} minArgs The minimum number of arguments.\r\n * @param {number} maxArgs The maximum number of arguments.\r\n * @return {ArgValidator} The argument validator\r\n */\r\nfunction withArgsCount(minArgs, maxArgs) {\r\n  return function (encoded, context) {\r\n    const operation = encoded[0];\r\n    const argCount = encoded.length - 1;\r\n    if (minArgs === maxArgs) {\r\n      if (argCount !== minArgs) {\r\n        const plural = minArgs === 1 ? '' : 's';\r\n        throw new Error(\r\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\r\n        );\r\n      }\r\n    } else if (argCount < minArgs || argCount > maxArgs) {\r\n      const range =\r\n        maxArgs === Infinity\r\n          ? `${minArgs} or more`\r\n          : `${minArgs} to ${maxArgs}`;\r\n      throw new Error(\r\n        `Expected ${range} arguments for ${operation}, got ${argCount}`,\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * @param {number} argType The argument type.\r\n * @return {ArgValidator} The argument validator\r\n */\r\nfunction parseArgsOfType(argType) {\r\n  return function (encoded, context) {\r\n    const operation = encoded[0];\r\n    const argCount = encoded.length - 1;\r\n    /**\r\n     * @type {Array<Expression>}\r\n     */\r\n    const args = new Array(argCount);\r\n    for (let i = 0; i < argCount; ++i) {\r\n      const expression = parse(encoded[i + 1], context);\r\n      if (!overlapsType(argType, expression.type)) {\r\n        const gotType = typeName(argType);\r\n        const expectedType = typeName(expression.type);\r\n        throw new Error(\r\n          `Unexpected type for argument ${i} of ${operation} operation` +\r\n            `, got ${gotType} but expected ${expectedType}`,\r\n        );\r\n      }\r\n      expression.type &= argType;\r\n      args[i] = expression;\r\n    }\r\n    return args;\r\n  };\r\n}\r\n\r\n/**\r\n * @type {ArgValidator}\r\n */\r\nfunction narrowArgsType(encoded, context, parsedArgs) {\r\n  const operation = encoded[0];\r\n  const argCount = encoded.length - 1;\r\n\r\n  // first pass to determine a narrowed down type\r\n  let sameType = AnyType;\r\n  for (let i = 0; i < parsedArgs.length; ++i) {\r\n    sameType &= parsedArgs[i].type;\r\n  }\r\n\r\n  if (sameType === NoneType) {\r\n    throw new Error(\r\n      `No common type could be found for arguments of ${operation} operation`,\r\n    );\r\n  }\r\n\r\n  // re-parse args\r\n  const args = new Array(argCount);\r\n  for (let i = 0; i < argCount; ++i) {\r\n    args[i] = parse(encoded[i + 1], context, sameType);\r\n  }\r\n  return args;\r\n}\r\n\r\n/**\r\n * @type {ArgValidator}\r\n */\r\nfunction withOddArgs(encoded, context) {\r\n  const operation = encoded[0];\r\n  const argCount = encoded.length - 1;\r\n  if (argCount % 2 === 0) {\r\n    throw new Error(\r\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\r\n        argCount,\r\n      )} instead`,\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * @type {ArgValidator}\r\n */\r\nfunction withEvenArgs(encoded, context) {\r\n  const operation = encoded[0];\r\n  const argCount = encoded.length - 1;\r\n  if (argCount % 2 === 1) {\r\n    throw new Error(\r\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\r\n        argCount,\r\n      )} instead`,\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * @type ArgValidator\r\n */\r\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\r\n  const argsCount = encoded.length - 1;\r\n\r\n  const input = parse(encoded[1], context);\r\n  let inputType = input.type;\r\n  const fallback = parse(encoded[encoded.length - 1], context);\r\n  let outputType =\r\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\r\n\r\n  // first parse args to figure out possible types\r\n  const args = new Array(argsCount - 2);\r\n  for (let i = 0; i < argsCount - 2; i += 2) {\r\n    const match = parse(encoded[i + 2], context);\r\n    const output = parse(encoded[i + 3], context);\r\n    inputType &= match.type;\r\n    outputType &= output.type;\r\n    args[i] = match;\r\n    args[i + 1] = output;\r\n  }\r\n\r\n  // check input and output types validity\r\n  const expectedInputType = StringType | NumberType | BooleanType;\r\n  if (!overlapsType(expectedInputType, inputType)) {\r\n    throw new Error(\r\n      `Expected an input of type ${typeName(\r\n        expectedInputType,\r\n      )} for the interpolate operation` +\r\n        `, got ${typeName(inputType)} instead`,\r\n    );\r\n  }\r\n  if (isType(outputType, NoneType)) {\r\n    throw new Error(\r\n      `Could not find a common output type for the following match operation: ` +\r\n        JSON.stringify(encoded),\r\n    );\r\n  }\r\n\r\n  // parse again inputs and outputs with common type\r\n  for (let i = 0; i < argsCount - 2; i += 2) {\r\n    const match = parse(encoded[i + 2], context, inputType);\r\n    const output = parse(encoded[i + 3], context, outputType);\r\n    args[i] = match;\r\n    args[i + 1] = output;\r\n  }\r\n\r\n  return [\r\n    parse(encoded[1], context, inputType),\r\n    ...args,\r\n    parse(encoded[encoded.length - 1], context, outputType),\r\n  ];\r\n}\r\n\r\n/**\r\n * @type ArgValidator\r\n */\r\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\r\n  const interpolationType = encoded[1];\r\n  let interpolation;\r\n  switch (interpolationType[0]) {\r\n    case 'linear':\r\n      interpolation = 1;\r\n      break;\r\n    case 'exponential':\r\n      interpolation = interpolationType[1];\r\n      if (typeof interpolation !== 'number') {\r\n        throw new Error(\r\n          `Expected a number base for exponential interpolation` +\r\n            `, got ${JSON.stringify(interpolation)} instead`,\r\n        );\r\n      }\r\n      break;\r\n    default:\r\n      interpolation = null;\r\n  }\r\n  if (!interpolation) {\r\n    throw new Error(\r\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`,\r\n    );\r\n  }\r\n  interpolation = parse(interpolation, context);\r\n\r\n  // check input types\r\n  let input = parse(encoded[2], context);\r\n  if (!overlapsType(NumberType, input.type)) {\r\n    throw new Error(\r\n      `Expected an input of type number for the interpolate operation` +\r\n        `, got ${typeName(input.type)} instead`,\r\n    );\r\n  }\r\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\r\n\r\n  const args = new Array(encoded.length - 3);\r\n  for (let i = 0; i < args.length; i += 2) {\r\n    let stop = parse(encoded[i + 3], context);\r\n    if (!overlapsType(NumberType, stop.type)) {\r\n      throw new Error(\r\n        `Expected all stop input values in the interpolate operation to be of type number` +\r\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`,\r\n      );\r\n    }\r\n    let output = parse(encoded[i + 4], context);\r\n    if (!overlapsType(NumberType | ColorType, output.type)) {\r\n      throw new Error(\r\n        `Expected all stop output values in the interpolate operation to be a number or color` +\r\n          `, got ${typeName(output.type)} at position ${i + 3} instead`,\r\n      );\r\n    }\r\n    // parse again with narrower types\r\n    stop = parse(encoded[i + 3], context, NumberType);\r\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\r\n    args[i] = stop;\r\n    args[i + 1] = output;\r\n  }\r\n\r\n  return [interpolation, input, ...args];\r\n}\r\n\r\n/**\r\n * @type ArgValidator\r\n */\r\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\r\n  const fallback = parse(encoded[encoded.length - 1], context);\r\n  let outputType =\r\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\r\n\r\n  // first parse args to figure out possible types\r\n  const args = new Array(encoded.length - 1);\r\n  for (let i = 0; i < args.length - 1; i += 2) {\r\n    const condition = parse(encoded[i + 1], context);\r\n    const output = parse(encoded[i + 2], context);\r\n    if (!overlapsType(BooleanType, condition.type)) {\r\n      throw new Error(\r\n        `Expected all conditions in the case operation to be of type boolean` +\r\n          `, got ${typeName(condition.type)} at position ${i} instead`,\r\n      );\r\n    }\r\n    outputType &= output.type;\r\n    args[i] = condition;\r\n    args[i + 1] = output;\r\n  }\r\n\r\n  if (isType(outputType, NoneType)) {\r\n    throw new Error(\r\n      `Could not find a common output type for the following case operation: ` +\r\n        JSON.stringify(encoded),\r\n    );\r\n  }\r\n\r\n  // parse again args with common output type\r\n  for (let i = 0; i < args.length - 1; i += 2) {\r\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\r\n  }\r\n  args[args.length - 1] = parse(\r\n    encoded[encoded.length - 1],\r\n    context,\r\n    outputType,\r\n  );\r\n\r\n  return args;\r\n}\r\n\r\n/**\r\n * @type ArgValidator\r\n */\r\nfunction parseInArgs(encoded, context) {\r\n  /** @type {Array<number|string>} */\r\n  let haystack = /** @type {any} */ (encoded[2]);\r\n  if (!Array.isArray(haystack)) {\r\n    throw new Error(\r\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`,\r\n    );\r\n  }\r\n  if (typeof haystack[0] === 'string') {\r\n    if (haystack[0] !== 'literal') {\r\n      throw new Error(\r\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`,\r\n      );\r\n    }\r\n    if (!Array.isArray(haystack[1])) {\r\n      throw new Error(\r\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`,\r\n      );\r\n    }\r\n    haystack = haystack[1];\r\n  }\r\n\r\n  let needleType = StringType | NumberType;\r\n  const args = new Array(haystack.length);\r\n  for (let i = 0; i < args.length; i++) {\r\n    const arg = parse(haystack[i], context);\r\n    needleType &= arg.type;\r\n    args[i] = arg;\r\n  }\r\n  if (isType(needleType, NoneType)) {\r\n    throw new Error(\r\n      `Could not find a common type for the following in operation: ` +\r\n        JSON.stringify(encoded),\r\n    );\r\n  }\r\n\r\n  const needle = parse(encoded[1], context, needleType);\r\n  return [needle, ...args];\r\n}\r\n\r\n/**\r\n * @type ArgValidator\r\n */\r\nfunction parsePaletteArgs(encoded, context) {\r\n  const index = parse(encoded[1], context, NumberType);\r\n  if (index.type !== NumberType) {\r\n    throw new Error(\r\n      `The first argument of palette must be an number, got ${typeName(\r\n        index.type,\r\n      )} instead`,\r\n    );\r\n  }\r\n  const colors = encoded[2];\r\n  if (!Array.isArray(colors)) {\r\n    throw new Error('The second argument of palette must be an array');\r\n  }\r\n  const parsedColors = new Array(colors.length);\r\n  for (let i = 0; i < parsedColors.length; i++) {\r\n    const color = parse(colors[i], context, ColorType);\r\n    if (!(color instanceof LiteralExpression)) {\r\n      throw new Error(\r\n        `The palette color at index ${i} must be a literal value`,\r\n      );\r\n    }\r\n    if (!overlapsType(color.type, ColorType)) {\r\n      throw new Error(\r\n        `The palette color at index ${i} should be of type color, got ${typeName(\r\n          color.type,\r\n        )} instead`,\r\n      );\r\n    }\r\n    parsedColors[i] = color;\r\n  }\r\n  return [index, ...parsedColors];\r\n}\r\n\r\n/**\r\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\r\n * arguments\r\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\r\n * will be used as parsed arguments\r\n * @return {Parser} The parser.\r\n */\r\nfunction createParser(returnType, ...argValidators) {\r\n  return function (encoded, context, typeHint) {\r\n    const operator = encoded[0];\r\n    let parsedArgs = [];\r\n    for (let i = 0; i < argValidators.length; i++) {\r\n      parsedArgs =\r\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\r\n    }\r\n    let actualType =\r\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\r\n    if (typeHint !== undefined) {\r\n      if (!overlapsType(actualType, typeHint)) {\r\n        throw new Error(\r\n          `The following expression was expected to return ${typeName(\r\n            typeHint,\r\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\r\n            encoded,\r\n          )}`,\r\n        );\r\n      }\r\n      actualType &= typeHint;\r\n    }\r\n    if (actualType === NoneType) {\r\n      throw new Error(\r\n        `No matching type was found for the following expression: ${JSON.stringify(\r\n          encoded,\r\n        )}`,\r\n      );\r\n    }\r\n    return new CallExpression(actualType, operator, ...parsedArgs);\r\n  };\r\n}\r\n\r\n/**\r\n * @param {Array} encoded The encoded expression.\r\n * @param {ParsingContext} context The parsing context.\r\n * @param {number} [typeHint] Optional type hint\r\n * @return {Expression} The parsed expression.\r\n */\r\nfunction parseCallExpression(encoded, context, typeHint) {\r\n  const operator = encoded[0];\r\n\r\n  const parser = parsers[operator];\r\n  if (!parser) {\r\n    throw new Error(`Unknown operator: ${operator}`);\r\n  }\r\n  return parser(encoded, context, typeHint);\r\n}\r\n\r\n/**\r\n * Returns a simplified geometry type suited for the `geometry-type` operator\r\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\r\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\r\n */\r\nexport function computeGeometryType(geometry) {\r\n  if (!geometry) {\r\n    return '';\r\n  }\r\n  const type = geometry.getType();\r\n  switch (type) {\r\n    case 'Point':\r\n    case 'LineString':\r\n    case 'Polygon':\r\n      return type;\r\n    case 'MultiPoint':\r\n    case 'MultiLineString':\r\n    case 'MultiPolygon':\r\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\r\n    case 'Circle':\r\n      return 'Polygon';\r\n    case 'GeometryCollection':\r\n      return computeGeometryType(\r\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\r\n          geometry\r\n        ).getGeometries()[0],\r\n      );\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n", "/**\r\n * @module ol/expr/cpu\r\n */\r\n\r\nimport {\r\n  ColorType,\r\n  LiteralExpression,\r\n  Ops,\r\n  overlapsType,\r\n  parse,\r\n  typeName,\r\n} from './expression.js';\r\nimport {\r\n  fromString,\r\n  lchaToRgba,\r\n  normalize,\r\n  rgbaToLcha,\r\n  toString,\r\n  withAlpha,\r\n} from '../color.js';\r\n\r\n/**\r\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\r\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\r\n * expression and returns an instance of one of the expression classes.  The compiling step takes\r\n * the expression instance and returns a function that can be evaluated in to return a literal\r\n * value.  The evaluator function should do as little allocation and work as possible.\r\n */\r\n\r\n/**\r\n * @typedef {Object} EvaluationContext\r\n * @property {Object} properties The values for properties used in 'get' expressions.\r\n * @property {Object} variables The values for variables used in 'var' expressions.\r\n * @property {number} resolution The map resolution.\r\n * @property {string|number|null} featureId The feature id.\r\n * @property {string} geometryType Geometry type of the current object.\r\n */\r\n\r\n/**\r\n * @return {EvaluationContext} A new evaluation context.\r\n */\r\nexport function newEvaluationContext() {\r\n  return {\r\n    variables: {},\r\n    properties: {},\r\n    resolution: NaN,\r\n    featureId: null,\r\n    geometryType: '',\r\n  };\r\n}\r\n\r\n/**\r\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\r\n */\r\n\r\n/**\r\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\r\n */\r\n\r\n/**\r\n * @typedef {function(EvaluationContext):number} NumberEvaluator\r\n */\r\n\r\n/**\r\n * @typedef {function(EvaluationContext):string} StringEvaluator\r\n */\r\n\r\n/**\r\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\r\n */\r\n\r\n/**\r\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\r\n */\r\n\r\n/**\r\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\r\n */\r\n\r\n/**\r\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\r\n */\r\n\r\n/**\r\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\r\n */\r\n\r\n/**\r\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\r\n * @param {number} type The expected type.\r\n * @param {import('./expression.js').ParsingContext} context The parsing context.\r\n * @return {ExpressionEvaluator} The expression evaluator.\r\n */\r\nexport function buildExpression(encoded, type, context) {\r\n  const expression = parse(encoded, context);\r\n  if (!overlapsType(type, expression.type)) {\r\n    const expected = typeName(type);\r\n    const actual = typeName(expression.type);\r\n    throw new Error(\r\n      `Expected expression to be of type ${expected}, got ${actual}`,\r\n    );\r\n  }\r\n  return compileExpression(expression, context);\r\n}\r\n\r\n/**\r\n * @param {import(\"./expression.js\").Expression} expression The expression.\r\n * @param {import('./expression.js').ParsingContext} context The parsing context.\r\n * @return {ExpressionEvaluator} The evaluator function.\r\n */\r\nfunction compileExpression(expression, context) {\r\n  if (expression instanceof LiteralExpression) {\r\n    // convert colors to array if possible\r\n    if (expression.type === ColorType && typeof expression.value === 'string') {\r\n      const colorValue = fromString(expression.value);\r\n      return function () {\r\n        return colorValue;\r\n      };\r\n    }\r\n    return function () {\r\n      return expression.value;\r\n    };\r\n  }\r\n  const operator = expression.operator;\r\n  switch (operator) {\r\n    case Ops.Number:\r\n    case Ops.String:\r\n    case Ops.Coalesce: {\r\n      return compileAssertionExpression(expression, context);\r\n    }\r\n    case Ops.Get:\r\n    case Ops.Var: {\r\n      return compileAccessorExpression(expression, context);\r\n    }\r\n    case Ops.Id: {\r\n      return (context) => context.featureId;\r\n    }\r\n    case Ops.GeometryType: {\r\n      return (context) => context.geometryType;\r\n    }\r\n    case Ops.Concat: {\r\n      const args = expression.args.map((e) => compileExpression(e, context));\r\n      return (context) =>\r\n        ''.concat(...args.map((arg) => arg(context).toString()));\r\n    }\r\n    case Ops.Resolution: {\r\n      return (context) => context.resolution;\r\n    }\r\n    case Ops.Any:\r\n    case Ops.All:\r\n    case Ops.Between:\r\n    case Ops.In:\r\n    case Ops.Not: {\r\n      return compileLogicalExpression(expression, context);\r\n    }\r\n    case Ops.Equal:\r\n    case Ops.NotEqual:\r\n    case Ops.LessThan:\r\n    case Ops.LessThanOrEqualTo:\r\n    case Ops.GreaterThan:\r\n    case Ops.GreaterThanOrEqualTo: {\r\n      return compileComparisonExpression(expression, context);\r\n    }\r\n    case Ops.Multiply:\r\n    case Ops.Divide:\r\n    case Ops.Add:\r\n    case Ops.Subtract:\r\n    case Ops.Clamp:\r\n    case Ops.Mod:\r\n    case Ops.Pow:\r\n    case Ops.Abs:\r\n    case Ops.Floor:\r\n    case Ops.Ceil:\r\n    case Ops.Round:\r\n    case Ops.Sin:\r\n    case Ops.Cos:\r\n    case Ops.Atan:\r\n    case Ops.Sqrt: {\r\n      return compileNumericExpression(expression, context);\r\n    }\r\n    case Ops.Case: {\r\n      return compileCaseExpression(expression, context);\r\n    }\r\n    case Ops.Match: {\r\n      return compileMatchExpression(expression, context);\r\n    }\r\n    case Ops.Interpolate: {\r\n      return compileInterpolateExpression(expression, context);\r\n    }\r\n    case Ops.ToString: {\r\n      return compileConvertExpression(expression, context);\r\n    }\r\n    default: {\r\n      throw new Error(`Unsupported operator ${operator}`);\r\n    }\r\n    // TODO: unimplemented\r\n    // Ops.Zoom\r\n    // Ops.Time\r\n    // Ops.Array\r\n    // Ops.Color\r\n    // Ops.Band\r\n    // Ops.Palette\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import('./expression.js').CallExpression} expression The call expression.\r\n * @param {import('./expression.js').ParsingContext} context The parsing context.\r\n * @return {ExpressionEvaluator} The evaluator function.\r\n */\r\nfunction compileAssertionExpression(expression, context) {\r\n  const type = expression.operator;\r\n  const length = expression.args.length;\r\n\r\n  const args = new Array(length);\r\n  for (let i = 0; i < length; ++i) {\r\n    args[i] = compileExpression(expression.args[i], context);\r\n  }\r\n  switch (type) {\r\n    case Ops.Coalesce: {\r\n      return (context) => {\r\n        for (let i = 0; i < length; ++i) {\r\n          const value = args[i](context);\r\n          if (typeof value !== 'undefined' && value !== null) {\r\n            return value;\r\n          }\r\n        }\r\n        throw new Error('Expected one of the values to be non-null');\r\n      };\r\n    }\r\n    case Ops.Number:\r\n    case Ops.String: {\r\n      return (context) => {\r\n        for (let i = 0; i < length; ++i) {\r\n          const value = args[i](context);\r\n          if (typeof value === type) {\r\n            return value;\r\n          }\r\n        }\r\n        throw new Error(`Expected one of the values to be a ${type}`);\r\n      };\r\n    }\r\n    default: {\r\n      throw new Error(`Unsupported assertion operator ${type}`);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import('./expression.js').CallExpression} expression The call expression.\r\n * @param {import('./expression.js').ParsingContext} context The parsing context.\r\n * @return {ExpressionEvaluator} The evaluator function.\r\n */\r\nfunction compileAccessorExpression(expression, context) {\r\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\r\n  const name = /** @type {string} */ (nameExpression.value);\r\n  switch (expression.operator) {\r\n    case Ops.Get: {\r\n      return (context) => context.properties[name];\r\n    }\r\n    case Ops.Var: {\r\n      return (context) => context.variables[name];\r\n    }\r\n    default: {\r\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import('./expression.js').CallExpression} expression The call expression.\r\n * @param {import('./expression.js').ParsingContext} context The parsing context.\r\n * @return {BooleanEvaluator} The evaluator function.\r\n */\r\nfunction compileComparisonExpression(expression, context) {\r\n  const op = expression.operator;\r\n  const left = compileExpression(expression.args[0], context);\r\n  const right = compileExpression(expression.args[1], context);\r\n  switch (op) {\r\n    case Ops.Equal: {\r\n      return (context) => left(context) === right(context);\r\n    }\r\n    case Ops.NotEqual: {\r\n      return (context) => left(context) !== right(context);\r\n    }\r\n    case Ops.LessThan: {\r\n      return (context) => left(context) < right(context);\r\n    }\r\n    case Ops.LessThanOrEqualTo: {\r\n      return (context) => left(context) <= right(context);\r\n    }\r\n    case Ops.GreaterThan: {\r\n      return (context) => left(context) > right(context);\r\n    }\r\n    case Ops.GreaterThanOrEqualTo: {\r\n      return (context) => left(context) >= right(context);\r\n    }\r\n    default: {\r\n      throw new Error(`Unsupported comparison operator ${op}`);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import('./expression.js').CallExpression} expression The call expression.\r\n * @param {import('./expression.js').ParsingContext} context The parsing context.\r\n * @return {BooleanEvaluator} The evaluator function.\r\n */\r\nfunction compileLogicalExpression(expression, context) {\r\n  const op = expression.operator;\r\n  const length = expression.args.length;\r\n\r\n  const args = new Array(length);\r\n  for (let i = 0; i < length; ++i) {\r\n    args[i] = compileExpression(expression.args[i], context);\r\n  }\r\n  switch (op) {\r\n    case Ops.Any: {\r\n      return (context) => {\r\n        for (let i = 0; i < length; ++i) {\r\n          if (args[i](context)) {\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      };\r\n    }\r\n    case Ops.All: {\r\n      return (context) => {\r\n        for (let i = 0; i < length; ++i) {\r\n          if (!args[i](context)) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      };\r\n    }\r\n    case Ops.Between: {\r\n      return (context) => {\r\n        const value = args[0](context);\r\n        const min = args[1](context);\r\n        const max = args[2](context);\r\n        return value >= min && value <= max;\r\n      };\r\n    }\r\n    case Ops.In: {\r\n      return (context) => {\r\n        const value = args[0](context);\r\n        for (let i = 1; i < length; ++i) {\r\n          if (value === args[i](context)) {\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      };\r\n    }\r\n    case Ops.Not: {\r\n      return (context) => !args[0](context);\r\n    }\r\n    default: {\r\n      throw new Error(`Unsupported logical operator ${op}`);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import('./expression.js').CallExpression} expression The call expression.\r\n * @param {import('./expression.js').ParsingContext} context The parsing context.\r\n * @return {NumberEvaluator} The evaluator function.\r\n */\r\nfunction compileNumericExpression(expression, context) {\r\n  const op = expression.operator;\r\n  const length = expression.args.length;\r\n\r\n  const args = new Array(length);\r\n  for (let i = 0; i < length; ++i) {\r\n    args[i] = compileExpression(expression.args[i], context);\r\n  }\r\n  switch (op) {\r\n    case Ops.Multiply: {\r\n      return (context) => {\r\n        let value = 1;\r\n        for (let i = 0; i < length; ++i) {\r\n          value *= args[i](context);\r\n        }\r\n        return value;\r\n      };\r\n    }\r\n    case Ops.Divide: {\r\n      return (context) => args[0](context) / args[1](context);\r\n    }\r\n    case Ops.Add: {\r\n      return (context) => {\r\n        let value = 0;\r\n        for (let i = 0; i < length; ++i) {\r\n          value += args[i](context);\r\n        }\r\n        return value;\r\n      };\r\n    }\r\n    case Ops.Subtract: {\r\n      return (context) => args[0](context) - args[1](context);\r\n    }\r\n    case Ops.Clamp: {\r\n      return (context) => {\r\n        const value = args[0](context);\r\n        const min = args[1](context);\r\n        if (value < min) {\r\n          return min;\r\n        }\r\n        const max = args[2](context);\r\n        if (value > max) {\r\n          return max;\r\n        }\r\n        return value;\r\n      };\r\n    }\r\n    case Ops.Mod: {\r\n      return (context) => args[0](context) % args[1](context);\r\n    }\r\n    case Ops.Pow: {\r\n      return (context) => Math.pow(args[0](context), args[1](context));\r\n    }\r\n    case Ops.Abs: {\r\n      return (context) => Math.abs(args[0](context));\r\n    }\r\n    case Ops.Floor: {\r\n      return (context) => Math.floor(args[0](context));\r\n    }\r\n    case Ops.Ceil: {\r\n      return (context) => Math.ceil(args[0](context));\r\n    }\r\n    case Ops.Round: {\r\n      return (context) => Math.round(args[0](context));\r\n    }\r\n    case Ops.Sin: {\r\n      return (context) => Math.sin(args[0](context));\r\n    }\r\n    case Ops.Cos: {\r\n      return (context) => Math.cos(args[0](context));\r\n    }\r\n    case Ops.Atan: {\r\n      if (length === 2) {\r\n        return (context) => Math.atan2(args[0](context), args[1](context));\r\n      }\r\n      return (context) => Math.atan(args[0](context));\r\n    }\r\n    case Ops.Sqrt: {\r\n      return (context) => Math.sqrt(args[0](context));\r\n    }\r\n    default: {\r\n      throw new Error(`Unsupported numeric operator ${op}`);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import('./expression.js').CallExpression} expression The call expression.\r\n * @param {import('./expression.js').ParsingContext} context The parsing context.\r\n * @return {ExpressionEvaluator} The evaluator function.\r\n */\r\nfunction compileCaseExpression(expression, context) {\r\n  const length = expression.args.length;\r\n  const args = new Array(length);\r\n  for (let i = 0; i < length; ++i) {\r\n    args[i] = compileExpression(expression.args[i], context);\r\n  }\r\n  return (context) => {\r\n    for (let i = 0; i < length - 1; i += 2) {\r\n      const condition = args[i](context);\r\n      if (condition) {\r\n        return args[i + 1](context);\r\n      }\r\n    }\r\n    return args[length - 1](context);\r\n  };\r\n}\r\n\r\n/**\r\n * @param {import('./expression.js').CallExpression} expression The call expression.\r\n * @param {import('./expression.js').ParsingContext} context The parsing context.\r\n * @return {ExpressionEvaluator} The evaluator function.\r\n */\r\nfunction compileMatchExpression(expression, context) {\r\n  const length = expression.args.length;\r\n  const args = new Array(length);\r\n  for (let i = 0; i < length; ++i) {\r\n    args[i] = compileExpression(expression.args[i], context);\r\n  }\r\n  return (context) => {\r\n    const value = args[0](context);\r\n    for (let i = 1; i < length; i += 2) {\r\n      if (value === args[i](context)) {\r\n        return args[i + 1](context);\r\n      }\r\n    }\r\n    return args[length - 1](context);\r\n  };\r\n}\r\n\r\n/**\r\n * @param {import('./expression.js').CallExpression} expression The call expression.\r\n * @param {import('./expression.js').ParsingContext} context The parsing context.\r\n * @return {ExpressionEvaluator} The evaluator function.\r\n */\r\nfunction compileInterpolateExpression(expression, context) {\r\n  const length = expression.args.length;\r\n  const args = new Array(length);\r\n  for (let i = 0; i < length; ++i) {\r\n    args[i] = compileExpression(expression.args[i], context);\r\n  }\r\n  return (context) => {\r\n    const base = args[0](context);\r\n    const value = args[1](context);\r\n\r\n    let previousInput;\r\n    let previousOutput;\r\n    for (let i = 2; i < length; i += 2) {\r\n      const input = args[i](context);\r\n      let output = args[i + 1](context);\r\n      const isColor = Array.isArray(output);\r\n      if (isColor) {\r\n        output = withAlpha(output);\r\n      }\r\n      if (input >= value) {\r\n        if (i === 2) {\r\n          return output;\r\n        }\r\n        if (isColor) {\r\n          return interpolateColor(\r\n            base,\r\n            value,\r\n            previousInput,\r\n            previousOutput,\r\n            input,\r\n            output,\r\n          );\r\n        }\r\n        return interpolateNumber(\r\n          base,\r\n          value,\r\n          previousInput,\r\n          previousOutput,\r\n          input,\r\n          output,\r\n        );\r\n      }\r\n      previousInput = input;\r\n      previousOutput = output;\r\n    }\r\n    return previousOutput;\r\n  };\r\n}\r\n\r\n/**\r\n * @param {import('./expression.js').CallExpression} expression The call expression.\r\n * @param {import('./expression.js').ParsingContext} context The parsing context.\r\n * @return {ExpressionEvaluator} The evaluator function.\r\n */\r\nfunction compileConvertExpression(expression, context) {\r\n  const op = expression.operator;\r\n  const length = expression.args.length;\r\n\r\n  const args = new Array(length);\r\n  for (let i = 0; i < length; ++i) {\r\n    args[i] = compileExpression(expression.args[i], context);\r\n  }\r\n  switch (op) {\r\n    case Ops.ToString: {\r\n      return (context) => {\r\n        const value = args[0](context);\r\n        if (expression.args[0].type === ColorType) {\r\n          return toString(value);\r\n        }\r\n        return value.toString();\r\n      };\r\n    }\r\n    default: {\r\n      throw new Error(`Unsupported convert operator ${op}`);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {number} base The base.\r\n * @param {number} value The value.\r\n * @param {number} input1 The first input value.\r\n * @param {number} output1 The first output value.\r\n * @param {number} input2 The second input value.\r\n * @param {number} output2 The second output value.\r\n * @return {number} The interpolated value.\r\n */\r\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\r\n  const delta = input2 - input1;\r\n  if (delta === 0) {\r\n    return output1;\r\n  }\r\n  const along = value - input1;\r\n  const factor =\r\n    base === 1\r\n      ? along / delta\r\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\r\n  return output1 + factor * (output2 - output1);\r\n}\r\n\r\n/**\r\n * @param {number} base The base.\r\n * @param {number} value The value.\r\n * @param {number} input1 The first input value.\r\n * @param {import('../color.js').Color} rgba1 The first output value.\r\n * @param {number} input2 The second input value.\r\n * @param {import('../color.js').Color} rgba2 The second output value.\r\n * @return {import('../color.js').Color} The interpolated color.\r\n */\r\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\r\n  const delta = input2 - input1;\r\n  if (delta === 0) {\r\n    return rgba1;\r\n  }\r\n  const lcha1 = rgbaToLcha(rgba1);\r\n  const lcha2 = rgbaToLcha(rgba2);\r\n  let deltaHue = lcha2[2] - lcha1[2];\r\n  if (deltaHue > 180) {\r\n    deltaHue -= 360;\r\n  } else if (deltaHue < -180) {\r\n    deltaHue += 360;\r\n  }\r\n\r\n  const lcha = [\r\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\r\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\r\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\r\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\r\n  ];\r\n  return normalize(lchaToRgba(lcha));\r\n}\r\n", "/**\r\n * @module ol/render/canvas/style\r\n */\r\n\r\nimport Circle from '../../style/Circle.js';\r\nimport Fill from '../../style/Fill.js';\r\nimport Icon from '../../style/Icon.js';\r\nimport RegularShape from '../../style/RegularShape.js';\r\nimport Stroke from '../../style/Stroke.js';\r\nimport Style from '../../style/Style.js';\r\nimport Text from '../../style/Text.js';\r\nimport {\r\n  BooleanType,\r\n  ColorType,\r\n  NumberArrayType,\r\n  NumberType,\r\n  StringType,\r\n  computeGeometryType,\r\n  newParsingContext,\r\n} from '../../expr/expression.js';\r\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\r\nimport {isEmpty} from '../../obj.js';\r\nimport {toSize} from '../../size.js';\r\n\r\n/**\r\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\r\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\r\n * and returns an instance of one of the expression classes.  The compiling step takes the\r\n * expression instance and returns a function that can be evaluated to return a literal value.  The\r\n * evaluator function should do as little allocation and work as possible.\r\n */\r\n\r\n/**\r\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\r\n */\r\n\r\n/**\r\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\r\n */\r\n\r\n/**\r\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\r\n */\r\n\r\n/**\r\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\r\n */\r\n\r\n/**\r\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\r\n */\r\n\r\n/**\r\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\r\n */\r\n\r\n/**\r\n * @param {EvaluationContext} context The evaluation context.\r\n * @return {boolean} Always true.\r\n */\r\nfunction always(context) {\r\n  return true;\r\n}\r\n\r\n/**\r\n * This function adapts a rule evaluator to the existing style function interface.\r\n * After we have deprecated the style function, we can use the compiled rules directly\r\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\r\n *\r\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\r\n * @return {import('../../style/Style.js').StyleFunction} A style function.\r\n */\r\nexport function rulesToStyleFunction(rules) {\r\n  const parsingContext = newParsingContext();\r\n  const evaluator = buildRuleSet(rules, parsingContext);\r\n  const evaluationContext = newEvaluationContext();\r\n  return function (feature, resolution) {\r\n    evaluationContext.properties = feature.getPropertiesInternal();\r\n    evaluationContext.resolution = resolution;\r\n    if (parsingContext.featureId) {\r\n      const id = feature.getId();\r\n      if (id !== undefined) {\r\n        evaluationContext.featureId = id;\r\n      } else {\r\n        evaluationContext.featureId = null;\r\n      }\r\n    }\r\n    if (parsingContext.geometryType) {\r\n      evaluationContext.geometryType = computeGeometryType(\r\n        feature.getGeometry(),\r\n      );\r\n    }\r\n    return evaluator(evaluationContext);\r\n  };\r\n}\r\n\r\n/**\r\n * This function adapts a style evaluator to the existing style function interface.\r\n * After we have deprecated the style function, we can use the compiled rules directly\r\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\r\n *\r\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\r\n * @return {import('../../style/Style.js').StyleFunction} A style function.\r\n */\r\nexport function flatStylesToStyleFunction(flatStyles) {\r\n  const parsingContext = newParsingContext();\r\n  const length = flatStyles.length;\r\n\r\n  /**\r\n   * @type {Array<StyleEvaluator>}\r\n   */\r\n  const evaluators = new Array(length);\r\n  for (let i = 0; i < length; ++i) {\r\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\r\n  }\r\n  const evaluationContext = newEvaluationContext();\r\n\r\n  /**\r\n   * @type {Array<Style>}\r\n   */\r\n  const styles = new Array(length);\r\n\r\n  return function (feature, resolution) {\r\n    evaluationContext.properties = feature.getPropertiesInternal();\r\n    evaluationContext.resolution = resolution;\r\n    if (parsingContext.featureId) {\r\n      const id = feature.getId();\r\n      if (id !== undefined) {\r\n        evaluationContext.featureId = id;\r\n      } else {\r\n        evaluationContext.featureId = null;\r\n      }\r\n    }\r\n    let nonNullCount = 0;\r\n    for (let i = 0; i < length; ++i) {\r\n      const style = evaluators[i](evaluationContext);\r\n      if (style) {\r\n        styles[nonNullCount] = style;\r\n        nonNullCount += 1;\r\n      }\r\n    }\r\n    styles.length = nonNullCount;\r\n    return styles;\r\n  };\r\n}\r\n\r\n/**\r\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\r\n */\r\n\r\n/**\r\n * @typedef {Object} CompiledRule\r\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\r\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\r\n */\r\n\r\n/**\r\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\r\n * @param {ParsingContext} context The parsing context.\r\n * @return {RuleSetEvaluator} The evaluator function.\r\n */\r\nexport function buildRuleSet(rules, context) {\r\n  const length = rules.length;\r\n\r\n  /**\r\n   * @type {Array<CompiledRule>}\r\n   */\r\n  const compiledRules = new Array(length);\r\n\r\n  for (let i = 0; i < length; ++i) {\r\n    const rule = rules[i];\r\n    const filter =\r\n      'filter' in rule\r\n        ? buildExpression(rule.filter, BooleanType, context)\r\n        : always;\r\n\r\n    /**\r\n     * @type {Array<StyleEvaluator>}\r\n     */\r\n    let styles;\r\n    if (Array.isArray(rule.style)) {\r\n      const styleLength = rule.style.length;\r\n      styles = new Array(styleLength);\r\n      for (let j = 0; j < styleLength; ++j) {\r\n        styles[j] = buildStyle(rule.style[j], context);\r\n      }\r\n    } else {\r\n      styles = [buildStyle(rule.style, context)];\r\n    }\r\n\r\n    compiledRules[i] = {filter, styles};\r\n  }\r\n\r\n  return function (context) {\r\n    /**\r\n     * @type {Array<Style>}\r\n     */\r\n    const styles = [];\r\n\r\n    let someMatched = false;\r\n    for (let i = 0; i < length; ++i) {\r\n      const filterEvaluator = compiledRules[i].filter;\r\n      if (!filterEvaluator(context)) {\r\n        continue;\r\n      }\r\n      if (rules[i].else && someMatched) {\r\n        continue;\r\n      }\r\n      someMatched = true;\r\n      for (const styleEvaluator of compiledRules[i].styles) {\r\n        const style = styleEvaluator(context);\r\n        if (!style) {\r\n          continue;\r\n        }\r\n        styles.push(style);\r\n      }\r\n    }\r\n\r\n    return styles;\r\n  };\r\n}\r\n\r\n/**\r\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\r\n */\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle A flat style literal.\r\n * @param {ParsingContext} context The parsing context.\r\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\r\n * this function will be reused between invocations.\r\n */\r\nexport function buildStyle(flatStyle, context) {\r\n  const evaluateFill = buildFill(flatStyle, '', context);\r\n  const evaluateStroke = buildStroke(flatStyle, '', context);\r\n  const evaluateText = buildText(flatStyle, context);\r\n  const evaluateImage = buildImage(flatStyle, context);\r\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\r\n\r\n  if (\r\n    !evaluateFill &&\r\n    !evaluateStroke &&\r\n    !evaluateText &&\r\n    !evaluateImage &&\r\n    !isEmpty(flatStyle)\r\n  ) {\r\n    // assume this is a user error\r\n    // would be nice to check the properties and suggest \"did you mean...\"\r\n    throw new Error(\r\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\r\n        JSON.stringify(flatStyle),\r\n    );\r\n  }\r\n\r\n  const style = new Style();\r\n  return function (context) {\r\n    let empty = true;\r\n    if (evaluateFill) {\r\n      const fill = evaluateFill(context);\r\n      if (fill) {\r\n        empty = false;\r\n      }\r\n      style.setFill(fill);\r\n    }\r\n    if (evaluateStroke) {\r\n      const stroke = evaluateStroke(context);\r\n      if (stroke) {\r\n        empty = false;\r\n      }\r\n      style.setStroke(stroke);\r\n    }\r\n    if (evaluateText) {\r\n      const text = evaluateText(context);\r\n      if (text) {\r\n        empty = false;\r\n      }\r\n      style.setText(text);\r\n    }\r\n    if (evaluateImage) {\r\n      const image = evaluateImage(context);\r\n      if (image) {\r\n        empty = false;\r\n      }\r\n      style.setImage(image);\r\n    }\r\n    if (evaluateZIndex) {\r\n      style.setZIndex(evaluateZIndex(context));\r\n    }\r\n    if (empty) {\r\n      return null;\r\n    }\r\n    return style;\r\n  };\r\n}\r\n\r\n/**\r\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\r\n */\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {string} prefix The property prefix.\r\n * @param {ParsingContext} context The parsing context.\r\n * @return {FillEvaluator?} A function that evaluates to a fill.\r\n */\r\nfunction buildFill(flatStyle, prefix, context) {\r\n  let evaluateColor;\r\n  if (prefix + 'fill-pattern-src' in flatStyle) {\r\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\r\n  } else {\r\n    evaluateColor = colorLikeEvaluator(\r\n      flatStyle,\r\n      prefix + 'fill-color',\r\n      context,\r\n    );\r\n  }\r\n  if (!evaluateColor) {\r\n    return null;\r\n  }\r\n\r\n  const fill = new Fill();\r\n  return function (context) {\r\n    const color = evaluateColor(context);\r\n    if (color === 'none') {\r\n      return null;\r\n    }\r\n    fill.setColor(color);\r\n    return fill;\r\n  };\r\n}\r\n\r\n/**\r\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\r\n */\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {string} prefix The property prefix.\r\n * @param {ParsingContext} context The parsing context.\r\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\r\n */\r\nfunction buildStroke(flatStyle, prefix, context) {\r\n  const evaluateWidth = numberEvaluator(\r\n    flatStyle,\r\n    prefix + 'stroke-width',\r\n    context,\r\n  );\r\n\r\n  const evaluateColor = colorLikeEvaluator(\r\n    flatStyle,\r\n    prefix + 'stroke-color',\r\n    context,\r\n  );\r\n\r\n  if (!evaluateWidth && !evaluateColor) {\r\n    return null;\r\n  }\r\n\r\n  const evaluateLineCap = stringEvaluator(\r\n    flatStyle,\r\n    prefix + 'stroke-line-cap',\r\n    context,\r\n  );\r\n\r\n  const evaluateLineJoin = stringEvaluator(\r\n    flatStyle,\r\n    prefix + 'stroke-line-join',\r\n    context,\r\n  );\r\n\r\n  const evaluateLineDash = numberArrayEvaluator(\r\n    flatStyle,\r\n    prefix + 'stroke-line-dash',\r\n    context,\r\n  );\r\n\r\n  const evaluateLineDashOffset = numberEvaluator(\r\n    flatStyle,\r\n    prefix + 'stroke-line-dash-offset',\r\n    context,\r\n  );\r\n\r\n  const evaluateMiterLimit = numberEvaluator(\r\n    flatStyle,\r\n    prefix + 'stroke-miter-limit',\r\n    context,\r\n  );\r\n\r\n  const stroke = new Stroke();\r\n  return function (context) {\r\n    if (evaluateColor) {\r\n      const color = evaluateColor(context);\r\n      if (color === 'none') {\r\n        return null;\r\n      }\r\n      stroke.setColor(color);\r\n    }\r\n\r\n    if (evaluateWidth) {\r\n      stroke.setWidth(evaluateWidth(context));\r\n    }\r\n\r\n    if (evaluateLineCap) {\r\n      const lineCap = evaluateLineCap(context);\r\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\r\n        throw new Error('Expected butt, round, or square line cap');\r\n      }\r\n      stroke.setLineCap(lineCap);\r\n    }\r\n\r\n    if (evaluateLineJoin) {\r\n      const lineJoin = evaluateLineJoin(context);\r\n      if (\r\n        lineJoin !== 'bevel' &&\r\n        lineJoin !== 'round' &&\r\n        lineJoin !== 'miter'\r\n      ) {\r\n        throw new Error('Expected bevel, round, or miter line join');\r\n      }\r\n      stroke.setLineJoin(lineJoin);\r\n    }\r\n\r\n    if (evaluateLineDash) {\r\n      stroke.setLineDash(evaluateLineDash(context));\r\n    }\r\n\r\n    if (evaluateLineDashOffset) {\r\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\r\n    }\r\n\r\n    if (evaluateMiterLimit) {\r\n      stroke.setMiterLimit(evaluateMiterLimit(context));\r\n    }\r\n\r\n    return stroke;\r\n  };\r\n}\r\n\r\n/**\r\n * @typedef {function(EvaluationContext):Text} TextEvaluator\r\n */\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {ParsingContext} context The parsing context.\r\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\r\n */\r\nfunction buildText(flatStyle, context) {\r\n  const prefix = 'text-';\r\n\r\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\r\n  // work with our expression syntax where arrays of strings are interpreted as\r\n  // call expressions.  To support rich text, we could add a 'strings' operator\r\n  // where all the following arguments would be string values.\r\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\r\n  if (!evaluateValue) {\r\n    return null;\r\n  }\r\n\r\n  const evaluateFill = buildFill(flatStyle, prefix, context);\r\n\r\n  const evaluateBackgroundFill = buildFill(\r\n    flatStyle,\r\n    prefix + 'background-',\r\n    context,\r\n  );\r\n\r\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\r\n\r\n  const evaluateBackgroundStroke = buildStroke(\r\n    flatStyle,\r\n    prefix + 'background-',\r\n    context,\r\n  );\r\n\r\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\r\n\r\n  const evaluateMaxAngle = numberEvaluator(\r\n    flatStyle,\r\n    prefix + 'max-angle',\r\n    context,\r\n  );\r\n\r\n  const evaluateOffsetX = numberEvaluator(\r\n    flatStyle,\r\n    prefix + 'offset-x',\r\n    context,\r\n  );\r\n\r\n  const evaluateOffsetY = numberEvaluator(\r\n    flatStyle,\r\n    prefix + 'offset-y',\r\n    context,\r\n  );\r\n\r\n  const evaluateOverflow = booleanEvaluator(\r\n    flatStyle,\r\n    prefix + 'overflow',\r\n    context,\r\n  );\r\n\r\n  const evaluatePlacement = stringEvaluator(\r\n    flatStyle,\r\n    prefix + 'placement',\r\n    context,\r\n  );\r\n\r\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\r\n\r\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\r\n\r\n  const evaluateRotateWithView = booleanEvaluator(\r\n    flatStyle,\r\n    prefix + 'rotate-with-view',\r\n    context,\r\n  );\r\n\r\n  const evaluateRotation = numberEvaluator(\r\n    flatStyle,\r\n    prefix + 'rotation',\r\n    context,\r\n  );\r\n\r\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\r\n\r\n  const evaluateJustify = stringEvaluator(\r\n    flatStyle,\r\n    prefix + 'justify',\r\n    context,\r\n  );\r\n\r\n  const evaluateBaseline = stringEvaluator(\r\n    flatStyle,\r\n    prefix + 'baseline',\r\n    context,\r\n  );\r\n\r\n  const evaluatePadding = numberArrayEvaluator(\r\n    flatStyle,\r\n    prefix + 'padding',\r\n    context,\r\n  );\r\n\r\n  // The following properties are not currently settable\r\n  const declutterMode = optionalDeclutterMode(\r\n    flatStyle,\r\n    prefix + 'declutter-mode',\r\n  );\r\n\r\n  const text = new Text({declutterMode});\r\n\r\n  return function (context) {\r\n    text.setText(evaluateValue(context));\r\n\r\n    if (evaluateFill) {\r\n      text.setFill(evaluateFill(context));\r\n    }\r\n\r\n    if (evaluateBackgroundFill) {\r\n      text.setBackgroundFill(evaluateBackgroundFill(context));\r\n    }\r\n\r\n    if (evaluateStroke) {\r\n      text.setStroke(evaluateStroke(context));\r\n    }\r\n\r\n    if (evaluateBackgroundStroke) {\r\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\r\n    }\r\n\r\n    if (evaluateFont) {\r\n      text.setFont(evaluateFont(context));\r\n    }\r\n\r\n    if (evaluateMaxAngle) {\r\n      text.setMaxAngle(evaluateMaxAngle(context));\r\n    }\r\n\r\n    if (evaluateOffsetX) {\r\n      text.setOffsetX(evaluateOffsetX(context));\r\n    }\r\n\r\n    if (evaluateOffsetY) {\r\n      text.setOffsetY(evaluateOffsetY(context));\r\n    }\r\n\r\n    if (evaluateOverflow) {\r\n      text.setOverflow(evaluateOverflow(context));\r\n    }\r\n\r\n    if (evaluatePlacement) {\r\n      const placement = evaluatePlacement(context);\r\n      if (placement !== 'point' && placement !== 'line') {\r\n        throw new Error('Expected point or line for text-placement');\r\n      }\r\n      text.setPlacement(placement);\r\n    }\r\n\r\n    if (evaluateRepeat) {\r\n      text.setRepeat(evaluateRepeat(context));\r\n    }\r\n\r\n    if (evaluateScale) {\r\n      text.setScale(evaluateScale(context));\r\n    }\r\n\r\n    if (evaluateRotateWithView) {\r\n      text.setRotateWithView(evaluateRotateWithView(context));\r\n    }\r\n\r\n    if (evaluateRotation) {\r\n      text.setRotation(evaluateRotation(context));\r\n    }\r\n\r\n    if (evaluateAlign) {\r\n      const textAlign = evaluateAlign(context);\r\n      if (\r\n        textAlign !== 'left' &&\r\n        textAlign !== 'center' &&\r\n        textAlign !== 'right' &&\r\n        textAlign !== 'end' &&\r\n        textAlign !== 'start'\r\n      ) {\r\n        throw new Error(\r\n          'Expected left, right, center, start, or end for text-align',\r\n        );\r\n      }\r\n      text.setTextAlign(textAlign);\r\n    }\r\n\r\n    if (evaluateJustify) {\r\n      const justify = evaluateJustify(context);\r\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\r\n        throw new Error('Expected left, right, or center for text-justify');\r\n      }\r\n      text.setJustify(justify);\r\n    }\r\n\r\n    if (evaluateBaseline) {\r\n      const textBaseline = evaluateBaseline(context);\r\n      if (\r\n        textBaseline !== 'bottom' &&\r\n        textBaseline !== 'top' &&\r\n        textBaseline !== 'middle' &&\r\n        textBaseline !== 'alphabetic' &&\r\n        textBaseline !== 'hanging'\r\n      ) {\r\n        throw new Error(\r\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\r\n        );\r\n      }\r\n      text.setTextBaseline(textBaseline);\r\n    }\r\n\r\n    if (evaluatePadding) {\r\n      text.setPadding(evaluatePadding(context));\r\n    }\r\n\r\n    return text;\r\n  };\r\n}\r\n\r\n/**\r\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\r\n */\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {ParsingContext} context The parsing context.\r\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\r\n */\r\nfunction buildImage(flatStyle, context) {\r\n  if ('icon-src' in flatStyle) {\r\n    return buildIcon(flatStyle, context);\r\n  }\r\n\r\n  if ('shape-points' in flatStyle) {\r\n    return buildShape(flatStyle, context);\r\n  }\r\n\r\n  if ('circle-radius' in flatStyle) {\r\n    return buildCircle(flatStyle, context);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {ParsingContext} context The parsing context.\r\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\r\n */\r\nfunction buildIcon(flatStyle, context) {\r\n  const prefix = 'icon-';\r\n\r\n  // required property\r\n  const srcName = prefix + 'src';\r\n  const src = requireString(flatStyle[srcName], srcName);\r\n\r\n  // settable properties\r\n  const evaluateAnchor = coordinateEvaluator(\r\n    flatStyle,\r\n    prefix + 'anchor',\r\n    context,\r\n  );\r\n\r\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\r\n\r\n  const evaluateOpacity = numberEvaluator(\r\n    flatStyle,\r\n    prefix + 'opacity',\r\n    context,\r\n  );\r\n\r\n  const evaluateDisplacement = coordinateEvaluator(\r\n    flatStyle,\r\n    prefix + 'displacement',\r\n    context,\r\n  );\r\n\r\n  const evaluateRotation = numberEvaluator(\r\n    flatStyle,\r\n    prefix + 'rotation',\r\n    context,\r\n  );\r\n\r\n  const evaluateRotateWithView = booleanEvaluator(\r\n    flatStyle,\r\n    prefix + 'rotate-with-view',\r\n    context,\r\n  );\r\n\r\n  // the remaining symbolizer properties are not currently settable\r\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\r\n  const anchorXUnits = optionalIconAnchorUnits(\r\n    flatStyle,\r\n    prefix + 'anchor-x-units',\r\n  );\r\n  const anchorYUnits = optionalIconAnchorUnits(\r\n    flatStyle,\r\n    prefix + 'anchor-y-units',\r\n  );\r\n  const color = optionalColorLike(flatStyle, prefix + 'color');\r\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\r\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\r\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\r\n  const width = optionalNumber(flatStyle, prefix + 'width');\r\n  const height = optionalNumber(flatStyle, prefix + 'height');\r\n  const size = optionalSize(flatStyle, prefix + 'size');\r\n  const declutterMode = optionalDeclutterMode(\r\n    flatStyle,\r\n    prefix + 'declutter-mode',\r\n  );\r\n\r\n  const icon = new Icon({\r\n    src,\r\n    anchorOrigin,\r\n    anchorXUnits,\r\n    anchorYUnits,\r\n    color,\r\n    crossOrigin,\r\n    offset,\r\n    offsetOrigin,\r\n    height,\r\n    width,\r\n    size,\r\n    declutterMode,\r\n  });\r\n\r\n  return function (context) {\r\n    if (evaluateOpacity) {\r\n      icon.setOpacity(evaluateOpacity(context));\r\n    }\r\n\r\n    if (evaluateDisplacement) {\r\n      icon.setDisplacement(evaluateDisplacement(context));\r\n    }\r\n\r\n    if (evaluateRotation) {\r\n      icon.setRotation(evaluateRotation(context));\r\n    }\r\n\r\n    if (evaluateRotateWithView) {\r\n      icon.setRotateWithView(evaluateRotateWithView(context));\r\n    }\r\n\r\n    if (evaluateScale) {\r\n      icon.setScale(evaluateScale(context));\r\n    }\r\n\r\n    if (evaluateAnchor) {\r\n      icon.setAnchor(evaluateAnchor(context));\r\n    }\r\n    return icon;\r\n  };\r\n}\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {ParsingContext} context The parsing context.\r\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\r\n */\r\nfunction buildShape(flatStyle, context) {\r\n  const prefix = 'shape-';\r\n\r\n  // required property\r\n  const pointsName = prefix + 'points';\r\n  const radiusName = prefix + 'radius';\r\n  const points = requireNumber(flatStyle[pointsName], pointsName);\r\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\r\n\r\n  // settable properties\r\n  const evaluateFill = buildFill(flatStyle, prefix, context);\r\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\r\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\r\n  const evaluateDisplacement = coordinateEvaluator(\r\n    flatStyle,\r\n    prefix + 'displacement',\r\n    context,\r\n  );\r\n  const evaluateRotation = numberEvaluator(\r\n    flatStyle,\r\n    prefix + 'rotation',\r\n    context,\r\n  );\r\n  const evaluateRotateWithView = booleanEvaluator(\r\n    flatStyle,\r\n    prefix + 'rotate-with-view',\r\n    context,\r\n  );\r\n\r\n  // the remaining properties are not currently settable\r\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\r\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\r\n  const declutterMode = optionalDeclutterMode(\r\n    flatStyle,\r\n    prefix + 'declutter-mode',\r\n  );\r\n\r\n  const shape = new RegularShape({\r\n    points,\r\n    radius,\r\n    radius2,\r\n    angle,\r\n    declutterMode,\r\n  });\r\n\r\n  return function (context) {\r\n    if (evaluateFill) {\r\n      shape.setFill(evaluateFill(context));\r\n    }\r\n    if (evaluateStroke) {\r\n      shape.setStroke(evaluateStroke(context));\r\n    }\r\n    if (evaluateDisplacement) {\r\n      shape.setDisplacement(evaluateDisplacement(context));\r\n    }\r\n    if (evaluateRotation) {\r\n      shape.setRotation(evaluateRotation(context));\r\n    }\r\n    if (evaluateRotateWithView) {\r\n      shape.setRotateWithView(evaluateRotateWithView(context));\r\n    }\r\n    if (evaluateScale) {\r\n      shape.setScale(evaluateScale(context));\r\n    }\r\n\r\n    return shape;\r\n  };\r\n}\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {ParsingContext} context The parsing context.\r\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\r\n */\r\nfunction buildCircle(flatStyle, context) {\r\n  const prefix = 'circle-';\r\n\r\n  // settable properties\r\n  const evaluateFill = buildFill(flatStyle, prefix, context);\r\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\r\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\r\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\r\n  const evaluateDisplacement = coordinateEvaluator(\r\n    flatStyle,\r\n    prefix + 'displacement',\r\n    context,\r\n  );\r\n  const evaluateRotation = numberEvaluator(\r\n    flatStyle,\r\n    prefix + 'rotation',\r\n    context,\r\n  );\r\n  const evaluateRotateWithView = booleanEvaluator(\r\n    flatStyle,\r\n    prefix + 'rotate-with-view',\r\n    context,\r\n  );\r\n\r\n  // the remaining properties are not currently settable\r\n  const declutterMode = optionalDeclutterMode(\r\n    flatStyle,\r\n    prefix + 'declutter-mode',\r\n  );\r\n\r\n  const circle = new Circle({\r\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\r\n    declutterMode,\r\n  });\r\n\r\n  return function (context) {\r\n    if (evaluateRadius) {\r\n      circle.setRadius(evaluateRadius(context));\r\n    }\r\n    if (evaluateFill) {\r\n      circle.setFill(evaluateFill(context));\r\n    }\r\n    if (evaluateStroke) {\r\n      circle.setStroke(evaluateStroke(context));\r\n    }\r\n    if (evaluateDisplacement) {\r\n      circle.setDisplacement(evaluateDisplacement(context));\r\n    }\r\n    if (evaluateRotation) {\r\n      circle.setRotation(evaluateRotation(context));\r\n    }\r\n    if (evaluateRotateWithView) {\r\n      circle.setRotateWithView(evaluateRotateWithView(context));\r\n    }\r\n    if (evaluateScale) {\r\n      circle.setScale(evaluateScale(context));\r\n    }\r\n\r\n    return circle;\r\n  };\r\n}\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {string} name The property name.\r\n * @param {ParsingContext} context The parsing context.\r\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\r\n */\r\nfunction numberEvaluator(flatStyle, name, context) {\r\n  if (!(name in flatStyle)) {\r\n    return undefined;\r\n  }\r\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\r\n  return function (context) {\r\n    return requireNumber(evaluator(context), name);\r\n  };\r\n}\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {string} name The property name.\r\n * @param {ParsingContext} context The parsing context.\r\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\r\n */\r\nfunction stringEvaluator(flatStyle, name, context) {\r\n  if (!(name in flatStyle)) {\r\n    return null;\r\n  }\r\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\r\n  return function (context) {\r\n    return requireString(evaluator(context), name);\r\n  };\r\n}\r\n\r\nfunction patternEvaluator(flatStyle, prefix, context) {\r\n  const srcEvaluator = stringEvaluator(\r\n    flatStyle,\r\n    prefix + 'pattern-src',\r\n    context,\r\n  );\r\n  const offsetEvaluator = sizeEvaluator(\r\n    flatStyle,\r\n    prefix + 'pattern-offset',\r\n    context,\r\n  );\r\n  const patternSizeEvaluator = sizeEvaluator(\r\n    flatStyle,\r\n    prefix + 'pattern-size',\r\n    context,\r\n  );\r\n  const colorEvaluator = colorLikeEvaluator(\r\n    flatStyle,\r\n    prefix + 'color',\r\n    context,\r\n  );\r\n  return function (context) {\r\n    return {\r\n      src: srcEvaluator(context),\r\n      offset: offsetEvaluator && offsetEvaluator(context),\r\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\r\n      color: colorEvaluator && colorEvaluator(context),\r\n    };\r\n  };\r\n}\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {string} name The property name.\r\n * @param {ParsingContext} context The parsing context.\r\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\r\n */\r\nfunction booleanEvaluator(flatStyle, name, context) {\r\n  if (!(name in flatStyle)) {\r\n    return null;\r\n  }\r\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\r\n  return function (context) {\r\n    const value = evaluator(context);\r\n    if (typeof value !== 'boolean') {\r\n      throw new Error(`Expected a boolean for ${name}`);\r\n    }\r\n    return value;\r\n  };\r\n}\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {string} name The property name.\r\n * @param {ParsingContext} context The parsing context.\r\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\r\n */\r\nfunction colorLikeEvaluator(flatStyle, name, context) {\r\n  if (!(name in flatStyle)) {\r\n    return null;\r\n  }\r\n  const evaluator = buildExpression(\r\n    flatStyle[name],\r\n    ColorType | StringType,\r\n    context,\r\n  );\r\n  return function (context) {\r\n    return requireColorLike(evaluator(context), name);\r\n  };\r\n}\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {string} name The property name.\r\n * @param {ParsingContext} context The parsing context.\r\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\r\n */\r\nfunction numberArrayEvaluator(flatStyle, name, context) {\r\n  if (!(name in flatStyle)) {\r\n    return null;\r\n  }\r\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\r\n  return function (context) {\r\n    return requireNumberArray(evaluator(context), name);\r\n  };\r\n}\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {string} name The property name.\r\n * @param {ParsingContext} context The parsing context.\r\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\r\n */\r\nfunction coordinateEvaluator(flatStyle, name, context) {\r\n  if (!(name in flatStyle)) {\r\n    return null;\r\n  }\r\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\r\n  return function (context) {\r\n    const array = requireNumberArray(evaluator(context), name);\r\n    if (array.length !== 2) {\r\n      throw new Error(`Expected two numbers for ${name}`);\r\n    }\r\n    return array;\r\n  };\r\n}\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {string} name The property name.\r\n * @param {ParsingContext} context The parsing context.\r\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\r\n */\r\nfunction sizeEvaluator(flatStyle, name, context) {\r\n  if (!(name in flatStyle)) {\r\n    return null;\r\n  }\r\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\r\n  return function (context) {\r\n    return requireSize(evaluator(context), name);\r\n  };\r\n}\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {string} name The property name.\r\n * @param {ParsingContext} context The parsing context.\r\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\r\n */\r\nfunction sizeLikeEvaluator(flatStyle, name, context) {\r\n  if (!(name in flatStyle)) {\r\n    return null;\r\n  }\r\n  const evaluator = buildExpression(\r\n    flatStyle[name],\r\n    NumberArrayType | NumberType,\r\n    context,\r\n  );\r\n  return function (context) {\r\n    return requireSizeLike(evaluator(context), name);\r\n  };\r\n}\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {string} property The symbolizer property.\r\n * @return {number|undefined} A number or undefined.\r\n */\r\nfunction optionalNumber(flatStyle, property) {\r\n  const value = flatStyle[property];\r\n  if (value === undefined) {\r\n    return undefined;\r\n  }\r\n  if (typeof value !== 'number') {\r\n    throw new Error(`Expected a number for ${property}`);\r\n  }\r\n  return value;\r\n}\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {string} property The symbolizer property.\r\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\r\n */\r\nfunction optionalSize(flatStyle, property) {\r\n  const encoded = flatStyle[property];\r\n  if (encoded === undefined) {\r\n    return undefined;\r\n  }\r\n  if (typeof encoded === 'number') {\r\n    return toSize(encoded);\r\n  }\r\n  if (!Array.isArray(encoded)) {\r\n    throw new Error(`Expected a number or size array for ${property}`);\r\n  }\r\n  if (\r\n    encoded.length !== 2 ||\r\n    typeof encoded[0] !== 'number' ||\r\n    typeof encoded[1] !== 'number'\r\n  ) {\r\n    throw new Error(`Expected a number or size array for ${property}`);\r\n  }\r\n  return encoded;\r\n}\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {string} property The symbolizer property.\r\n * @return {string|undefined} A string or undefined.\r\n */\r\nfunction optionalString(flatStyle, property) {\r\n  const encoded = flatStyle[property];\r\n  if (encoded === undefined) {\r\n    return undefined;\r\n  }\r\n  if (typeof encoded !== 'string') {\r\n    throw new Error(`Expected a string for ${property}`);\r\n  }\r\n  return encoded;\r\n}\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {string} property The symbolizer property.\r\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\r\n */\r\nfunction optionalIconOrigin(flatStyle, property) {\r\n  const encoded = flatStyle[property];\r\n  if (encoded === undefined) {\r\n    return undefined;\r\n  }\r\n  if (\r\n    encoded !== 'bottom-left' &&\r\n    encoded !== 'bottom-right' &&\r\n    encoded !== 'top-left' &&\r\n    encoded !== 'top-right'\r\n  ) {\r\n    throw new Error(\r\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\r\n    );\r\n  }\r\n  return encoded;\r\n}\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {string} property The symbolizer property.\r\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\r\n */\r\nfunction optionalIconAnchorUnits(flatStyle, property) {\r\n  const encoded = flatStyle[property];\r\n  if (encoded === undefined) {\r\n    return undefined;\r\n  }\r\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\r\n    throw new Error(`Expected pixels or fraction for ${property}`);\r\n  }\r\n  return encoded;\r\n}\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {string} property The symbolizer property.\r\n * @return {Array<number>|undefined} An array of numbers or undefined.\r\n */\r\nfunction optionalNumberArray(flatStyle, property) {\r\n  const encoded = flatStyle[property];\r\n  if (encoded === undefined) {\r\n    return undefined;\r\n  }\r\n  return requireNumberArray(encoded, property);\r\n}\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {string} property The symbolizer property.\r\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\r\n */\r\nfunction optionalDeclutterMode(flatStyle, property) {\r\n  const encoded = flatStyle[property];\r\n  if (encoded === undefined) {\r\n    return undefined;\r\n  }\r\n  if (typeof encoded !== 'string') {\r\n    throw new Error(`Expected a string for ${property}`);\r\n  }\r\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\r\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\r\n  }\r\n  return encoded;\r\n}\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {string} property The symbolizer property.\r\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\r\n */\r\nfunction optionalColorLike(flatStyle, property) {\r\n  const encoded = flatStyle[property];\r\n  if (encoded === undefined) {\r\n    return undefined;\r\n  }\r\n  return requireColorLike(encoded, property);\r\n}\r\n\r\n/**\r\n * @param {any} value The value.\r\n * @param {string} property The property.\r\n * @return {Array<number>} An array of numbers.\r\n */\r\nfunction requireNumberArray(value, property) {\r\n  if (!Array.isArray(value)) {\r\n    throw new Error(`Expected an array for ${property}`);\r\n  }\r\n  const length = value.length;\r\n  for (let i = 0; i < length; ++i) {\r\n    if (typeof value[i] !== 'number') {\r\n      throw new Error(`Expected an array of numbers for ${property}`);\r\n    }\r\n  }\r\n  return value;\r\n}\r\n\r\n/**\r\n * @param {any} value The value.\r\n * @param {string} property The property.\r\n * @return {string} A string.\r\n */\r\nfunction requireString(value, property) {\r\n  if (typeof value !== 'string') {\r\n    throw new Error(`Expected a string for ${property}`);\r\n  }\r\n  return value;\r\n}\r\n\r\n/**\r\n * @param {any} value The value.\r\n * @param {string} property The property.\r\n * @return {number} A number.\r\n */\r\nfunction requireNumber(value, property) {\r\n  if (typeof value !== 'number') {\r\n    throw new Error(`Expected a number for ${property}`);\r\n  }\r\n  return value;\r\n}\r\n\r\n/**\r\n * @param {any} value The value.\r\n * @param {string} property The property.\r\n * @return {Array<number>|string} A color.\r\n */\r\nfunction requireColorLike(value, property) {\r\n  if (typeof value === 'string') {\r\n    return value;\r\n  }\r\n  const array = requireNumberArray(value, property);\r\n  const length = array.length;\r\n  if (length < 3 || length > 4) {\r\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\r\n  }\r\n  return array;\r\n}\r\n\r\n/**\r\n * @param {any} value The value.\r\n * @param {string} property The property.\r\n * @return {Array<number>} A number or an array of two numbers.\r\n */\r\nfunction requireSize(value, property) {\r\n  const size = requireNumberArray(value, property);\r\n  if (size.length !== 2) {\r\n    throw new Error(`Expected an array of two numbers for ${property}`);\r\n  }\r\n  return size;\r\n}\r\n\r\n/**\r\n * @param {any} value The value.\r\n * @param {string} property The property.\r\n * @return {number|Array<number>} A number or an array of two numbers.\r\n */\r\nfunction requireSizeLike(value, property) {\r\n  if (typeof value === 'number') {\r\n    return value;\r\n  }\r\n  return requireSize(value, property);\r\n}\r\n", "/**\r\n * @module ol/layer/BaseVector\r\n */\r\nimport Layer from './Layer.js';\r\nimport RBush from 'rbush';\r\nimport Style, {\r\n  createDefaultStyle,\r\n  toFunction as toStyleFunction,\r\n} from '../style/Style.js';\r\nimport {\r\n  flatStylesToStyleFunction,\r\n  rulesToStyleFunction,\r\n} from '../render/canvas/style.js';\r\n\r\n/**\r\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\r\n * visible.\r\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\r\n * be visible.\r\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\r\n * features before rendering. By default features are drawn in the order that they are created. Use\r\n * `null` to avoid the sort, but get an undefined draw order.\r\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\r\n * renderer when getting features from the vector source for the rendering or hit-detection.\r\n * Recommended value: the size of the largest symbol, line width or label.\r\n * @property {VectorSourceType} [source] Source.\r\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\r\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\r\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\r\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\r\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\r\n * layers or groups of layers separately, use different truthy values for `declutter`.\r\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\r\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\r\n * which will be used if this is not set.\r\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\r\n * will be rendered.\r\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\r\n * be recreated during animations. This means that no vectors will be shown clipped, but the\r\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\r\n * batches will be recreated when no animation is active.\r\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\r\n * be recreated during interactions. See also `updateWhileAnimating`.\r\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n * @private\r\n */\r\nconst Property = {\r\n  RENDER_ORDER: 'renderOrder',\r\n};\r\n\r\n/**\r\n * @classdesc\r\n * Vector data that is rendered client-side.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\r\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\r\n * @extends {Layer<VectorSourceType, RendererType>}\r\n * @api\r\n */\r\nclass BaseVectorLayer extends Layer {\r\n  /**\r\n   * @param {Options<VectorSourceType>} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    const baseOptions = Object.assign({}, options);\r\n\r\n    delete baseOptions.style;\r\n    delete baseOptions.renderBuffer;\r\n    delete baseOptions.updateWhileAnimating;\r\n    delete baseOptions.updateWhileInteracting;\r\n    super(baseOptions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.renderBuffer_ =\r\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\r\n\r\n    /**\r\n     * User provided style.\r\n     * @type {import(\"../style/Style.js\").StyleLike}\r\n     * @private\r\n     */\r\n    this.style_ = null;\r\n\r\n    /**\r\n     * Style function for use within the library.\r\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\r\n     * @private\r\n     */\r\n    this.styleFunction_ = undefined;\r\n\r\n    this.setStyle(options.style);\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.updateWhileAnimating_ =\r\n      options.updateWhileAnimating !== undefined\r\n        ? options.updateWhileAnimating\r\n        : false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.updateWhileInteracting_ =\r\n      options.updateWhileInteracting !== undefined\r\n        ? options.updateWhileInteracting\r\n        : false;\r\n  }\r\n\r\n  /**\r\n   * @return {string} Declutter group.\r\n   */\r\n  getDeclutter() {\r\n    return this.declutter_;\r\n  }\r\n\r\n  /**\r\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\r\n   * that resolves with an array of features. The array will either contain the topmost feature\r\n   * when a hit was detected, or it will be empty.\r\n   *\r\n   * The hit detection algorithm used for this method is optimized for performance, but is less\r\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\r\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\r\n   * image.\r\n   *\r\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\r\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\r\n   * @api\r\n   */\r\n  getFeatures(pixel) {\r\n    return super.getFeatures(pixel);\r\n  }\r\n\r\n  /**\r\n   * @return {number|undefined} Render buffer.\r\n   */\r\n  getRenderBuffer() {\r\n    return this.renderBuffer_;\r\n  }\r\n\r\n  /**\r\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\r\n   *     order.\r\n   */\r\n  getRenderOrder() {\r\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\r\n      this.get(Property.RENDER_ORDER)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the style for features.  This returns whatever was passed to the `style`\r\n   * option at construction or to the `setStyle` method.\r\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\r\n   * @api\r\n   */\r\n  getStyle() {\r\n    return this.style_;\r\n  }\r\n\r\n  /**\r\n   * Get the style function.\r\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\r\n   * @api\r\n   */\r\n  getStyleFunction() {\r\n    return this.styleFunction_;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Whether the rendered layer should be updated while\r\n   *     animating.\r\n   */\r\n  getUpdateWhileAnimating() {\r\n    return this.updateWhileAnimating_;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Whether the rendered layer should be updated while\r\n   *     interacting.\r\n   */\r\n  getUpdateWhileInteracting() {\r\n    return this.updateWhileInteracting_;\r\n  }\r\n\r\n  /**\r\n   * Render declutter items for this layer\r\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\r\n   */\r\n  renderDeclutter(frameState, layerState) {\r\n    const declutterGroup = this.getDeclutter();\r\n    if (declutterGroup in frameState.declutter === false) {\r\n      frameState.declutter[declutterGroup] = new RBush(9);\r\n    }\r\n    this.getRenderer().renderDeclutter(frameState, layerState);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\r\n   *     Render order.\r\n   */\r\n  setRenderOrder(renderOrder) {\r\n    this.set(Property.RENDER_ORDER, renderOrder);\r\n  }\r\n\r\n  /**\r\n   * Set the style for features.  This can be a single style object, an array\r\n   * of styles, or a function that takes a feature and resolution and returns\r\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\r\n   * so only features that have their own styles will be rendered in the layer. Call\r\n   * `setStyle()` without arguments to reset to the default style. See\r\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\r\n   *\r\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\r\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\r\n   * ```js\r\n   * vectorLayer.setStyle({\r\n   *   \"fill-color\": \"yellow\",\r\n   *   \"stroke-color\": \"black\",\r\n   *   \"stroke-width\": 4\r\n   * })\r\n   * ```\r\n   *\r\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\r\n   * @api\r\n   */\r\n  setStyle(style) {\r\n    this.style_ = toStyleLike(style);\r\n    this.styleFunction_ =\r\n      style === null ? undefined : toStyleFunction(this.style_);\r\n    this.changed();\r\n  }\r\n}\r\n\r\n/**\r\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\r\n * styles, and arrays of rules are converted into style functions.\r\n *\r\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\r\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\r\n */\r\nfunction toStyleLike(style) {\r\n  if (style === undefined) {\r\n    return createDefaultStyle;\r\n  }\r\n  if (!style) {\r\n    return null;\r\n  }\r\n  if (typeof style === 'function') {\r\n    return style;\r\n  }\r\n  if (style instanceof Style) {\r\n    return style;\r\n  }\r\n  if (!Array.isArray(style)) {\r\n    return flatStylesToStyleFunction([style]);\r\n  }\r\n  if (style.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  const length = style.length;\r\n  const first = style[0];\r\n\r\n  if (first instanceof Style) {\r\n    /**\r\n     * @type {Array<Style>}\r\n     */\r\n    const styles = new Array(length);\r\n    for (let i = 0; i < length; ++i) {\r\n      const candidate = style[i];\r\n      if (!(candidate instanceof Style)) {\r\n        throw new Error('Expected a list of style instances');\r\n      }\r\n      styles[i] = candidate;\r\n    }\r\n    return styles;\r\n  }\r\n\r\n  if ('style' in first) {\r\n    /**\r\n     * @type Array<import(\"../style/flat.js\").Rule>\r\n     */\r\n    const rules = new Array(length);\r\n    for (let i = 0; i < length; ++i) {\r\n      const candidate = style[i];\r\n      if (!('style' in candidate)) {\r\n        throw new Error('Expected a list of rules with a style property');\r\n      }\r\n      rules[i] = candidate;\r\n    }\r\n    return rulesToStyleFunction(rules);\r\n  }\r\n\r\n  const flatStyles =\r\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\r\n  return flatStylesToStyleFunction(flatStyles);\r\n}\r\n\r\nexport default BaseVectorLayer;\r\n", "/**\r\n * @module ol/render/canvas/Instruction\r\n */\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nconst Instruction = {\r\n  BEGIN_GEOMETRY: 0,\r\n  BEGIN_PATH: 1,\r\n  CIRCLE: 2,\r\n  CLOSE_PATH: 3,\r\n  CUSTOM: 4,\r\n  DRAW_CHARS: 5,\r\n  DRAW_IMAGE: 6,\r\n  END_GEOMETRY: 7,\r\n  FILL: 8,\r\n  MOVE_TO_LINE_TO: 9,\r\n  SET_FILL_STYLE: 10,\r\n  SET_STROKE_STYLE: 11,\r\n  STROKE: 12,\r\n};\r\n\r\n/**\r\n * @type {Array<Instruction>}\r\n */\r\nexport const fillInstruction = [Instruction.FILL];\r\n\r\n/**\r\n * @type {Array<Instruction>}\r\n */\r\nexport const strokeInstruction = [Instruction.STROKE];\r\n\r\n/**\r\n * @type {Array<Instruction>}\r\n */\r\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\r\n\r\n/**\r\n * @type {Array<Instruction>}\r\n */\r\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\r\n\r\nexport default Instruction;\r\n", "/**\r\n * @module ol/render/VectorContext\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Context for drawing geometries.  A vector context is available on render\r\n * events and does not need to be constructed directly.\r\n * @api\r\n */\r\nclass VectorContext {\r\n  /**\r\n   * Render a geometry with a custom renderer.\r\n   *\r\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {Function} renderer Renderer.\r\n   * @param {Function} hitDetectionRenderer Renderer.\r\n   * @param {number} [index] Render order index.\r\n   */\r\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\r\n\r\n  /**\r\n   * Render a geometry.\r\n   *\r\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\r\n   */\r\n  drawGeometry(geometry) {}\r\n\r\n  /**\r\n   * Set the rendering style.\r\n   *\r\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\r\n   */\r\n  setStyle(style) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {number} [index] Render order index.\r\n   */\r\n  drawCircle(circleGeometry, feature, index) {}\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {import(\"../style/Style.js\").default} style Style.\r\n   * @param {number} [index] Render order index.\r\n   */\r\n  drawFeature(feature, style, index) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {number} [index] Render order index.\r\n   */\r\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {number} [index] Render order index.\r\n   */\r\n  drawLineString(lineStringGeometry, feature, index) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {number} [index] Render order index.\r\n   */\r\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {number} [index] Render order index.\r\n   */\r\n  drawMultiPoint(multiPointGeometry, feature, index) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {number} [index] Render order index.\r\n   */\r\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {number} [index] Render order index.\r\n   */\r\n  drawPoint(pointGeometry, feature, index) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {number} [index] Render order index.\r\n   */\r\n  drawPolygon(polygonGeometry, feature, index) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {number} [index] Render order index.\r\n   */\r\n  drawText(geometry, feature, index) {}\r\n\r\n  /**\r\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\r\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\r\n   */\r\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\r\n\r\n  /**\r\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\r\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\r\n   */\r\n  setImageStyle(imageStyle, declutterImageWithText) {}\r\n\r\n  /**\r\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\r\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\r\n   */\r\n  setTextStyle(textStyle, declutterImageWithText) {}\r\n}\r\n\r\nexport default VectorContext;\r\n", "/**\r\n * @module ol/render/canvas/Builder\r\n */\r\nimport CanvasInstruction from './Instruction.js';\r\nimport Relationship from '../../extent/Relationship.js';\r\nimport VectorContext from '../VectorContext.js';\r\nimport {asColorLike} from '../../colorlike.js';\r\nimport {\r\n  buffer,\r\n  clone,\r\n  containsCoordinate,\r\n  coordinateRelationship,\r\n} from '../../extent.js';\r\nimport {\r\n  defaultFillStyle,\r\n  defaultLineCap,\r\n  defaultLineDash,\r\n  defaultLineDashOffset,\r\n  defaultLineJoin,\r\n  defaultLineWidth,\r\n  defaultMiterLimit,\r\n  defaultStrokeStyle,\r\n} from '../canvas.js';\r\nimport {equals, reverseSubArray} from '../../array.js';\r\nimport {\r\n  inflateCoordinates,\r\n  inflateCoordinatesArray,\r\n  inflateMultiCoordinatesArray,\r\n} from '../../geom/flat/inflate.js';\r\n\r\nclass CanvasBuilder extends VectorContext {\r\n  /**\r\n   * @param {number} tolerance Tolerance.\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   */\r\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\r\n    super();\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.tolerance = tolerance;\r\n\r\n    /**\r\n     * @protected\r\n     * @const\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.maxExtent = maxExtent;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio = pixelRatio;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.maxLineWidth = 0;\r\n\r\n    /**\r\n     * @protected\r\n     * @const\r\n     * @type {number}\r\n     */\r\n    this.resolution = resolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<*>}\r\n     */\r\n    this.beginGeometryInstruction1_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<*>}\r\n     */\r\n    this.beginGeometryInstruction2_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.bufferedMaxExtent_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<*>}\r\n     */\r\n    this.instructions = [];\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<number>}\r\n     */\r\n    this.coordinates = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../coordinate.js\").Coordinate}\r\n     */\r\n    this.tmpCoordinate_ = [];\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<*>}\r\n     */\r\n    this.hitDetectionInstructions = [];\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../canvas.js\").FillStrokeState}\r\n     */\r\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {Array<number>} dashArray Dash array.\r\n   * @return {Array<number>} Dash array with pixel ratio applied\r\n   */\r\n  applyPixelRatio(dashArray) {\r\n    const pixelRatio = this.pixelRatio;\r\n    return pixelRatio == 1\r\n      ? dashArray\r\n      : dashArray.map(function (dash) {\r\n          return dash * pixelRatio;\r\n        });\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} stride Stride.\r\n   * @protected\r\n   * @return {number} My end\r\n   */\r\n  appendFlatPointCoordinates(flatCoordinates, stride) {\r\n    const extent = this.getBufferedMaxExtent();\r\n    const tmpCoord = this.tmpCoordinate_;\r\n    const coordinates = this.coordinates;\r\n    let myEnd = coordinates.length;\r\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\r\n      tmpCoord[0] = flatCoordinates[i];\r\n      tmpCoord[1] = flatCoordinates[i + 1];\r\n      if (containsCoordinate(extent, tmpCoord)) {\r\n        coordinates[myEnd++] = tmpCoord[0];\r\n        coordinates[myEnd++] = tmpCoord[1];\r\n      }\r\n    }\r\n    return myEnd;\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @param {boolean} closed Last input coordinate equals first.\r\n   * @param {boolean} skipFirst Skip first coordinate.\r\n   * @protected\r\n   * @return {number} My end.\r\n   */\r\n  appendFlatLineCoordinates(\r\n    flatCoordinates,\r\n    offset,\r\n    end,\r\n    stride,\r\n    closed,\r\n    skipFirst,\r\n  ) {\r\n    const coordinates = this.coordinates;\r\n    let myEnd = coordinates.length;\r\n    const extent = this.getBufferedMaxExtent();\r\n    if (skipFirst) {\r\n      offset += stride;\r\n    }\r\n    let lastXCoord = flatCoordinates[offset];\r\n    let lastYCoord = flatCoordinates[offset + 1];\r\n    const nextCoord = this.tmpCoordinate_;\r\n    let skipped = true;\r\n\r\n    let i, lastRel, nextRel;\r\n    for (i = offset + stride; i < end; i += stride) {\r\n      nextCoord[0] = flatCoordinates[i];\r\n      nextCoord[1] = flatCoordinates[i + 1];\r\n      nextRel = coordinateRelationship(extent, nextCoord);\r\n      if (nextRel !== lastRel) {\r\n        if (skipped) {\r\n          coordinates[myEnd++] = lastXCoord;\r\n          coordinates[myEnd++] = lastYCoord;\r\n          skipped = false;\r\n        }\r\n        coordinates[myEnd++] = nextCoord[0];\r\n        coordinates[myEnd++] = nextCoord[1];\r\n      } else if (nextRel === Relationship.INTERSECTING) {\r\n        coordinates[myEnd++] = nextCoord[0];\r\n        coordinates[myEnd++] = nextCoord[1];\r\n        skipped = false;\r\n      } else {\r\n        skipped = true;\r\n      }\r\n      lastXCoord = nextCoord[0];\r\n      lastYCoord = nextCoord[1];\r\n      lastRel = nextRel;\r\n    }\r\n\r\n    // Last coordinate equals first or only one point to append:\r\n    if ((closed && skipped) || i === offset + stride) {\r\n      coordinates[myEnd++] = lastXCoord;\r\n      coordinates[myEnd++] = lastYCoord;\r\n    }\r\n    return myEnd;\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {Array<number>} ends Ends.\r\n   * @param {number} stride Stride.\r\n   * @param {Array<number>} builderEnds Builder ends.\r\n   * @return {number} Offset.\r\n   */\r\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\r\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n      const end = ends[i];\r\n      const builderEnd = this.appendFlatLineCoordinates(\r\n        flatCoordinates,\r\n        offset,\r\n        end,\r\n        stride,\r\n        false,\r\n        false,\r\n      );\r\n      builderEnds.push(builderEnd);\r\n      offset = end;\r\n    }\r\n    return offset;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {Function} renderer Renderer.\r\n   * @param {Function} hitDetectionRenderer Renderer.\r\n   * @param {number} [index] Render order index.\r\n   */\r\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\r\n    this.beginGeometry(geometry, feature, index);\r\n\r\n    const type = geometry.getType();\r\n    const stride = geometry.getStride();\r\n    const builderBegin = this.coordinates.length;\r\n\r\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\r\n    let offset;\r\n\r\n    switch (type) {\r\n      case 'MultiPolygon':\r\n        flatCoordinates =\r\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\r\n            geometry\r\n          ).getOrientedFlatCoordinates();\r\n        builderEndss = [];\r\n        const endss =\r\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\r\n            geometry\r\n          ).getEndss();\r\n        offset = 0;\r\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n          const myEnds = [];\r\n          offset = this.drawCustomCoordinates_(\r\n            flatCoordinates,\r\n            offset,\r\n            endss[i],\r\n            stride,\r\n            myEnds,\r\n          );\r\n          builderEndss.push(myEnds);\r\n        }\r\n        this.instructions.push([\r\n          CanvasInstruction.CUSTOM,\r\n          builderBegin,\r\n          builderEndss,\r\n          geometry,\r\n          renderer,\r\n          inflateMultiCoordinatesArray,\r\n          index,\r\n        ]);\r\n        this.hitDetectionInstructions.push([\r\n          CanvasInstruction.CUSTOM,\r\n          builderBegin,\r\n          builderEndss,\r\n          geometry,\r\n          hitDetectionRenderer || renderer,\r\n          inflateMultiCoordinatesArray,\r\n          index,\r\n        ]);\r\n        break;\r\n      case 'Polygon':\r\n      case 'MultiLineString':\r\n        builderEnds = [];\r\n        flatCoordinates =\r\n          type == 'Polygon'\r\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\r\n                geometry\r\n              ).getOrientedFlatCoordinates()\r\n            : geometry.getFlatCoordinates();\r\n        offset = this.drawCustomCoordinates_(\r\n          flatCoordinates,\r\n          0,\r\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\r\n            geometry\r\n          ).getEnds(),\r\n          stride,\r\n          builderEnds,\r\n        );\r\n        this.instructions.push([\r\n          CanvasInstruction.CUSTOM,\r\n          builderBegin,\r\n          builderEnds,\r\n          geometry,\r\n          renderer,\r\n          inflateCoordinatesArray,\r\n          index,\r\n        ]);\r\n        this.hitDetectionInstructions.push([\r\n          CanvasInstruction.CUSTOM,\r\n          builderBegin,\r\n          builderEnds,\r\n          geometry,\r\n          hitDetectionRenderer || renderer,\r\n          inflateCoordinatesArray,\r\n          index,\r\n        ]);\r\n        break;\r\n      case 'LineString':\r\n      case 'Circle':\r\n        flatCoordinates = geometry.getFlatCoordinates();\r\n        builderEnd = this.appendFlatLineCoordinates(\r\n          flatCoordinates,\r\n          0,\r\n          flatCoordinates.length,\r\n          stride,\r\n          false,\r\n          false,\r\n        );\r\n        this.instructions.push([\r\n          CanvasInstruction.CUSTOM,\r\n          builderBegin,\r\n          builderEnd,\r\n          geometry,\r\n          renderer,\r\n          inflateCoordinates,\r\n          index,\r\n        ]);\r\n        this.hitDetectionInstructions.push([\r\n          CanvasInstruction.CUSTOM,\r\n          builderBegin,\r\n          builderEnd,\r\n          geometry,\r\n          hitDetectionRenderer || renderer,\r\n          inflateCoordinates,\r\n          index,\r\n        ]);\r\n        break;\r\n      case 'MultiPoint':\r\n        flatCoordinates = geometry.getFlatCoordinates();\r\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\r\n\r\n        if (builderEnd > builderBegin) {\r\n          this.instructions.push([\r\n            CanvasInstruction.CUSTOM,\r\n            builderBegin,\r\n            builderEnd,\r\n            geometry,\r\n            renderer,\r\n            inflateCoordinates,\r\n            index,\r\n          ]);\r\n          this.hitDetectionInstructions.push([\r\n            CanvasInstruction.CUSTOM,\r\n            builderBegin,\r\n            builderEnd,\r\n            geometry,\r\n            hitDetectionRenderer || renderer,\r\n            inflateCoordinates,\r\n            index,\r\n          ]);\r\n        }\r\n        break;\r\n      case 'Point':\r\n        flatCoordinates = geometry.getFlatCoordinates();\r\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\r\n        builderEnd = this.coordinates.length;\r\n\r\n        this.instructions.push([\r\n          CanvasInstruction.CUSTOM,\r\n          builderBegin,\r\n          builderEnd,\r\n          geometry,\r\n          renderer,\r\n          undefined,\r\n          index,\r\n        ]);\r\n        this.hitDetectionInstructions.push([\r\n          CanvasInstruction.CUSTOM,\r\n          builderBegin,\r\n          builderEnd,\r\n          geometry,\r\n          hitDetectionRenderer || renderer,\r\n          undefined,\r\n          index,\r\n        ]);\r\n        break;\r\n      default:\r\n    }\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {number} index Render order index\r\n   */\r\n  beginGeometry(geometry, feature, index) {\r\n    this.beginGeometryInstruction1_ = [\r\n      CanvasInstruction.BEGIN_GEOMETRY,\r\n      feature,\r\n      0,\r\n      geometry,\r\n      index,\r\n    ];\r\n    this.instructions.push(this.beginGeometryInstruction1_);\r\n    this.beginGeometryInstruction2_ = [\r\n      CanvasInstruction.BEGIN_GEOMETRY,\r\n      feature,\r\n      0,\r\n      geometry,\r\n      index,\r\n    ];\r\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\r\n   */\r\n  finish() {\r\n    return {\r\n      instructions: this.instructions,\r\n      hitDetectionInstructions: this.hitDetectionInstructions,\r\n      coordinates: this.coordinates,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Reverse the hit detection instructions.\r\n   */\r\n  reverseHitDetectionInstructions() {\r\n    const hitDetectionInstructions = this.hitDetectionInstructions;\r\n    // step 1 - reverse array\r\n    hitDetectionInstructions.reverse();\r\n    // step 2 - reverse instructions within geometry blocks\r\n    let i;\r\n    const n = hitDetectionInstructions.length;\r\n    let instruction;\r\n    let type;\r\n    let begin = -1;\r\n    for (i = 0; i < n; ++i) {\r\n      instruction = hitDetectionInstructions[i];\r\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\r\n      if (type == CanvasInstruction.END_GEOMETRY) {\r\n        begin = i;\r\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\r\n        instruction[2] = i;\r\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\r\n        begin = -1;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\r\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\r\n   */\r\n  setFillStrokeStyle(fillStyle, strokeStyle) {\r\n    const state = this.state;\r\n    if (fillStyle) {\r\n      const fillStyleColor = fillStyle.getColor();\r\n      state.fillPatternScale =\r\n        fillStyleColor &&\r\n        typeof fillStyleColor === 'object' &&\r\n        'src' in fillStyleColor\r\n          ? this.pixelRatio\r\n          : 1;\r\n      state.fillStyle = asColorLike(\r\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\r\n      );\r\n    } else {\r\n      state.fillStyle = undefined;\r\n    }\r\n    if (strokeStyle) {\r\n      const strokeStyleColor = strokeStyle.getColor();\r\n      state.strokeStyle = asColorLike(\r\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\r\n      );\r\n      const strokeStyleLineCap = strokeStyle.getLineCap();\r\n      state.lineCap =\r\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\r\n      const strokeStyleLineDash = strokeStyle.getLineDash();\r\n      state.lineDash = strokeStyleLineDash\r\n        ? strokeStyleLineDash.slice()\r\n        : defaultLineDash;\r\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\r\n      state.lineDashOffset = strokeStyleLineDashOffset\r\n        ? strokeStyleLineDashOffset\r\n        : defaultLineDashOffset;\r\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\r\n      state.lineJoin =\r\n        strokeStyleLineJoin !== undefined\r\n          ? strokeStyleLineJoin\r\n          : defaultLineJoin;\r\n      const strokeStyleWidth = strokeStyle.getWidth();\r\n      state.lineWidth =\r\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\r\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\r\n      state.miterLimit =\r\n        strokeStyleMiterLimit !== undefined\r\n          ? strokeStyleMiterLimit\r\n          : defaultMiterLimit;\r\n\r\n      if (state.lineWidth > this.maxLineWidth) {\r\n        this.maxLineWidth = state.lineWidth;\r\n        // invalidate the buffered max extent cache\r\n        this.bufferedMaxExtent_ = null;\r\n      }\r\n    } else {\r\n      state.strokeStyle = undefined;\r\n      state.lineCap = undefined;\r\n      state.lineDash = null;\r\n      state.lineDashOffset = undefined;\r\n      state.lineJoin = undefined;\r\n      state.lineWidth = undefined;\r\n      state.miterLimit = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   * @return {Array<*>} Fill instruction.\r\n   */\r\n  createFill(state) {\r\n    const fillStyle = state.fillStyle;\r\n    /** @type {Array<*>} */\r\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\r\n    if (typeof fillStyle !== 'string') {\r\n      // Fill is a pattern or gradient - align and scale it!\r\n      fillInstruction.push(state.fillPatternScale);\r\n    }\r\n    return fillInstruction;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   */\r\n  applyStroke(state) {\r\n    this.instructions.push(this.createStroke(state));\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   * @return {Array<*>} Stroke instruction.\r\n   */\r\n  createStroke(state) {\r\n    return [\r\n      CanvasInstruction.SET_STROKE_STYLE,\r\n      state.strokeStyle,\r\n      state.lineWidth * this.pixelRatio,\r\n      state.lineCap,\r\n      state.lineJoin,\r\n      state.miterLimit,\r\n      this.applyPixelRatio(state.lineDash),\r\n      state.lineDashOffset * this.pixelRatio,\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\r\n   */\r\n  updateFillStyle(state, createFill) {\r\n    const fillStyle = state.fillStyle;\r\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\r\n      if (fillStyle !== undefined) {\r\n        this.instructions.push(createFill.call(this, state));\r\n      }\r\n      state.currentFillStyle = fillStyle;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\r\n   */\r\n  updateStrokeStyle(state, applyStroke) {\r\n    const strokeStyle = state.strokeStyle;\r\n    const lineCap = state.lineCap;\r\n    const lineDash = state.lineDash;\r\n    const lineDashOffset = state.lineDashOffset;\r\n    const lineJoin = state.lineJoin;\r\n    const lineWidth = state.lineWidth;\r\n    const miterLimit = state.miterLimit;\r\n    if (\r\n      state.currentStrokeStyle != strokeStyle ||\r\n      state.currentLineCap != lineCap ||\r\n      (lineDash != state.currentLineDash &&\r\n        !equals(state.currentLineDash, lineDash)) ||\r\n      state.currentLineDashOffset != lineDashOffset ||\r\n      state.currentLineJoin != lineJoin ||\r\n      state.currentLineWidth != lineWidth ||\r\n      state.currentMiterLimit != miterLimit\r\n    ) {\r\n      if (strokeStyle !== undefined) {\r\n        applyStroke.call(this, state);\r\n      }\r\n      state.currentStrokeStyle = strokeStyle;\r\n      state.currentLineCap = lineCap;\r\n      state.currentLineDash = lineDash;\r\n      state.currentLineDashOffset = lineDashOffset;\r\n      state.currentLineJoin = lineJoin;\r\n      state.currentLineWidth = lineWidth;\r\n      state.currentMiterLimit = miterLimit;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  endGeometry(feature) {\r\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\r\n    this.beginGeometryInstruction1_ = null;\r\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\r\n    this.beginGeometryInstruction2_ = null;\r\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\r\n    this.instructions.push(endGeometryInstruction);\r\n    this.hitDetectionInstructions.push(endGeometryInstruction);\r\n  }\r\n\r\n  /**\r\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\r\n   * provided to the constructor.  To account for symbolizers that may intersect\r\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\r\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\r\n   * @protected\r\n   */\r\n  getBufferedMaxExtent() {\r\n    if (!this.bufferedMaxExtent_) {\r\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\r\n      if (this.maxLineWidth > 0) {\r\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\r\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\r\n      }\r\n    }\r\n    return this.bufferedMaxExtent_;\r\n  }\r\n}\r\n\r\nexport default CanvasBuilder;\r\n", "/**\r\n * @module ol/render/canvas/ImageBuilder\r\n */\r\nimport CanvasBuilder from './Builder.js';\r\nimport CanvasInstruction from './Instruction.js';\r\nimport {containsCoordinate} from '../../extent.js';\r\n\r\nclass CanvasImageBuilder extends CanvasBuilder {\r\n  /**\r\n   * @param {number} tolerance Tolerance.\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   */\r\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\r\n    super(tolerance, maxExtent, resolution, pixelRatio);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import('../../DataTile.js').ImageLike}\r\n     */\r\n    this.hitDetectionImage_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import('../../DataTile.js').ImageLike}\r\n     */\r\n    this.image_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.imagePixelRatio_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.anchorX_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.anchorY_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.height_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.opacity_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.originX_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.originY_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.rotateWithView_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.rotation_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../size.js\").Size|undefined}\r\n     */\r\n    this.scale_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.width_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import('../../style/Style.js').DeclutterMode}\r\n     */\r\n    this.declutterMode_ = undefined;\r\n\r\n    /**\r\n     * Data shared with a text builder for combined decluttering.\r\n     * @private\r\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\r\n     */\r\n    this.declutterImageWithText_ = undefined;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {number} [index] Render order index.\r\n   */\r\n  drawPoint(pointGeometry, feature, index) {\r\n    if (\r\n      !this.image_ ||\r\n      (this.maxExtent &&\r\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\r\n    ) {\r\n      return;\r\n    }\r\n    this.beginGeometry(pointGeometry, feature, index);\r\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\r\n    const stride = pointGeometry.getStride();\r\n    const myBegin = this.coordinates.length;\r\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\r\n    this.instructions.push([\r\n      CanvasInstruction.DRAW_IMAGE,\r\n      myBegin,\r\n      myEnd,\r\n      this.image_,\r\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\r\n      this.anchorX_ * this.imagePixelRatio_,\r\n      this.anchorY_ * this.imagePixelRatio_,\r\n      Math.ceil(this.height_ * this.imagePixelRatio_),\r\n      this.opacity_,\r\n      this.originX_ * this.imagePixelRatio_,\r\n      this.originY_ * this.imagePixelRatio_,\r\n      this.rotateWithView_,\r\n      this.rotation_,\r\n      [\r\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\r\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\r\n      ],\r\n      Math.ceil(this.width_ * this.imagePixelRatio_),\r\n      this.declutterMode_,\r\n      this.declutterImageWithText_,\r\n    ]);\r\n    this.hitDetectionInstructions.push([\r\n      CanvasInstruction.DRAW_IMAGE,\r\n      myBegin,\r\n      myEnd,\r\n      this.hitDetectionImage_,\r\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\r\n      this.anchorX_,\r\n      this.anchorY_,\r\n      this.height_,\r\n      1,\r\n      this.originX_,\r\n      this.originY_,\r\n      this.rotateWithView_,\r\n      this.rotation_,\r\n      this.scale_,\r\n      this.width_,\r\n      this.declutterMode_,\r\n      this.declutterImageWithText_,\r\n    ]);\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {number} [index] Render order index.\r\n   */\r\n  drawMultiPoint(multiPointGeometry, feature, index) {\r\n    if (!this.image_) {\r\n      return;\r\n    }\r\n    this.beginGeometry(multiPointGeometry, feature, index);\r\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\r\n    const filteredFlatCoordinates = [];\r\n    for (\r\n      let i = 0, ii = flatCoordinates.length;\r\n      i < ii;\r\n      i += multiPointGeometry.getStride()\r\n    ) {\r\n      if (\r\n        !this.maxExtent ||\r\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\r\n      ) {\r\n        filteredFlatCoordinates.push(\r\n          flatCoordinates[i],\r\n          flatCoordinates[i + 1],\r\n        );\r\n      }\r\n    }\r\n    const myBegin = this.coordinates.length;\r\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\r\n    this.instructions.push([\r\n      CanvasInstruction.DRAW_IMAGE,\r\n      myBegin,\r\n      myEnd,\r\n      this.image_,\r\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\r\n      this.anchorX_ * this.imagePixelRatio_,\r\n      this.anchorY_ * this.imagePixelRatio_,\r\n      Math.ceil(this.height_ * this.imagePixelRatio_),\r\n      this.opacity_,\r\n      this.originX_ * this.imagePixelRatio_,\r\n      this.originY_ * this.imagePixelRatio_,\r\n      this.rotateWithView_,\r\n      this.rotation_,\r\n      [\r\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\r\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\r\n      ],\r\n      Math.ceil(this.width_ * this.imagePixelRatio_),\r\n      this.declutterMode_,\r\n      this.declutterImageWithText_,\r\n    ]);\r\n    this.hitDetectionInstructions.push([\r\n      CanvasInstruction.DRAW_IMAGE,\r\n      myBegin,\r\n      myEnd,\r\n      this.hitDetectionImage_,\r\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\r\n      this.anchorX_,\r\n      this.anchorY_,\r\n      this.height_,\r\n      1,\r\n      this.originX_,\r\n      this.originY_,\r\n      this.rotateWithView_,\r\n      this.rotation_,\r\n      this.scale_,\r\n      this.width_,\r\n      this.declutterMode_,\r\n      this.declutterImageWithText_,\r\n    ]);\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\r\n   */\r\n  finish() {\r\n    this.reverseHitDetectionInstructions();\r\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\r\n    this.anchorX_ = undefined;\r\n    this.anchorY_ = undefined;\r\n    this.hitDetectionImage_ = null;\r\n    this.image_ = null;\r\n    this.imagePixelRatio_ = undefined;\r\n    this.height_ = undefined;\r\n    this.scale_ = undefined;\r\n    this.opacity_ = undefined;\r\n    this.originX_ = undefined;\r\n    this.originY_ = undefined;\r\n    this.rotateWithView_ = undefined;\r\n    this.rotation_ = undefined;\r\n    this.width_ = undefined;\r\n    return super.finish();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\r\n   * @param {Object} [sharedData] Shared data.\r\n   */\r\n  setImageStyle(imageStyle, sharedData) {\r\n    const anchor = imageStyle.getAnchor();\r\n    const size = imageStyle.getSize();\r\n    const origin = imageStyle.getOrigin();\r\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\r\n    this.anchorX_ = anchor[0];\r\n    this.anchorY_ = anchor[1];\r\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\r\n    this.image_ = imageStyle.getImage(this.pixelRatio);\r\n    this.height_ = size[1];\r\n    this.opacity_ = imageStyle.getOpacity();\r\n    this.originX_ = origin[0];\r\n    this.originY_ = origin[1];\r\n    this.rotateWithView_ = imageStyle.getRotateWithView();\r\n    this.rotation_ = imageStyle.getRotation();\r\n    this.scale_ = imageStyle.getScaleArray();\r\n    this.width_ = size[0];\r\n    this.declutterMode_ = imageStyle.getDeclutterMode();\r\n    this.declutterImageWithText_ = sharedData;\r\n  }\r\n}\r\n\r\nexport default CanvasImageBuilder;\r\n", "/**\r\n * @module ol/render/canvas/LineStringBuilder\r\n */\r\nimport CanvasBuilder from './Builder.js';\r\nimport CanvasInstruction, {\r\n  beginPathInstruction,\r\n  strokeInstruction,\r\n} from './Instruction.js';\r\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\r\n\r\nclass CanvasLineStringBuilder extends CanvasBuilder {\r\n  /**\r\n   * @param {number} tolerance Tolerance.\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   */\r\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\r\n    super(tolerance, maxExtent, resolution, pixelRatio);\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   * @return {number} end.\r\n   */\r\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\r\n    const myBegin = this.coordinates.length;\r\n    const myEnd = this.appendFlatLineCoordinates(\r\n      flatCoordinates,\r\n      offset,\r\n      end,\r\n      stride,\r\n      false,\r\n      false,\r\n    );\r\n    const moveToLineToInstruction = [\r\n      CanvasInstruction.MOVE_TO_LINE_TO,\r\n      myBegin,\r\n      myEnd,\r\n    ];\r\n    this.instructions.push(moveToLineToInstruction);\r\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\r\n    return end;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {number} [index] Render order index.\r\n   */\r\n  drawLineString(lineStringGeometry, feature, index) {\r\n    const state = this.state;\r\n    const strokeStyle = state.strokeStyle;\r\n    const lineWidth = state.lineWidth;\r\n    if (strokeStyle === undefined || lineWidth === undefined) {\r\n      return;\r\n    }\r\n    this.updateStrokeStyle(state, this.applyStroke);\r\n    this.beginGeometry(lineStringGeometry, feature, index);\r\n    this.hitDetectionInstructions.push(\r\n      [\r\n        CanvasInstruction.SET_STROKE_STYLE,\r\n        state.strokeStyle,\r\n        state.lineWidth,\r\n        state.lineCap,\r\n        state.lineJoin,\r\n        state.miterLimit,\r\n        defaultLineDash,\r\n        defaultLineDashOffset,\r\n      ],\r\n      beginPathInstruction,\r\n    );\r\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\r\n    const stride = lineStringGeometry.getStride();\r\n    this.drawFlatCoordinates_(\r\n      flatCoordinates,\r\n      0,\r\n      flatCoordinates.length,\r\n      stride,\r\n    );\r\n    this.hitDetectionInstructions.push(strokeInstruction);\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {number} [index] Render order index.\r\n   */\r\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\r\n    const state = this.state;\r\n    const strokeStyle = state.strokeStyle;\r\n    const lineWidth = state.lineWidth;\r\n    if (strokeStyle === undefined || lineWidth === undefined) {\r\n      return;\r\n    }\r\n    this.updateStrokeStyle(state, this.applyStroke);\r\n    this.beginGeometry(multiLineStringGeometry, feature, index);\r\n    this.hitDetectionInstructions.push(\r\n      [\r\n        CanvasInstruction.SET_STROKE_STYLE,\r\n        state.strokeStyle,\r\n        state.lineWidth,\r\n        state.lineCap,\r\n        state.lineJoin,\r\n        state.miterLimit,\r\n        defaultLineDash,\r\n        defaultLineDashOffset,\r\n      ],\r\n      beginPathInstruction,\r\n    );\r\n    const ends = multiLineStringGeometry.getEnds();\r\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\r\n    const stride = multiLineStringGeometry.getStride();\r\n    let offset = 0;\r\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n      offset = this.drawFlatCoordinates_(\r\n        flatCoordinates,\r\n        offset,\r\n        /** @type {number} */ (ends[i]),\r\n        stride,\r\n      );\r\n    }\r\n    this.hitDetectionInstructions.push(strokeInstruction);\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\r\n   */\r\n  finish() {\r\n    const state = this.state;\r\n    if (\r\n      state.lastStroke != undefined &&\r\n      state.lastStroke != this.coordinates.length\r\n    ) {\r\n      this.instructions.push(strokeInstruction);\r\n    }\r\n    this.reverseHitDetectionInstructions();\r\n    this.state = null;\r\n    return super.finish();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   */\r\n  applyStroke(state) {\r\n    if (\r\n      state.lastStroke != undefined &&\r\n      state.lastStroke != this.coordinates.length\r\n    ) {\r\n      this.instructions.push(strokeInstruction);\r\n      state.lastStroke = this.coordinates.length;\r\n    }\r\n    state.lastStroke = 0;\r\n    super.applyStroke(state);\r\n    this.instructions.push(beginPathInstruction);\r\n  }\r\n}\r\n\r\nexport default CanvasLineStringBuilder;\r\n", "/**\r\n * @module ol/render/canvas/PolygonBuilder\r\n */\r\nimport CanvasBuilder from './Builder.js';\r\nimport CanvasInstruction, {\r\n  beginPathInstruction,\r\n  closePathInstruction,\r\n  fillInstruction,\r\n  strokeInstruction,\r\n} from './Instruction.js';\r\nimport {\r\n  defaultFillStyle,\r\n  defaultLineDash,\r\n  defaultLineDashOffset,\r\n} from '../canvas.js';\r\nimport {snap} from '../../geom/flat/simplify.js';\r\n\r\nclass CanvasPolygonBuilder extends CanvasBuilder {\r\n  /**\r\n   * @param {number} tolerance Tolerance.\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   */\r\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\r\n    super(tolerance, maxExtent, resolution, pixelRatio);\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {Array<number>} ends Ends.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   * @return {number} End.\r\n   */\r\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\r\n    const state = this.state;\r\n    const fill = state.fillStyle !== undefined;\r\n    const stroke = state.strokeStyle !== undefined;\r\n    const numEnds = ends.length;\r\n    this.instructions.push(beginPathInstruction);\r\n    this.hitDetectionInstructions.push(beginPathInstruction);\r\n    for (let i = 0; i < numEnds; ++i) {\r\n      const end = ends[i];\r\n      const myBegin = this.coordinates.length;\r\n      const myEnd = this.appendFlatLineCoordinates(\r\n        flatCoordinates,\r\n        offset,\r\n        end,\r\n        stride,\r\n        true,\r\n        !stroke,\r\n      );\r\n      const moveToLineToInstruction = [\r\n        CanvasInstruction.MOVE_TO_LINE_TO,\r\n        myBegin,\r\n        myEnd,\r\n      ];\r\n      this.instructions.push(moveToLineToInstruction);\r\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\r\n      if (stroke) {\r\n        // Performance optimization: only call closePath() when we have a stroke.\r\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\r\n        this.instructions.push(closePathInstruction);\r\n        this.hitDetectionInstructions.push(closePathInstruction);\r\n      }\r\n      offset = end;\r\n    }\r\n    if (fill) {\r\n      this.instructions.push(fillInstruction);\r\n      this.hitDetectionInstructions.push(fillInstruction);\r\n    }\r\n    if (stroke) {\r\n      this.instructions.push(strokeInstruction);\r\n      this.hitDetectionInstructions.push(strokeInstruction);\r\n    }\r\n    return offset;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\r\n   * @param {import(\"../../Feature.js\").default} feature Feature.\r\n   * @param {number} [index] Render order index.\r\n   */\r\n  drawCircle(circleGeometry, feature, index) {\r\n    const state = this.state;\r\n    const fillStyle = state.fillStyle;\r\n    const strokeStyle = state.strokeStyle;\r\n    if (fillStyle === undefined && strokeStyle === undefined) {\r\n      return;\r\n    }\r\n    this.setFillStrokeStyles_();\r\n    this.beginGeometry(circleGeometry, feature, index);\r\n    if (state.fillStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_FILL_STYLE,\r\n        defaultFillStyle,\r\n      ]);\r\n    }\r\n    if (state.strokeStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_STROKE_STYLE,\r\n        state.strokeStyle,\r\n        state.lineWidth,\r\n        state.lineCap,\r\n        state.lineJoin,\r\n        state.miterLimit,\r\n        defaultLineDash,\r\n        defaultLineDashOffset,\r\n      ]);\r\n    }\r\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\r\n    const stride = circleGeometry.getStride();\r\n    const myBegin = this.coordinates.length;\r\n    this.appendFlatLineCoordinates(\r\n      flatCoordinates,\r\n      0,\r\n      flatCoordinates.length,\r\n      stride,\r\n      false,\r\n      false,\r\n    );\r\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\r\n    this.instructions.push(beginPathInstruction, circleInstruction);\r\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\r\n    if (state.fillStyle !== undefined) {\r\n      this.instructions.push(fillInstruction);\r\n      this.hitDetectionInstructions.push(fillInstruction);\r\n    }\r\n    if (state.strokeStyle !== undefined) {\r\n      this.instructions.push(strokeInstruction);\r\n      this.hitDetectionInstructions.push(strokeInstruction);\r\n    }\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {number} [index] Render order index.\r\n   */\r\n  drawPolygon(polygonGeometry, feature, index) {\r\n    const state = this.state;\r\n    const fillStyle = state.fillStyle;\r\n    const strokeStyle = state.strokeStyle;\r\n    if (fillStyle === undefined && strokeStyle === undefined) {\r\n      return;\r\n    }\r\n    this.setFillStrokeStyles_();\r\n    this.beginGeometry(polygonGeometry, feature, index);\r\n    if (state.fillStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_FILL_STYLE,\r\n        defaultFillStyle,\r\n      ]);\r\n    }\r\n    if (state.strokeStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_STROKE_STYLE,\r\n        state.strokeStyle,\r\n        state.lineWidth,\r\n        state.lineCap,\r\n        state.lineJoin,\r\n        state.miterLimit,\r\n        defaultLineDash,\r\n        defaultLineDashOffset,\r\n      ]);\r\n    }\r\n    const ends = polygonGeometry.getEnds();\r\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\r\n    const stride = polygonGeometry.getStride();\r\n    this.drawFlatCoordinatess_(\r\n      flatCoordinates,\r\n      0,\r\n      /** @type {Array<number>} */ (ends),\r\n      stride,\r\n    );\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {number} [index] Render order index.\r\n   */\r\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\r\n    const state = this.state;\r\n    const fillStyle = state.fillStyle;\r\n    const strokeStyle = state.strokeStyle;\r\n    if (fillStyle === undefined && strokeStyle === undefined) {\r\n      return;\r\n    }\r\n    this.setFillStrokeStyles_();\r\n    this.beginGeometry(multiPolygonGeometry, feature, index);\r\n    if (state.fillStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_FILL_STYLE,\r\n        defaultFillStyle,\r\n      ]);\r\n    }\r\n    if (state.strokeStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_STROKE_STYLE,\r\n        state.strokeStyle,\r\n        state.lineWidth,\r\n        state.lineCap,\r\n        state.lineJoin,\r\n        state.miterLimit,\r\n        defaultLineDash,\r\n        defaultLineDashOffset,\r\n      ]);\r\n    }\r\n    const endss = multiPolygonGeometry.getEndss();\r\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\r\n    const stride = multiPolygonGeometry.getStride();\r\n    let offset = 0;\r\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n      offset = this.drawFlatCoordinatess_(\r\n        flatCoordinates,\r\n        offset,\r\n        endss[i],\r\n        stride,\r\n      );\r\n    }\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\r\n   */\r\n  finish() {\r\n    this.reverseHitDetectionInstructions();\r\n    this.state = null;\r\n    // We want to preserve topology when drawing polygons.  Polygons are\r\n    // simplified using quantization and point elimination. However, we might\r\n    // have received a mix of quantized and non-quantized geometries, so ensure\r\n    // that all are quantized by quantizing all coordinates in the batch.\r\n    const tolerance = this.tolerance;\r\n    if (tolerance !== 0) {\r\n      const coordinates = this.coordinates;\r\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\r\n        coordinates[i] = snap(coordinates[i], tolerance);\r\n      }\r\n    }\r\n    return super.finish();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  setFillStrokeStyles_() {\r\n    const state = this.state;\r\n    const fillStyle = state.fillStyle;\r\n    if (fillStyle !== undefined) {\r\n      this.updateFillStyle(state, this.createFill);\r\n    }\r\n    if (state.strokeStyle !== undefined) {\r\n      this.updateStrokeStyle(state, this.applyStroke);\r\n    }\r\n  }\r\n}\r\n\r\nexport default CanvasPolygonBuilder;\r\n", "import {lerp} from '../../math.js';\r\n\r\n/**\r\n * Creates chunks of equal length from a linestring\r\n * @param {number} chunkLength Length of each chunk.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Start offset of the `flatCoordinates`.\r\n * @param {number} end End offset of the `flatCoordinates`.\r\n * @param {number} stride Stride.\r\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\r\n */\r\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\r\n  const chunks = [];\r\n  let cursor = offset;\r\n  let chunkM = 0;\r\n  let currentChunk = flatCoordinates.slice(offset, 2);\r\n  while (chunkM < chunkLength && cursor + stride < end) {\r\n    const [x1, y1] = currentChunk.slice(-2);\r\n    const x2 = flatCoordinates[cursor + stride];\r\n    const y2 = flatCoordinates[cursor + stride + 1];\r\n    const segmentLength = Math.sqrt(\r\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\r\n    );\r\n    chunkM += segmentLength;\r\n    if (chunkM >= chunkLength) {\r\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\r\n      const x = lerp(x1, x2, m);\r\n      const y = lerp(y1, y2, m);\r\n      currentChunk.push(x, y);\r\n      chunks.push(currentChunk);\r\n      currentChunk = [x, y];\r\n      if (chunkM == chunkLength) {\r\n        cursor += stride;\r\n      }\r\n      chunkM = 0;\r\n    } else if (chunkM < chunkLength) {\r\n      currentChunk.push(\r\n        flatCoordinates[cursor + stride],\r\n        flatCoordinates[cursor + stride + 1],\r\n      );\r\n      cursor += stride;\r\n    } else {\r\n      const missing = segmentLength - chunkM;\r\n      const x = lerp(x1, x2, missing / segmentLength);\r\n      const y = lerp(y1, y2, missing / segmentLength);\r\n      currentChunk.push(x, y);\r\n      chunks.push(currentChunk);\r\n      currentChunk = [x, y];\r\n      chunkM = 0;\r\n      cursor += stride;\r\n    }\r\n  }\r\n  if (chunkM > 0) {\r\n    chunks.push(currentChunk);\r\n  }\r\n  return chunks;\r\n}\r\n", "/**\r\n * @module ol/geom/flat/straightchunk\r\n */\r\n\r\n/**\r\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {Array<number>} Start and end of the first suitable chunk of the\r\n * given `flatCoordinates`.\r\n */\r\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\r\n  let chunkStart = offset;\r\n  let chunkEnd = offset;\r\n  let chunkM = 0;\r\n  let m = 0;\r\n  let start = offset;\r\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\r\n  for (i = offset; i < end; i += stride) {\r\n    const x2 = flatCoordinates[i];\r\n    const y2 = flatCoordinates[i + 1];\r\n    if (x1 !== undefined) {\r\n      x23 = x2 - x1;\r\n      y23 = y2 - y1;\r\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\r\n      if (x12 !== undefined) {\r\n        m += m12;\r\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\r\n        if (acos > maxAngle) {\r\n          if (m > chunkM) {\r\n            chunkM = m;\r\n            chunkStart = start;\r\n            chunkEnd = i;\r\n          }\r\n          m = 0;\r\n          start = i - stride;\r\n        }\r\n      }\r\n      m12 = m23;\r\n      x12 = x23;\r\n      y12 = y23;\r\n    }\r\n    x1 = x2;\r\n    y1 = y2;\r\n  }\r\n  m += m23;\r\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\r\n}\r\n", "/**\r\n * @module ol/render/canvas/TextBuilder\r\n */\r\nimport CanvasBuilder from './Builder.js';\r\nimport CanvasInstruction from './Instruction.js';\r\nimport {asColorLike} from '../../colorlike.js';\r\nimport {\r\n  defaultFillStyle,\r\n  defaultFont,\r\n  defaultLineCap,\r\n  defaultLineDash,\r\n  defaultLineDashOffset,\r\n  defaultLineJoin,\r\n  defaultLineWidth,\r\n  defaultMiterLimit,\r\n  defaultPadding,\r\n  defaultStrokeStyle,\r\n  defaultTextAlign,\r\n  defaultTextBaseline,\r\n  registerFont,\r\n} from '../canvas.js';\r\nimport {getUid} from '../../util.js';\r\nimport {intersects} from '../../extent.js';\r\nimport {lineChunk} from '../../geom/flat/linechunk.js';\r\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\r\n/**\r\n * @const\r\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\r\n */\r\nexport const TEXT_ALIGN = {\r\n  'left': 0,\r\n  'center': 0.5,\r\n  'right': 1,\r\n  'top': 0,\r\n  'middle': 0.5,\r\n  'hanging': 0.2,\r\n  'alphabetic': 0.8,\r\n  'ideographic': 0.8,\r\n  'bottom': 1,\r\n};\r\n\r\nclass CanvasTextBuilder extends CanvasBuilder {\r\n  /**\r\n   * @param {number} tolerance Tolerance.\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   */\r\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\r\n    super(tolerance, maxExtent, resolution, pixelRatio);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<HTMLCanvasElement>}\r\n     */\r\n    this.labels_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|Array<string>}\r\n     */\r\n    this.text_ = '';\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textOffsetX_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textOffsetY_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.textRotateWithView_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textRotation_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").FillState}\r\n     */\r\n    this.textFillState_ = null;\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\r\n     */\r\n    this.fillStates = {};\r\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").StrokeState}\r\n     */\r\n    this.textStrokeState_ = null;\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\r\n     */\r\n    this.strokeStates = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../canvas.js\").TextState}\r\n     */\r\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\r\n     */\r\n    this.textStates = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.textKey_ = '';\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.fillKey_ = '';\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.strokeKey_ = '';\r\n\r\n    /**\r\n     * @type {import('../../style/Style.js').DeclutterMode}\r\n     */\r\n    this.declutterMode_ = undefined;\r\n\r\n    /**\r\n     * Data shared with an image builder for combined decluttering.\r\n     * @private\r\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\r\n     */\r\n    this.declutterImageWithText_ = undefined;\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\r\n   */\r\n  finish() {\r\n    const instructions = super.finish();\r\n    instructions.textStates = this.textStates;\r\n    instructions.fillStates = this.fillStates;\r\n    instructions.strokeStates = this.strokeStates;\r\n    return instructions;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {number} [index] Render order index.\r\n   */\r\n  drawText(geometry, feature, index) {\r\n    const fillState = this.textFillState_;\r\n    const strokeState = this.textStrokeState_;\r\n    const textState = this.textState_;\r\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\r\n      return;\r\n    }\r\n\r\n    const coordinates = this.coordinates;\r\n    let begin = coordinates.length;\r\n\r\n    const geometryType = geometry.getType();\r\n    let flatCoordinates = null;\r\n    let stride = geometry.getStride();\r\n\r\n    if (\r\n      textState.placement === 'line' &&\r\n      (geometryType == 'LineString' ||\r\n        geometryType == 'MultiLineString' ||\r\n        geometryType == 'Polygon' ||\r\n        geometryType == 'MultiPolygon')\r\n    ) {\r\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\r\n        return;\r\n      }\r\n      let ends;\r\n      flatCoordinates = geometry.getFlatCoordinates();\r\n      if (geometryType == 'LineString') {\r\n        ends = [flatCoordinates.length];\r\n      } else if (geometryType == 'MultiLineString') {\r\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\r\n          geometry\r\n        ).getEnds();\r\n      } else if (geometryType == 'Polygon') {\r\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\r\n          .getEnds()\r\n          .slice(0, 1);\r\n      } else if (geometryType == 'MultiPolygon') {\r\n        const endss =\r\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\r\n            geometry\r\n          ).getEndss();\r\n        ends = [];\r\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n          ends.push(endss[i][0]);\r\n        }\r\n      }\r\n      this.beginGeometry(geometry, feature, index);\r\n      const repeat = textState.repeat;\r\n      const textAlign = repeat ? undefined : textState.textAlign;\r\n      // No `justify` support for line placement.\r\n      let flatOffset = 0;\r\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\r\n        let chunks;\r\n        if (repeat) {\r\n          chunks = lineChunk(\r\n            repeat * this.resolution,\r\n            flatCoordinates,\r\n            flatOffset,\r\n            ends[o],\r\n            stride,\r\n          );\r\n        } else {\r\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\r\n        }\r\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\r\n          const chunk = chunks[c];\r\n          let chunkBegin = 0;\r\n          let chunkEnd = chunk.length;\r\n          if (textAlign == undefined) {\r\n            const range = matchingChunk(\r\n              textState.maxAngle,\r\n              chunk,\r\n              0,\r\n              chunk.length,\r\n              2,\r\n            );\r\n            chunkBegin = range[0];\r\n            chunkEnd = range[1];\r\n          }\r\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\r\n            coordinates.push(chunk[i], chunk[i + 1]);\r\n          }\r\n          const end = coordinates.length;\r\n          flatOffset = ends[o];\r\n          this.drawChars_(begin, end);\r\n          begin = end;\r\n        }\r\n      }\r\n      this.endGeometry(feature);\r\n    } else {\r\n      let geometryWidths = textState.overflow ? null : [];\r\n      switch (geometryType) {\r\n        case 'Point':\r\n        case 'MultiPoint':\r\n          flatCoordinates =\r\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\r\n              geometry\r\n            ).getFlatCoordinates();\r\n          break;\r\n        case 'LineString':\r\n          flatCoordinates =\r\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\r\n              geometry\r\n            ).getFlatMidpoint();\r\n          break;\r\n        case 'Circle':\r\n          flatCoordinates =\r\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\r\n              geometry\r\n            ).getCenter();\r\n          break;\r\n        case 'MultiLineString':\r\n          flatCoordinates =\r\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\r\n              geometry\r\n            ).getFlatMidpoints();\r\n          stride = 2;\r\n          break;\r\n        case 'Polygon':\r\n          flatCoordinates =\r\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\r\n              geometry\r\n            ).getFlatInteriorPoint();\r\n          if (!textState.overflow) {\r\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\r\n          }\r\n          stride = 3;\r\n          break;\r\n        case 'MultiPolygon':\r\n          const interiorPoints =\r\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\r\n              geometry\r\n            ).getFlatInteriorPoints();\r\n          flatCoordinates = [];\r\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\r\n            if (!textState.overflow) {\r\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\r\n            }\r\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\r\n          }\r\n          if (flatCoordinates.length === 0) {\r\n            return;\r\n          }\r\n          stride = 2;\r\n          break;\r\n        default:\r\n      }\r\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\r\n      if (end === begin) {\r\n        return;\r\n      }\r\n      if (\r\n        geometryWidths &&\r\n        (end - begin) / 2 !== flatCoordinates.length / stride\r\n      ) {\r\n        let beg = begin / 2;\r\n        geometryWidths = geometryWidths.filter((w, i) => {\r\n          const keep =\r\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\r\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\r\n          if (!keep) {\r\n            --beg;\r\n          }\r\n          return keep;\r\n        });\r\n      }\r\n\r\n      this.saveTextStates_();\r\n\r\n      if (textState.backgroundFill || textState.backgroundStroke) {\r\n        this.setFillStrokeStyle(\r\n          textState.backgroundFill,\r\n          textState.backgroundStroke,\r\n        );\r\n        if (textState.backgroundFill) {\r\n          this.updateFillStyle(this.state, this.createFill);\r\n        }\r\n        if (textState.backgroundStroke) {\r\n          this.updateStrokeStyle(this.state, this.applyStroke);\r\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\r\n        }\r\n      }\r\n\r\n      this.beginGeometry(geometry, feature, index);\r\n\r\n      // adjust padding for negative scale\r\n      let padding = textState.padding;\r\n      if (\r\n        padding != defaultPadding &&\r\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\r\n      ) {\r\n        let p0 = textState.padding[0];\r\n        let p1 = textState.padding[1];\r\n        let p2 = textState.padding[2];\r\n        let p3 = textState.padding[3];\r\n        if (textState.scale[0] < 0) {\r\n          p1 = -p1;\r\n          p3 = -p3;\r\n        }\r\n        if (textState.scale[1] < 0) {\r\n          p0 = -p0;\r\n          p2 = -p2;\r\n        }\r\n        padding = [p0, p1, p2, p3];\r\n      }\r\n\r\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\r\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\r\n      // render time.\r\n      const pixelRatio = this.pixelRatio;\r\n      this.instructions.push([\r\n        CanvasInstruction.DRAW_IMAGE,\r\n        begin,\r\n        end,\r\n        null,\r\n        NaN,\r\n        NaN,\r\n        NaN,\r\n        1,\r\n        0,\r\n        0,\r\n        this.textRotateWithView_,\r\n        this.textRotation_,\r\n        [1, 1],\r\n        NaN,\r\n        this.declutterMode_,\r\n        this.declutterImageWithText_,\r\n        padding == defaultPadding\r\n          ? defaultPadding\r\n          : padding.map(function (p) {\r\n              return p * pixelRatio;\r\n            }),\r\n        !!textState.backgroundFill,\r\n        !!textState.backgroundStroke,\r\n        this.text_,\r\n        this.textKey_,\r\n        this.strokeKey_,\r\n        this.fillKey_,\r\n        this.textOffsetX_,\r\n        this.textOffsetY_,\r\n        geometryWidths,\r\n      ]);\r\n      const scale = 1 / pixelRatio;\r\n      // Set default fill for hit detection background\r\n      const currentFillStyle = this.state.fillStyle;\r\n      if (textState.backgroundFill) {\r\n        this.state.fillStyle = defaultFillStyle;\r\n        this.hitDetectionInstructions.push(this.createFill(this.state));\r\n      }\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.DRAW_IMAGE,\r\n        begin,\r\n        end,\r\n        null,\r\n        NaN,\r\n        NaN,\r\n        NaN,\r\n        1,\r\n        0,\r\n        0,\r\n        this.textRotateWithView_,\r\n        this.textRotation_,\r\n        [scale, scale],\r\n        NaN,\r\n        this.declutterMode_,\r\n        this.declutterImageWithText_,\r\n        padding,\r\n        !!textState.backgroundFill,\r\n        !!textState.backgroundStroke,\r\n        this.text_,\r\n        this.textKey_,\r\n        this.strokeKey_,\r\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\r\n        this.textOffsetX_,\r\n        this.textOffsetY_,\r\n        geometryWidths,\r\n      ]);\r\n      // Reset previous fill\r\n      if (textState.backgroundFill) {\r\n        this.state.fillStyle = currentFillStyle;\r\n        this.hitDetectionInstructions.push(this.createFill(this.state));\r\n      }\r\n\r\n      this.endGeometry(feature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  saveTextStates_() {\r\n    const strokeState = this.textStrokeState_;\r\n    const textState = this.textState_;\r\n    const fillState = this.textFillState_;\r\n\r\n    const strokeKey = this.strokeKey_;\r\n    if (strokeState) {\r\n      if (!(strokeKey in this.strokeStates)) {\r\n        this.strokeStates[strokeKey] = {\r\n          strokeStyle: strokeState.strokeStyle,\r\n          lineCap: strokeState.lineCap,\r\n          lineDashOffset: strokeState.lineDashOffset,\r\n          lineWidth: strokeState.lineWidth,\r\n          lineJoin: strokeState.lineJoin,\r\n          miterLimit: strokeState.miterLimit,\r\n          lineDash: strokeState.lineDash,\r\n        };\r\n      }\r\n    }\r\n    const textKey = this.textKey_;\r\n    if (!(textKey in this.textStates)) {\r\n      this.textStates[textKey] = {\r\n        font: textState.font,\r\n        textAlign: textState.textAlign || defaultTextAlign,\r\n        justify: textState.justify,\r\n        textBaseline: textState.textBaseline || defaultTextBaseline,\r\n        scale: textState.scale,\r\n      };\r\n    }\r\n    const fillKey = this.fillKey_;\r\n    if (fillState) {\r\n      if (!(fillKey in this.fillStates)) {\r\n        this.fillStates[fillKey] = {\r\n          fillStyle: fillState.fillStyle,\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {number} begin Begin.\r\n   * @param {number} end End.\r\n   */\r\n  drawChars_(begin, end) {\r\n    const strokeState = this.textStrokeState_;\r\n    const textState = this.textState_;\r\n\r\n    const strokeKey = this.strokeKey_;\r\n    const textKey = this.textKey_;\r\n    const fillKey = this.fillKey_;\r\n    this.saveTextStates_();\r\n\r\n    const pixelRatio = this.pixelRatio;\r\n    const baseline = TEXT_ALIGN[textState.textBaseline];\r\n\r\n    const offsetY = this.textOffsetY_ * pixelRatio;\r\n    const text = this.text_;\r\n    const strokeWidth = strokeState\r\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\r\n      : 0;\r\n\r\n    this.instructions.push([\r\n      CanvasInstruction.DRAW_CHARS,\r\n      begin,\r\n      end,\r\n      baseline,\r\n      textState.overflow,\r\n      fillKey,\r\n      textState.maxAngle,\r\n      pixelRatio,\r\n      offsetY,\r\n      strokeKey,\r\n      strokeWidth * pixelRatio,\r\n      text,\r\n      textKey,\r\n      1,\r\n      this.declutterMode_,\r\n    ]);\r\n    this.hitDetectionInstructions.push([\r\n      CanvasInstruction.DRAW_CHARS,\r\n      begin,\r\n      end,\r\n      baseline,\r\n      textState.overflow,\r\n      fillKey ? defaultFillStyle : fillKey,\r\n      textState.maxAngle,\r\n      pixelRatio,\r\n      offsetY,\r\n      strokeKey,\r\n      strokeWidth * pixelRatio,\r\n      text,\r\n      textKey,\r\n      1 / pixelRatio,\r\n      this.declutterMode_,\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\r\n   * @param {Object} [sharedData] Shared data.\r\n   */\r\n  setTextStyle(textStyle, sharedData) {\r\n    let textState, fillState, strokeState;\r\n    if (!textStyle) {\r\n      this.text_ = '';\r\n    } else {\r\n      const textFillStyle = textStyle.getFill();\r\n      if (!textFillStyle) {\r\n        fillState = null;\r\n        this.textFillState_ = fillState;\r\n      } else {\r\n        fillState = this.textFillState_;\r\n        if (!fillState) {\r\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\r\n          this.textFillState_ = fillState;\r\n        }\r\n        fillState.fillStyle = asColorLike(\r\n          textFillStyle.getColor() || defaultFillStyle,\r\n        );\r\n      }\r\n\r\n      const textStrokeStyle = textStyle.getStroke();\r\n      if (!textStrokeStyle) {\r\n        strokeState = null;\r\n        this.textStrokeState_ = strokeState;\r\n      } else {\r\n        strokeState = this.textStrokeState_;\r\n        if (!strokeState) {\r\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\r\n          this.textStrokeState_ = strokeState;\r\n        }\r\n        const lineDash = textStrokeStyle.getLineDash();\r\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\r\n        const lineWidth = textStrokeStyle.getWidth();\r\n        const miterLimit = textStrokeStyle.getMiterLimit();\r\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\r\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\r\n        strokeState.lineDashOffset =\r\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\r\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\r\n        strokeState.lineWidth =\r\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\r\n        strokeState.miterLimit =\r\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\r\n        strokeState.strokeStyle = asColorLike(\r\n          textStrokeStyle.getColor() || defaultStrokeStyle,\r\n        );\r\n      }\r\n\r\n      textState = this.textState_;\r\n      const font = textStyle.getFont() || defaultFont;\r\n      registerFont(font);\r\n      const textScale = textStyle.getScaleArray();\r\n      textState.overflow = textStyle.getOverflow();\r\n      textState.font = font;\r\n      textState.maxAngle = textStyle.getMaxAngle();\r\n      textState.placement = textStyle.getPlacement();\r\n      textState.textAlign = textStyle.getTextAlign();\r\n      textState.repeat = textStyle.getRepeat();\r\n      textState.justify = textStyle.getJustify();\r\n      textState.textBaseline =\r\n        textStyle.getTextBaseline() || defaultTextBaseline;\r\n      textState.backgroundFill = textStyle.getBackgroundFill();\r\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\r\n      textState.padding = textStyle.getPadding() || defaultPadding;\r\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\r\n\r\n      const textOffsetX = textStyle.getOffsetX();\r\n      const textOffsetY = textStyle.getOffsetY();\r\n      const textRotateWithView = textStyle.getRotateWithView();\r\n      const textRotation = textStyle.getRotation();\r\n      this.text_ = textStyle.getText() || '';\r\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\r\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\r\n      this.textRotateWithView_ =\r\n        textRotateWithView === undefined ? false : textRotateWithView;\r\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\r\n\r\n      this.strokeKey_ = strokeState\r\n        ? (typeof strokeState.strokeStyle == 'string'\r\n            ? strokeState.strokeStyle\r\n            : getUid(strokeState.strokeStyle)) +\r\n          strokeState.lineCap +\r\n          strokeState.lineDashOffset +\r\n          '|' +\r\n          strokeState.lineWidth +\r\n          strokeState.lineJoin +\r\n          strokeState.miterLimit +\r\n          '[' +\r\n          strokeState.lineDash.join() +\r\n          ']'\r\n        : '';\r\n      this.textKey_ =\r\n        textState.font +\r\n        textState.scale +\r\n        (textState.textAlign || '?') +\r\n        (textState.repeat || '?') +\r\n        (textState.justify || '?') +\r\n        (textState.textBaseline || '?');\r\n      this.fillKey_ =\r\n        fillState && fillState.fillStyle\r\n          ? typeof fillState.fillStyle == 'string'\r\n            ? fillState.fillStyle\r\n            : '|' + getUid(fillState.fillStyle)\r\n          : '';\r\n    }\r\n    this.declutterMode_ = textStyle.getDeclutterMode();\r\n    this.declutterImageWithText_ = sharedData;\r\n  }\r\n}\r\n\r\nexport default CanvasTextBuilder;\r\n", "/**\r\n * @module ol/render/canvas/BuilderGroup\r\n */\r\n\r\nimport Builder from './Builder.js';\r\nimport ImageBuilder from './ImageBuilder.js';\r\nimport LineStringBuilder from './LineStringBuilder.js';\r\nimport PolygonBuilder from './PolygonBuilder.js';\r\nimport TextBuilder from './TextBuilder.js';\r\n\r\n/**\r\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\r\n */\r\nconst BATCH_CONSTRUCTORS = {\r\n  'Circle': PolygonBuilder,\r\n  'Default': Builder,\r\n  'Image': ImageBuilder,\r\n  'LineString': LineStringBuilder,\r\n  'Polygon': PolygonBuilder,\r\n  'Text': TextBuilder,\r\n};\r\n\r\nclass BuilderGroup {\r\n  /**\r\n   * @param {number} tolerance Tolerance.\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   */\r\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.tolerance_ = tolerance;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.maxExtent_ = maxExtent;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ = pixelRatio;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.resolution_ = resolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\r\n     */\r\n    this.buildersByZIndex_ = {};\r\n  }\r\n\r\n  /**\r\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\r\n   */\r\n  finish() {\r\n    const builderInstructions = {};\r\n    for (const zKey in this.buildersByZIndex_) {\r\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\r\n      const builders = this.buildersByZIndex_[zKey];\r\n      for (const builderKey in builders) {\r\n        const builderInstruction = builders[builderKey].finish();\r\n        builderInstructions[zKey][builderKey] = builderInstruction;\r\n      }\r\n    }\r\n    return builderInstructions;\r\n  }\r\n\r\n  /**\r\n   * @param {number|undefined} zIndex Z index.\r\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\r\n   * @return {import(\"../VectorContext.js\").default} Replay.\r\n   */\r\n  getBuilder(zIndex, builderType) {\r\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\r\n    let replays = this.buildersByZIndex_[zIndexKey];\r\n    if (replays === undefined) {\r\n      replays = {};\r\n      this.buildersByZIndex_[zIndexKey] = replays;\r\n    }\r\n    let replay = replays[builderType];\r\n    if (replay === undefined) {\r\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\r\n      replay = new Constructor(\r\n        this.tolerance_,\r\n        this.maxExtent_,\r\n        this.resolution_,\r\n        this.pixelRatio_,\r\n      );\r\n      replays[builderType] = replay;\r\n    }\r\n    return replay;\r\n  }\r\n}\r\n\r\nexport default BuilderGroup;\r\n", "/**\r\n * @module ol/geom/flat/textpath\r\n */\r\nimport {lerp} from '../../math.js';\r\nimport {rotate} from './transform.js';\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Path to put text on.\r\n * @param {number} offset Start offset of the `flatCoordinates`.\r\n * @param {number} end End offset of the `flatCoordinates`.\r\n * @param {number} stride Stride.\r\n * @param {string} text Text to place on the path.\r\n * @param {number} startM m along the path where the text starts.\r\n * @param {number} maxAngle Max angle between adjacent chars in radians.\r\n * @param {number} scale The product of the text scale and the device pixel ratio.\r\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\r\n * @param {string} font The font.\r\n * @param {Object<string, number>} cache A cache of measured widths.\r\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\r\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\r\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\r\n */\r\nexport function drawTextOnPath(\r\n  flatCoordinates,\r\n  offset,\r\n  end,\r\n  stride,\r\n  text,\r\n  startM,\r\n  maxAngle,\r\n  scale,\r\n  measureAndCacheTextWidth,\r\n  font,\r\n  cache,\r\n  rotation,\r\n) {\r\n  let x2 = flatCoordinates[offset];\r\n  let y2 = flatCoordinates[offset + 1];\r\n  let x1 = 0;\r\n  let y1 = 0;\r\n  let segmentLength = 0;\r\n  let segmentM = 0;\r\n\r\n  function advance() {\r\n    x1 = x2;\r\n    y1 = y2;\r\n    offset += stride;\r\n    x2 = flatCoordinates[offset];\r\n    y2 = flatCoordinates[offset + 1];\r\n    segmentM += segmentLength;\r\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n  }\r\n  do {\r\n    advance();\r\n  } while (offset < end - stride && segmentM + segmentLength < startM);\r\n\r\n  let interpolate =\r\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\r\n  const beginX = lerp(x1, x2, interpolate);\r\n  const beginY = lerp(y1, y2, interpolate);\r\n\r\n  const startOffset = offset - stride;\r\n  const startLength = segmentM;\r\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\r\n  while (offset < end - stride && segmentM + segmentLength < endM) {\r\n    advance();\r\n  }\r\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\r\n  const endX = lerp(x1, x2, interpolate);\r\n  const endY = lerp(y1, y2, interpolate);\r\n\r\n  // Keep text upright\r\n  let reverse;\r\n  if (rotation) {\r\n    const flat = [beginX, beginY, endX, endY];\r\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\r\n    reverse = flat[0] > flat[2];\r\n  } else {\r\n    reverse = beginX > endX;\r\n  }\r\n\r\n  const PI = Math.PI;\r\n  const result = [];\r\n  const singleSegment = startOffset + stride === offset;\r\n\r\n  offset = startOffset;\r\n  segmentLength = 0;\r\n  segmentM = startLength;\r\n  x2 = flatCoordinates[offset];\r\n  y2 = flatCoordinates[offset + 1];\r\n\r\n  let previousAngle;\r\n  // All on the same segment\r\n  if (singleSegment) {\r\n    advance();\r\n\r\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\r\n    if (reverse) {\r\n      previousAngle += previousAngle > 0 ? -PI : PI;\r\n    }\r\n    const x = (endX + beginX) / 2;\r\n    const y = (endY + beginY) / 2;\r\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\r\n    return result;\r\n  }\r\n\r\n  // rendering across line segments\r\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\r\n\r\n  for (let i = 0, ii = text.length; i < ii; ) {\r\n    advance();\r\n    let angle = Math.atan2(y2 - y1, x2 - x1);\r\n    if (reverse) {\r\n      angle += angle > 0 ? -PI : PI;\r\n    }\r\n    if (previousAngle !== undefined) {\r\n      let delta = angle - previousAngle;\r\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\r\n      if (Math.abs(delta) > maxAngle) {\r\n        return null;\r\n      }\r\n    }\r\n    previousAngle = angle;\r\n\r\n    const iStart = i;\r\n    let charLength = 0;\r\n    for (; i < ii; ++i) {\r\n      const index = reverse ? ii - i - 1 : i;\r\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\r\n      if (\r\n        offset + stride < end &&\r\n        segmentM + segmentLength < startM + charLength + len / 2\r\n      ) {\r\n        break;\r\n      }\r\n      charLength += len;\r\n    }\r\n    if (i === iStart) {\r\n      continue;\r\n    }\r\n    const chars = reverse\r\n      ? text.substring(ii - iStart, ii - i)\r\n      : text.substring(iStart, i);\r\n    interpolate =\r\n      segmentLength === 0\r\n        ? 0\r\n        : (startM + charLength / 2 - segmentM) / segmentLength;\r\n    const x = lerp(x1, x2, interpolate);\r\n    const y = lerp(y1, y2, interpolate);\r\n    result.push([x, y, charLength / 2, angle, chars]);\r\n    startM += charLength;\r\n  }\r\n  return result;\r\n}\r\n", "/**\r\n * @module ol/render/canvas/Executor\r\n */\r\nimport CanvasInstruction from './Instruction.js';\r\nimport ZIndexContext from '../canvas/ZIndexContext.js';\r\nimport {TEXT_ALIGN} from './TextBuilder.js';\r\nimport {\r\n  apply as applyTransform,\r\n  compose as composeTransform,\r\n  create as createTransform,\r\n  setFromArray as transformSetFromArray,\r\n} from '../../transform.js';\r\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\r\nimport {\r\n  defaultPadding,\r\n  defaultTextAlign,\r\n  defaultTextBaseline,\r\n  drawImageOrLabel,\r\n  getTextDimensions,\r\n  measureAndCacheTextWidth,\r\n} from '../canvas.js';\r\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\r\nimport {equals} from '../../array.js';\r\nimport {lineStringLength} from '../../geom/flat/length.js';\r\nimport {transform2D} from '../../geom/flat/transform.js';\r\n\r\n/**\r\n * @typedef {Object} BBox\r\n * @property {number} minX Minimal x.\r\n * @property {number} minY Minimal y.\r\n * @property {number} maxX Maximal x.\r\n * @property {number} maxY Maximal y\r\n * @property {*} value Value.\r\n */\r\n\r\n/**\r\n * @typedef {Object} ImageOrLabelDimensions\r\n * @property {number} drawImageX DrawImageX.\r\n * @property {number} drawImageY DrawImageY.\r\n * @property {number} drawImageW DrawImageW.\r\n * @property {number} drawImageH DrawImageH.\r\n * @property {number} originX OriginX.\r\n * @property {number} originY OriginY.\r\n * @property {Array<number>} scale Scale.\r\n * @property {BBox} declutterBox DeclutterBox.\r\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\r\n */\r\n\r\n/**\r\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\r\n */\r\n\r\n/**\r\n * @template T\r\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\r\n */\r\n\r\n/**\r\n * @type {import(\"../../extent.js\").Extent}\r\n */\r\nconst tmpExtent = createEmpty();\r\n\r\n/** @type {import(\"../../coordinate.js\").Coordinate} */\r\nconst p1 = [];\r\n/** @type {import(\"../../coordinate.js\").Coordinate} */\r\nconst p2 = [];\r\n/** @type {import(\"../../coordinate.js\").Coordinate} */\r\nconst p3 = [];\r\n/** @type {import(\"../../coordinate.js\").Coordinate} */\r\nconst p4 = [];\r\n\r\n/**\r\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\r\n * @return {BBox} Declutter bbox.\r\n */\r\nfunction getDeclutterBox(replayImageOrLabelArgs) {\r\n  return replayImageOrLabelArgs[3].declutterBox;\r\n}\r\n\r\nconst rtlRegEx = new RegExp(\r\n  /* eslint-disable prettier/prettier */\r\n  '[' +\r\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\r\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\r\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\r\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\r\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\r\n  ']'\r\n  /* eslint-enable prettier/prettier */\r\n);\r\n\r\n/**\r\n * @param {string} text Text.\r\n * @param {CanvasTextAlign} align Alignment.\r\n * @return {number} Text alignment.\r\n */\r\nfunction horizontalTextAlign(text, align) {\r\n  if (align === 'start') {\r\n    align = rtlRegEx.test(text) ? 'right' : 'left';\r\n  } else if (align === 'end') {\r\n    align = rtlRegEx.test(text) ? 'left' : 'right';\r\n  }\r\n  return TEXT_ALIGN[align];\r\n}\r\n\r\n/**\r\n * @param {Array<string>} acc Accumulator.\r\n * @param {string} line Line of text.\r\n * @param {number} i Index\r\n * @return {Array<string>} Accumulator.\r\n */\r\nfunction createTextChunks(acc, line, i) {\r\n  if (i > 0) {\r\n    acc.push('\\n', '');\r\n  }\r\n  acc.push(line, '');\r\n  return acc;\r\n}\r\n\r\nclass Executor {\r\n  /**\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {boolean} overlaps The replay can have overlapping geometries.\r\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\r\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\r\n   */\r\n  constructor(\r\n    resolution,\r\n    pixelRatio,\r\n    overlaps,\r\n    instructions,\r\n    deferredRendering,\r\n  ) {\r\n    /**\r\n     * @protected\r\n     * @type {boolean}\r\n     */\r\n    this.overlaps = overlaps;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio = pixelRatio;\r\n\r\n    /**\r\n     * @protected\r\n     * @const\r\n     * @type {number}\r\n     */\r\n    this.resolution = resolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.alignAndScaleFill_;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<*>}\r\n     */\r\n    this.instructions = instructions.instructions;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<number>}\r\n     */\r\n    this.coordinates = instructions.coordinates;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\r\n     */\r\n    this.coordinateCache_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {!import(\"../../transform.js\").Transform}\r\n     */\r\n    this.renderedTransform_ = createTransform();\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<*>}\r\n     */\r\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.pixelCoordinates_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.viewRotation_ = 0;\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\r\n     */\r\n    this.fillStates = instructions.fillStates || {};\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\r\n     */\r\n    this.strokeStates = instructions.strokeStates || {};\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\r\n     */\r\n    this.textStates = instructions.textStates || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, Object<string, number>>}\r\n     */\r\n    this.widths_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, import(\"../canvas.js\").Label>}\r\n     */\r\n    this.labels_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\r\n     */\r\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\r\n  }\r\n\r\n  /**\r\n   * @return {ZIndexContext} ZIndex context.\r\n   */\r\n  getZIndexContext() {\r\n    return this.zIndexContext_;\r\n  }\r\n\r\n  /**\r\n   * @param {string|Array<string>} text Text.\r\n   * @param {string} textKey Text style key.\r\n   * @param {string} fillKey Fill style key.\r\n   * @param {string} strokeKey Stroke style key.\r\n   * @return {import(\"../canvas.js\").Label} Label.\r\n   */\r\n  createLabel(text, textKey, fillKey, strokeKey) {\r\n    const key = text + textKey + fillKey + strokeKey;\r\n    if (this.labels_[key]) {\r\n      return this.labels_[key];\r\n    }\r\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\r\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\r\n    const textState = this.textStates[textKey];\r\n    const pixelRatio = this.pixelRatio;\r\n    const scale = [\r\n      textState.scale[0] * pixelRatio,\r\n      textState.scale[1] * pixelRatio,\r\n    ];\r\n    const textIsArray = Array.isArray(text);\r\n    const align = textState.justify\r\n      ? TEXT_ALIGN[textState.justify]\r\n      : horizontalTextAlign(\r\n          Array.isArray(text) ? text[0] : text,\r\n          textState.textAlign || defaultTextAlign,\r\n        );\r\n    const strokeWidth =\r\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\r\n\r\n    const chunks = textIsArray\r\n      ? text\r\n      : text.split('\\n').reduce(createTextChunks, []);\r\n\r\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\r\n      textState,\r\n      chunks,\r\n    );\r\n    const renderWidth = width + strokeWidth;\r\n    const contextInstructions = [];\r\n    // make canvas 2 pixels wider to account for italic text width measurement errors\r\n    const w = (renderWidth + 2) * scale[0];\r\n    const h = (height + strokeWidth) * scale[1];\r\n    /** @type {import(\"../canvas.js\").Label} */\r\n    const label = {\r\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\r\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\r\n      contextInstructions: contextInstructions,\r\n    };\r\n    if (scale[0] != 1 || scale[1] != 1) {\r\n      contextInstructions.push('scale', scale);\r\n    }\r\n    if (strokeKey) {\r\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\r\n      contextInstructions.push('lineWidth', strokeWidth);\r\n      contextInstructions.push('lineCap', strokeState.lineCap);\r\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\r\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\r\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\r\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\r\n    }\r\n    if (fillKey) {\r\n      contextInstructions.push('fillStyle', fillState.fillStyle);\r\n    }\r\n    contextInstructions.push('textBaseline', 'middle');\r\n    contextInstructions.push('textAlign', 'center');\r\n    const leftRight = 0.5 - align;\r\n    let x = align * renderWidth + leftRight * strokeWidth;\r\n    const strokeInstructions = [];\r\n    const fillInstructions = [];\r\n    let lineHeight = 0;\r\n    let lineOffset = 0;\r\n    let widthHeightIndex = 0;\r\n    let lineWidthIndex = 0;\r\n    let previousFont;\r\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\r\n      const text = chunks[i];\r\n      if (text === '\\n') {\r\n        lineOffset += lineHeight;\r\n        lineHeight = 0;\r\n        x = align * renderWidth + leftRight * strokeWidth;\r\n        ++lineWidthIndex;\r\n        continue;\r\n      }\r\n      const font = chunks[i + 1] || textState.font;\r\n      if (font !== previousFont) {\r\n        if (strokeKey) {\r\n          strokeInstructions.push('font', font);\r\n        }\r\n        if (fillKey) {\r\n          fillInstructions.push('font', font);\r\n        }\r\n        previousFont = font;\r\n      }\r\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\r\n      const fillStrokeArgs = [\r\n        text,\r\n        x +\r\n          leftRight * widths[widthHeightIndex] +\r\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\r\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\r\n      ];\r\n      x += widths[widthHeightIndex];\r\n      if (strokeKey) {\r\n        strokeInstructions.push('strokeText', fillStrokeArgs);\r\n      }\r\n      if (fillKey) {\r\n        fillInstructions.push('fillText', fillStrokeArgs);\r\n      }\r\n      ++widthHeightIndex;\r\n    }\r\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\r\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\r\n    this.labels_[key] = label;\r\n    return label;\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\r\n   * @param {Array<*>} fillInstruction Fill instruction.\r\n   * @param {Array<*>} strokeInstruction Stroke instruction.\r\n   */\r\n  replayTextBackground_(\r\n    context,\r\n    p1,\r\n    p2,\r\n    p3,\r\n    p4,\r\n    fillInstruction,\r\n    strokeInstruction,\r\n  ) {\r\n    context.beginPath();\r\n    context.moveTo.apply(context, p1);\r\n    context.lineTo.apply(context, p2);\r\n    context.lineTo.apply(context, p3);\r\n    context.lineTo.apply(context, p4);\r\n    context.lineTo.apply(context, p1);\r\n    if (fillInstruction) {\r\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\r\n      this.fill_(context);\r\n    }\r\n    if (strokeInstruction) {\r\n      this.setStrokeStyle_(\r\n        context,\r\n        /** @type {Array<*>} */ (strokeInstruction),\r\n      );\r\n      context.stroke();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {number} sheetWidth Width of the sprite sheet.\r\n   * @param {number} sheetHeight Height of the sprite sheet.\r\n   * @param {number} centerX X.\r\n   * @param {number} centerY Y.\r\n   * @param {number} width Width.\r\n   * @param {number} height Height.\r\n   * @param {number} anchorX Anchor X.\r\n   * @param {number} anchorY Anchor Y.\r\n   * @param {number} originX Origin X.\r\n   * @param {number} originY Origin Y.\r\n   * @param {number} rotation Rotation.\r\n   * @param {import(\"../../size.js\").Size} scale Scale.\r\n   * @param {boolean} snapToPixel Snap to pixel.\r\n   * @param {Array<number>} padding Padding.\r\n   * @param {boolean} fillStroke Background fill or stroke.\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\r\n   */\r\n  calculateImageOrLabelDimensions_(\r\n    sheetWidth,\r\n    sheetHeight,\r\n    centerX,\r\n    centerY,\r\n    width,\r\n    height,\r\n    anchorX,\r\n    anchorY,\r\n    originX,\r\n    originY,\r\n    rotation,\r\n    scale,\r\n    snapToPixel,\r\n    padding,\r\n    fillStroke,\r\n    feature,\r\n  ) {\r\n    anchorX *= scale[0];\r\n    anchorY *= scale[1];\r\n    let x = centerX - anchorX;\r\n    let y = centerY - anchorY;\r\n\r\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\r\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\r\n    const boxW = padding[3] + w * scale[0] + padding[1];\r\n    const boxH = padding[0] + h * scale[1] + padding[2];\r\n    const boxX = x - padding[3];\r\n    const boxY = y - padding[0];\r\n\r\n    if (fillStroke || rotation !== 0) {\r\n      p1[0] = boxX;\r\n      p4[0] = boxX;\r\n      p1[1] = boxY;\r\n      p2[1] = boxY;\r\n      p2[0] = boxX + boxW;\r\n      p3[0] = p2[0];\r\n      p3[1] = boxY + boxH;\r\n      p4[1] = p3[1];\r\n    }\r\n\r\n    let transform;\r\n    if (rotation !== 0) {\r\n      transform = composeTransform(\r\n        createTransform(),\r\n        centerX,\r\n        centerY,\r\n        1,\r\n        1,\r\n        rotation,\r\n        -centerX,\r\n        -centerY,\r\n      );\r\n\r\n      applyTransform(transform, p1);\r\n      applyTransform(transform, p2);\r\n      applyTransform(transform, p3);\r\n      applyTransform(transform, p4);\r\n      createOrUpdate(\r\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\r\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\r\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\r\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\r\n        tmpExtent,\r\n      );\r\n    } else {\r\n      createOrUpdate(\r\n        Math.min(boxX, boxX + boxW),\r\n        Math.min(boxY, boxY + boxH),\r\n        Math.max(boxX, boxX + boxW),\r\n        Math.max(boxY, boxY + boxH),\r\n        tmpExtent,\r\n      );\r\n    }\r\n    if (snapToPixel) {\r\n      x = Math.round(x);\r\n      y = Math.round(y);\r\n    }\r\n    return {\r\n      drawImageX: x,\r\n      drawImageY: y,\r\n      drawImageW: w,\r\n      drawImageH: h,\r\n      originX: originX,\r\n      originY: originY,\r\n      declutterBox: {\r\n        minX: tmpExtent[0],\r\n        minY: tmpExtent[1],\r\n        maxX: tmpExtent[2],\r\n        maxY: tmpExtent[3],\r\n        value: feature,\r\n      },\r\n      canvasTransform: transform,\r\n      scale: scale,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\r\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\r\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\r\n   * @param {number} opacity Opacity.\r\n   * @param {Array<*>} fillInstruction Fill instruction.\r\n   * @param {Array<*>} strokeInstruction Stroke instruction.\r\n   * @return {boolean} The image or label was rendered.\r\n   */\r\n  replayImageOrLabel_(\r\n    context,\r\n    scaledCanvasSize,\r\n    imageOrLabel,\r\n    dimensions,\r\n    opacity,\r\n    fillInstruction,\r\n    strokeInstruction,\r\n  ) {\r\n    const fillStroke = !!(fillInstruction || strokeInstruction);\r\n\r\n    const box = dimensions.declutterBox;\r\n    const strokePadding = strokeInstruction\r\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\r\n      : 0;\r\n    const intersects =\r\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\r\n      box.maxX + strokePadding >= 0 &&\r\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\r\n      box.maxY + strokePadding >= 0;\r\n\r\n    if (intersects) {\r\n      if (fillStroke) {\r\n        this.replayTextBackground_(\r\n          context,\r\n          p1,\r\n          p2,\r\n          p3,\r\n          p4,\r\n          /** @type {Array<*>} */ (fillInstruction),\r\n          /** @type {Array<*>} */ (strokeInstruction),\r\n        );\r\n      }\r\n      drawImageOrLabel(\r\n        context,\r\n        dimensions.canvasTransform,\r\n        opacity,\r\n        imageOrLabel,\r\n        dimensions.originX,\r\n        dimensions.originY,\r\n        dimensions.drawImageW,\r\n        dimensions.drawImageH,\r\n        dimensions.drawImageX,\r\n        dimensions.drawImageY,\r\n        dimensions.scale,\r\n      );\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   */\r\n  fill_(context) {\r\n    const alignAndScale = this.alignAndScaleFill_;\r\n    if (alignAndScale) {\r\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\r\n      const repeatSize = 512 * this.pixelRatio;\r\n      context.save();\r\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\r\n      if (alignAndScale !== 1) {\r\n        context.scale(alignAndScale, alignAndScale);\r\n      }\r\n      context.rotate(this.viewRotation_);\r\n    }\r\n    context.fill();\r\n    if (alignAndScale) {\r\n      context.restore();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {Array<*>} instruction Instruction.\r\n   */\r\n  setStrokeStyle_(context, instruction) {\r\n    context.strokeStyle =\r\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\r\n    context.lineWidth = /** @type {number} */ (instruction[2]);\r\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\r\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\r\n    context.miterLimit = /** @type {number} */ (instruction[5]);\r\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\r\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {string|Array<string>} text The text to draw.\r\n   * @param {string} textKey The key of the text state.\r\n   * @param {string} strokeKey The key for the stroke state.\r\n   * @param {string} fillKey The key for the fill state.\r\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\r\n   */\r\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\r\n    const textState = this.textStates[textKey];\r\n\r\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\r\n\r\n    const strokeState = this.strokeStates[strokeKey];\r\n    const pixelRatio = this.pixelRatio;\r\n    const align = horizontalTextAlign(\r\n      Array.isArray(text) ? text[0] : text,\r\n      textState.textAlign || defaultTextAlign,\r\n    );\r\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\r\n    const strokeWidth =\r\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\r\n\r\n    // Remove the 2 pixels we added in createLabel() for the anchor\r\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\r\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\r\n    const anchorY =\r\n      (baseline * label.height) / pixelRatio +\r\n      2 * (0.5 - baseline) * strokeWidth;\r\n\r\n    return {\r\n      label: label,\r\n      anchorX: anchorX,\r\n      anchorY: anchorY,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {Array<*>} instructions Instructions array.\r\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\r\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\r\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\r\n   *     features that intersect this extent.\r\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  execute_(\r\n    context,\r\n    scaledCanvasSize,\r\n    transform,\r\n    instructions,\r\n    snapToPixel,\r\n    featureCallback,\r\n    hitExtent,\r\n    declutterTree,\r\n  ) {\r\n    const zIndexContext = this.zIndexContext_;\r\n    /** @type {Array<number>} */\r\n    let pixelCoordinates;\r\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\r\n      pixelCoordinates = this.pixelCoordinates_;\r\n    } else {\r\n      if (!this.pixelCoordinates_) {\r\n        this.pixelCoordinates_ = [];\r\n      }\r\n      pixelCoordinates = transform2D(\r\n        this.coordinates,\r\n        0,\r\n        this.coordinates.length,\r\n        2,\r\n        transform,\r\n        this.pixelCoordinates_,\r\n      );\r\n      transformSetFromArray(this.renderedTransform_, transform);\r\n    }\r\n    let i = 0; // instruction index\r\n    const ii = instructions.length; // end of instructions\r\n    let d = 0; // data index\r\n    let dd; // end of per-instruction data\r\n    let anchorX,\r\n      anchorY,\r\n      /** @type {import('../../style/Style.js').DeclutterMode} */\r\n      declutterMode,\r\n      prevX,\r\n      prevY,\r\n      roundX,\r\n      roundY,\r\n      image,\r\n      text,\r\n      textKey,\r\n      strokeKey,\r\n      fillKey;\r\n    let pendingFill = 0;\r\n    let pendingStroke = 0;\r\n    let lastFillInstruction = null;\r\n    let lastStrokeInstruction = null;\r\n    const coordinateCache = this.coordinateCache_;\r\n    const viewRotation = this.viewRotation_;\r\n    const viewRotationFromTransform =\r\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\r\n\r\n    const state = /** @type {import(\"../../render.js\").State} */ ({\r\n      context: context,\r\n      pixelRatio: this.pixelRatio,\r\n      resolution: this.resolution,\r\n      rotation: viewRotation,\r\n    });\r\n\r\n    // When the batch size gets too big, performance decreases. 200 is a good\r\n    // balance between batch size and number of fill/stroke instructions.\r\n    const batchSize =\r\n      this.instructions != instructions || this.overlaps ? 0 : 200;\r\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\r\n    let x, y, currentGeometry;\r\n    while (i < ii) {\r\n      const instruction = instructions[i];\r\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\r\n        instruction[0]\r\n      );\r\n      switch (type) {\r\n        case CanvasInstruction.BEGIN_GEOMETRY:\r\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\r\n            instruction[1]\r\n          );\r\n          currentGeometry = instruction[3];\r\n          if (!feature.getGeometry()) {\r\n            i = /** @type {number} */ (instruction[2]);\r\n          } else if (\r\n            hitExtent !== undefined &&\r\n            !intersects(hitExtent, currentGeometry.getExtent())\r\n          ) {\r\n            i = /** @type {number} */ (instruction[2]) + 1;\r\n          } else {\r\n            ++i;\r\n          }\r\n          if (zIndexContext) {\r\n            zIndexContext.zIndex = instruction[4];\r\n          }\r\n          break;\r\n        case CanvasInstruction.BEGIN_PATH:\r\n          if (pendingFill > batchSize) {\r\n            this.fill_(context);\r\n            pendingFill = 0;\r\n          }\r\n          if (pendingStroke > batchSize) {\r\n            context.stroke();\r\n            pendingStroke = 0;\r\n          }\r\n          if (!pendingFill && !pendingStroke) {\r\n            context.beginPath();\r\n            prevX = NaN;\r\n            prevY = NaN;\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.CIRCLE:\r\n          d = /** @type {number} */ (instruction[1]);\r\n          const x1 = pixelCoordinates[d];\r\n          const y1 = pixelCoordinates[d + 1];\r\n          const x2 = pixelCoordinates[d + 2];\r\n          const y2 = pixelCoordinates[d + 3];\r\n          const dx = x2 - x1;\r\n          const dy = y2 - y1;\r\n          const r = Math.sqrt(dx * dx + dy * dy);\r\n          context.moveTo(x1 + r, y1);\r\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.CLOSE_PATH:\r\n          context.closePath();\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.CUSTOM:\r\n          d = /** @type {number} */ (instruction[1]);\r\n          dd = instruction[2];\r\n          const geometry =\r\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\r\n              instruction[3]\r\n            );\r\n          const renderer = instruction[4];\r\n          const fn = instruction[5];\r\n          state.geometry = geometry;\r\n          state.feature = feature;\r\n          if (!(i in coordinateCache)) {\r\n            coordinateCache[i] = [];\r\n          }\r\n          const coords = coordinateCache[i];\r\n          if (fn) {\r\n            fn(pixelCoordinates, d, dd, 2, coords);\r\n          } else {\r\n            coords[0] = pixelCoordinates[d];\r\n            coords[1] = pixelCoordinates[d + 1];\r\n            coords.length = 2;\r\n          }\r\n          if (zIndexContext) {\r\n            zIndexContext.zIndex = instruction[6];\r\n          }\r\n          renderer(coords, state);\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.DRAW_IMAGE:\r\n          d = /** @type {number} */ (instruction[1]);\r\n          dd = /** @type {number} */ (instruction[2]);\r\n          image =\r\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\r\n              instruction[3]\r\n            );\r\n\r\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\r\n          anchorX = /** @type {number} */ (instruction[4]);\r\n          anchorY = /** @type {number} */ (instruction[5]);\r\n          let height = /** @type {number} */ (instruction[6]);\r\n          const opacity = /** @type {number} */ (instruction[7]);\r\n          const originX = /** @type {number} */ (instruction[8]);\r\n          const originY = /** @type {number} */ (instruction[9]);\r\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\r\n          let rotation = /** @type {number} */ (instruction[11]);\r\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\r\n            instruction[12]\r\n          );\r\n          let width = /** @type {number} */ (instruction[13]);\r\n          declutterMode = instruction[14] || 'declutter';\r\n          const declutterImageWithText =\r\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\r\n              instruction[15]\r\n            );\r\n\r\n          if (!image && instruction.length >= 20) {\r\n            // create label images\r\n            text = /** @type {string} */ (instruction[19]);\r\n            textKey = /** @type {string} */ (instruction[20]);\r\n            strokeKey = /** @type {string} */ (instruction[21]);\r\n            fillKey = /** @type {string} */ (instruction[22]);\r\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\r\n              text,\r\n              textKey,\r\n              strokeKey,\r\n              fillKey,\r\n            );\r\n            image = labelWithAnchor.label;\r\n            instruction[3] = image;\r\n            const textOffsetX = /** @type {number} */ (instruction[23]);\r\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\r\n            instruction[4] = anchorX;\r\n            const textOffsetY = /** @type {number} */ (instruction[24]);\r\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\r\n            instruction[5] = anchorY;\r\n            height = image.height;\r\n            instruction[6] = height;\r\n            width = image.width;\r\n            instruction[13] = width;\r\n          }\r\n\r\n          let geometryWidths;\r\n          if (instruction.length > 25) {\r\n            geometryWidths = /** @type {number} */ (instruction[25]);\r\n          }\r\n\r\n          let padding, backgroundFill, backgroundStroke;\r\n          if (instruction.length > 17) {\r\n            padding = /** @type {Array<number>} */ (instruction[16]);\r\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\r\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\r\n          } else {\r\n            padding = defaultPadding;\r\n            backgroundFill = false;\r\n            backgroundStroke = false;\r\n          }\r\n\r\n          if (rotateWithView && viewRotationFromTransform) {\r\n            // Canvas is expected to be rotated to reverse view rotation.\r\n            rotation += viewRotation;\r\n          } else if (!rotateWithView && !viewRotationFromTransform) {\r\n            // Canvas is not rotated, images need to be rotated back to be north-up.\r\n            rotation -= viewRotation;\r\n          }\r\n          let widthIndex = 0;\r\n          for (; d < dd; d += 2) {\r\n            if (\r\n              geometryWidths &&\r\n              geometryWidths[widthIndex++] < width / this.pixelRatio\r\n            ) {\r\n              continue;\r\n            }\r\n            const dimensions = this.calculateImageOrLabelDimensions_(\r\n              image.width,\r\n              image.height,\r\n              pixelCoordinates[d],\r\n              pixelCoordinates[d + 1],\r\n              width,\r\n              height,\r\n              anchorX,\r\n              anchorY,\r\n              originX,\r\n              originY,\r\n              rotation,\r\n              scale,\r\n              snapToPixel,\r\n              padding,\r\n              backgroundFill || backgroundStroke,\r\n              feature,\r\n            );\r\n            /** @type {ReplayImageOrLabelArgs} */\r\n            const args = [\r\n              context,\r\n              scaledCanvasSize,\r\n              image,\r\n              dimensions,\r\n              opacity,\r\n              backgroundFill\r\n                ? /** @type {Array<*>} */ (lastFillInstruction)\r\n                : null,\r\n              backgroundStroke\r\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\r\n                : null,\r\n            ];\r\n            if (declutterTree) {\r\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\r\n              if (declutterImageWithText) {\r\n                const index = dd - d;\r\n                if (!declutterImageWithText[index]) {\r\n                  // We now have the image for an image+text combination.\r\n                  declutterImageWithText[index] = {args, declutterMode};\r\n                  // Don't render anything for now, wait for the text.\r\n                  continue;\r\n                }\r\n                const imageDeclutter = declutterImageWithText[index];\r\n                imageArgs = imageDeclutter.args;\r\n                imageDeclutterMode = imageDeclutter.declutterMode;\r\n                delete declutterImageWithText[index];\r\n                imageDeclutterBox = getDeclutterBox(imageArgs);\r\n              }\r\n              // We now have image and text for an image+text combination.\r\n              let renderImage, renderText;\r\n              if (\r\n                imageArgs &&\r\n                (imageDeclutterMode !== 'declutter' ||\r\n                  !declutterTree.collides(imageDeclutterBox))\r\n              ) {\r\n                renderImage = true;\r\n              }\r\n              if (\r\n                declutterMode !== 'declutter' ||\r\n                !declutterTree.collides(dimensions.declutterBox)\r\n              ) {\r\n                renderText = true;\r\n              }\r\n              if (\r\n                imageDeclutterMode === 'declutter' &&\r\n                declutterMode === 'declutter'\r\n              ) {\r\n                const render = renderImage && renderText;\r\n                renderImage = render;\r\n                renderText = render;\r\n              }\r\n              if (renderImage) {\r\n                if (imageDeclutterMode !== 'none') {\r\n                  declutterTree.insert(imageDeclutterBox);\r\n                }\r\n                this.replayImageOrLabel_.apply(this, imageArgs);\r\n              }\r\n              if (renderText) {\r\n                if (declutterMode !== 'none') {\r\n                  declutterTree.insert(dimensions.declutterBox);\r\n                }\r\n                this.replayImageOrLabel_.apply(this, args);\r\n              }\r\n            } else {\r\n              this.replayImageOrLabel_.apply(this, args);\r\n            }\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.DRAW_CHARS:\r\n          const begin = /** @type {number} */ (instruction[1]);\r\n          const end = /** @type {number} */ (instruction[2]);\r\n          const baseline = /** @type {number} */ (instruction[3]);\r\n          const overflow = /** @type {number} */ (instruction[4]);\r\n          fillKey = /** @type {string} */ (instruction[5]);\r\n          const maxAngle = /** @type {number} */ (instruction[6]);\r\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\r\n          const offsetY = /** @type {number} */ (instruction[8]);\r\n          strokeKey = /** @type {string} */ (instruction[9]);\r\n          const strokeWidth = /** @type {number} */ (instruction[10]);\r\n          text = /** @type {string} */ (instruction[11]);\r\n          textKey = /** @type {string} */ (instruction[12]);\r\n          const pixelRatioScale = [\r\n            /** @type {number} */ (instruction[13]),\r\n            /** @type {number} */ (instruction[13]),\r\n          ];\r\n          declutterMode = instruction[14] || 'declutter';\r\n\r\n          const textState = this.textStates[textKey];\r\n          const font = textState.font;\r\n          const textScale = [\r\n            textState.scale[0] * measurePixelRatio,\r\n            textState.scale[1] * measurePixelRatio,\r\n          ];\r\n\r\n          let cachedWidths;\r\n          if (font in this.widths_) {\r\n            cachedWidths = this.widths_[font];\r\n          } else {\r\n            cachedWidths = {};\r\n            this.widths_[font] = cachedWidths;\r\n          }\r\n\r\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\r\n          const textLength =\r\n            Math.abs(textScale[0]) *\r\n            measureAndCacheTextWidth(font, text, cachedWidths);\r\n          if (overflow || textLength <= pathLength) {\r\n            const textAlign = this.textStates[textKey].textAlign;\r\n            const startM =\r\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\r\n            const parts = drawTextOnPath(\r\n              pixelCoordinates,\r\n              begin,\r\n              end,\r\n              2,\r\n              text,\r\n              startM,\r\n              maxAngle,\r\n              Math.abs(textScale[0]),\r\n              measureAndCacheTextWidth,\r\n              font,\r\n              cachedWidths,\r\n              viewRotationFromTransform ? 0 : this.viewRotation_,\r\n            );\r\n            drawChars: if (parts) {\r\n              /** @type {Array<ReplayImageOrLabelArgs>} */\r\n              const replayImageOrLabelArgs = [];\r\n              let c, cc, chars, label, part;\r\n              if (strokeKey) {\r\n                for (c = 0, cc = parts.length; c < cc; ++c) {\r\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\r\n                  chars = /** @type {string} */ (part[4]);\r\n                  label = this.createLabel(chars, textKey, '', strokeKey);\r\n                  anchorX =\r\n                    /** @type {number} */ (part[2]) +\r\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\r\n                  anchorY =\r\n                    baseline * label.height +\r\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\r\n                      textScale[0] -\r\n                    offsetY;\r\n                  const dimensions = this.calculateImageOrLabelDimensions_(\r\n                    label.width,\r\n                    label.height,\r\n                    part[0],\r\n                    part[1],\r\n                    label.width,\r\n                    label.height,\r\n                    anchorX,\r\n                    anchorY,\r\n                    0,\r\n                    0,\r\n                    part[3],\r\n                    pixelRatioScale,\r\n                    false,\r\n                    defaultPadding,\r\n                    false,\r\n                    feature,\r\n                  );\r\n                  if (\r\n                    declutterTree &&\r\n                    declutterMode === 'declutter' &&\r\n                    declutterTree.collides(dimensions.declutterBox)\r\n                  ) {\r\n                    break drawChars;\r\n                  }\r\n                  replayImageOrLabelArgs.push([\r\n                    context,\r\n                    scaledCanvasSize,\r\n                    label,\r\n                    dimensions,\r\n                    1,\r\n                    null,\r\n                    null,\r\n                  ]);\r\n                }\r\n              }\r\n              if (fillKey) {\r\n                for (c = 0, cc = parts.length; c < cc; ++c) {\r\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\r\n                  chars = /** @type {string} */ (part[4]);\r\n                  label = this.createLabel(chars, textKey, fillKey, '');\r\n                  anchorX = /** @type {number} */ (part[2]);\r\n                  anchorY = baseline * label.height - offsetY;\r\n                  const dimensions = this.calculateImageOrLabelDimensions_(\r\n                    label.width,\r\n                    label.height,\r\n                    part[0],\r\n                    part[1],\r\n                    label.width,\r\n                    label.height,\r\n                    anchorX,\r\n                    anchorY,\r\n                    0,\r\n                    0,\r\n                    part[3],\r\n                    pixelRatioScale,\r\n                    false,\r\n                    defaultPadding,\r\n                    false,\r\n                    feature,\r\n                  );\r\n                  if (\r\n                    declutterTree &&\r\n                    declutterMode === 'declutter' &&\r\n                    declutterTree.collides(dimensions.declutterBox)\r\n                  ) {\r\n                    break drawChars;\r\n                  }\r\n                  replayImageOrLabelArgs.push([\r\n                    context,\r\n                    scaledCanvasSize,\r\n                    label,\r\n                    dimensions,\r\n                    1,\r\n                    null,\r\n                    null,\r\n                  ]);\r\n                }\r\n              }\r\n              if (declutterTree && declutterMode !== 'none') {\r\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\r\n              }\r\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\r\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\r\n              }\r\n            }\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.END_GEOMETRY:\r\n          if (featureCallback !== undefined) {\r\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\r\n              instruction[1]\r\n            );\r\n            const result = featureCallback(feature, currentGeometry);\r\n            if (result) {\r\n              return result;\r\n            }\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.FILL:\r\n          if (batchSize) {\r\n            pendingFill++;\r\n          } else {\r\n            this.fill_(context);\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.MOVE_TO_LINE_TO:\r\n          d = /** @type {number} */ (instruction[1]);\r\n          dd = /** @type {number} */ (instruction[2]);\r\n          x = pixelCoordinates[d];\r\n          y = pixelCoordinates[d + 1];\r\n          roundX = (x + 0.5) | 0;\r\n          roundY = (y + 0.5) | 0;\r\n          if (roundX !== prevX || roundY !== prevY) {\r\n            context.moveTo(x, y);\r\n            prevX = roundX;\r\n            prevY = roundY;\r\n          }\r\n          for (d += 2; d < dd; d += 2) {\r\n            x = pixelCoordinates[d];\r\n            y = pixelCoordinates[d + 1];\r\n            roundX = (x + 0.5) | 0;\r\n            roundY = (y + 0.5) | 0;\r\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\r\n              context.lineTo(x, y);\r\n              prevX = roundX;\r\n              prevY = roundY;\r\n            }\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.SET_FILL_STYLE:\r\n          lastFillInstruction = instruction;\r\n          this.alignAndScaleFill_ = instruction[2];\r\n\r\n          if (pendingFill) {\r\n            this.fill_(context);\r\n            pendingFill = 0;\r\n            if (pendingStroke) {\r\n              context.stroke();\r\n              pendingStroke = 0;\r\n            }\r\n          }\r\n\r\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\r\n          context.fillStyle = instruction[1];\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.SET_STROKE_STYLE:\r\n          lastStrokeInstruction = instruction;\r\n          if (pendingStroke) {\r\n            context.stroke();\r\n            pendingStroke = 0;\r\n          }\r\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.STROKE:\r\n          if (batchSize) {\r\n            pendingStroke++;\r\n          } else {\r\n            context.stroke();\r\n          }\r\n          ++i;\r\n          break;\r\n        default: // consume the instruction anyway, to avoid an infinite loop\r\n          ++i;\r\n          break;\r\n      }\r\n    }\r\n    if (pendingFill) {\r\n      this.fill_(context);\r\n    }\r\n    if (pendingStroke) {\r\n      context.stroke();\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {number} viewRotation View rotation.\r\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\r\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\r\n   */\r\n  execute(\r\n    context,\r\n    scaledCanvasSize,\r\n    transform,\r\n    viewRotation,\r\n    snapToPixel,\r\n    declutterTree,\r\n  ) {\r\n    this.viewRotation_ = viewRotation;\r\n    this.execute_(\r\n      context,\r\n      scaledCanvasSize,\r\n      transform,\r\n      this.instructions,\r\n      snapToPixel,\r\n      undefined,\r\n      undefined,\r\n      declutterTree,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {number} viewRotation View rotation.\r\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\r\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\r\n   *     features that intersect this extent.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  executeHitDetection(\r\n    context,\r\n    transform,\r\n    viewRotation,\r\n    featureCallback,\r\n    hitExtent,\r\n  ) {\r\n    this.viewRotation_ = viewRotation;\r\n    return this.execute_(\r\n      context,\r\n      [context.canvas.width, context.canvas.height],\r\n      transform,\r\n      this.hitDetectionInstructions,\r\n      true,\r\n      featureCallback,\r\n      hitExtent,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Executor;\r\n", "/**\r\n * @module ol/render/canvas/ExecutorGroup\r\n */\r\n\r\nimport Executor from './Executor.js';\r\nimport {ascending} from '../../array.js';\r\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\r\nimport {\r\n  compose as composeTransform,\r\n  create as createTransform,\r\n} from '../../transform.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport {isEmpty} from '../../obj.js';\r\nimport {transform2D} from '../../geom/flat/transform.js';\r\n\r\n/**\r\n * @const\r\n * @type {Array<import(\"../canvas.js\").BuilderType>}\r\n */\r\nexport const ALL = [\r\n  'Polygon',\r\n  'Circle',\r\n  'LineString',\r\n  'Image',\r\n  'Text',\r\n  'Default',\r\n];\r\n\r\n/**\r\n * @const\r\n * @type {Array<import(\"../canvas.js\").BuilderType>}\r\n */\r\nexport const DECLUTTER = ['Image', 'Text'];\r\n\r\n/**\r\n * @const\r\n * @type {Array<import(\"../canvas.js\").BuilderType>}\r\n */\r\nexport const NON_DECLUTTER = ALL.filter(\r\n  (builderType) => !DECLUTTER.includes(builderType),\r\n);\r\n\r\nclass ExecutorGroup {\r\n  /**\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\r\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\r\n   * should be set here, unless the target context does not exceed that extent (which\r\n   * can be the case when rendering to tiles).\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\r\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\r\n   * The serializable instructions.\r\n   * @param {number} [renderBuffer] Optional rendering buffer.\r\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\r\n   */\r\n  constructor(\r\n    maxExtent,\r\n    resolution,\r\n    pixelRatio,\r\n    overlaps,\r\n    allInstructions,\r\n    renderBuffer,\r\n    deferredRendering,\r\n  ) {\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.maxExtent_ = maxExtent;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.overlaps_ = overlaps;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ = pixelRatio;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.resolution_ = resolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.renderBuffer_ = renderBuffer;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\r\n     */\r\n    this.executorsByZIndex_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.hitDetectionContext_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.hitDetectionTransform_ = createTransform();\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.renderedContext_ = null;\r\n\r\n    /**\r\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\r\n     */\r\n    this.deferredZIndexContexts_ = {};\r\n\r\n    this.createExecutors_(allInstructions, deferredRendering);\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   */\r\n  clip(context, transform) {\r\n    const flatClipCoords = this.getClipCoords(transform);\r\n    context.beginPath();\r\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\r\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\r\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\r\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\r\n    context.clip();\r\n  }\r\n\r\n  /**\r\n   * Create executors and populate them using the provided instructions.\r\n   * @private\r\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\r\n   * @param {boolean} deferredRendering Enable deferred rendering.\r\n   */\r\n  createExecutors_(allInstructions, deferredRendering) {\r\n    for (const zIndex in allInstructions) {\r\n      let executors = this.executorsByZIndex_[zIndex];\r\n      if (executors === undefined) {\r\n        executors = {};\r\n        this.executorsByZIndex_[zIndex] = executors;\r\n      }\r\n      const instructionByZindex = allInstructions[zIndex];\r\n      for (const builderType in instructionByZindex) {\r\n        const instructions = instructionByZindex[builderType];\r\n        executors[builderType] = new Executor(\r\n          this.resolution_,\r\n          this.pixelRatio_,\r\n          this.overlaps_,\r\n          instructions,\r\n          deferredRendering,\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\r\n   * @return {boolean} Has executors of the provided types.\r\n   */\r\n  hasExecutors(executors) {\r\n    for (const zIndex in this.executorsByZIndex_) {\r\n      const candidates = this.executorsByZIndex_[zIndex];\r\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\r\n        if (executors[i] in candidates) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} rotation Rotation.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\r\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  forEachFeatureAtCoordinate(\r\n    coordinate,\r\n    resolution,\r\n    rotation,\r\n    hitTolerance,\r\n    callback,\r\n    declutteredFeatures,\r\n  ) {\r\n    hitTolerance = Math.round(hitTolerance);\r\n    const contextSize = hitTolerance * 2 + 1;\r\n    const transform = composeTransform(\r\n      this.hitDetectionTransform_,\r\n      hitTolerance + 0.5,\r\n      hitTolerance + 0.5,\r\n      1 / resolution,\r\n      -1 / resolution,\r\n      -rotation,\r\n      -coordinate[0],\r\n      -coordinate[1],\r\n    );\r\n\r\n    const newContext = !this.hitDetectionContext_;\r\n    if (newContext) {\r\n      this.hitDetectionContext_ = createCanvasContext2D(\r\n        contextSize,\r\n        contextSize,\r\n        undefined,\r\n        {willReadFrequently: true},\r\n      );\r\n    }\r\n    const context = this.hitDetectionContext_;\r\n\r\n    if (\r\n      context.canvas.width !== contextSize ||\r\n      context.canvas.height !== contextSize\r\n    ) {\r\n      context.canvas.width = contextSize;\r\n      context.canvas.height = contextSize;\r\n    } else if (!newContext) {\r\n      context.clearRect(0, 0, contextSize, contextSize);\r\n    }\r\n\r\n    /**\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    let hitExtent;\r\n    if (this.renderBuffer_ !== undefined) {\r\n      hitExtent = createEmpty();\r\n      extendCoordinate(hitExtent, coordinate);\r\n      buffer(\r\n        hitExtent,\r\n        resolution * (this.renderBuffer_ + hitTolerance),\r\n        hitExtent,\r\n      );\r\n    }\r\n\r\n    const indexes = getPixelIndexArray(hitTolerance);\r\n\r\n    let builderType;\r\n\r\n    /**\r\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n     * @return {T|undefined} Callback result.\r\n     */\r\n    function featureCallback(feature, geometry) {\r\n      const imageData = context.getImageData(\r\n        0,\r\n        0,\r\n        contextSize,\r\n        contextSize,\r\n      ).data;\r\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\r\n        if (imageData[indexes[i]] > 0) {\r\n          if (\r\n            !declutteredFeatures ||\r\n            (builderType !== 'Image' && builderType !== 'Text') ||\r\n            declutteredFeatures.includes(feature)\r\n          ) {\r\n            const idx = (indexes[i] - 3) / 4;\r\n            const x = hitTolerance - (idx % contextSize);\r\n            const y = hitTolerance - ((idx / contextSize) | 0);\r\n            const result = callback(feature, geometry, x * x + y * y);\r\n            if (result) {\r\n              return result;\r\n            }\r\n          }\r\n          context.clearRect(0, 0, contextSize, contextSize);\r\n          break;\r\n        }\r\n      }\r\n      return undefined;\r\n    }\r\n\r\n    /** @type {Array<number>} */\r\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\r\n    zs.sort(ascending);\r\n\r\n    let i, j, executors, executor, result;\r\n    for (i = zs.length - 1; i >= 0; --i) {\r\n      const zIndexKey = zs[i].toString();\r\n      executors = this.executorsByZIndex_[zIndexKey];\r\n      for (j = ALL.length - 1; j >= 0; --j) {\r\n        builderType = ALL[j];\r\n        executor = executors[builderType];\r\n        if (executor !== undefined) {\r\n          result = executor.executeHitDetection(\r\n            context,\r\n            transform,\r\n            rotation,\r\n            featureCallback,\r\n            hitExtent,\r\n          );\r\n          if (result) {\r\n            return result;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @return {Array<number>|null} Clip coordinates.\r\n   */\r\n  getClipCoords(transform) {\r\n    const maxExtent = this.maxExtent_;\r\n    if (!maxExtent) {\r\n      return null;\r\n    }\r\n    const minX = maxExtent[0];\r\n    const minY = maxExtent[1];\r\n    const maxX = maxExtent[2];\r\n    const maxY = maxExtent[3];\r\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\r\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\r\n    return flatClipCoords;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Is empty.\r\n   */\r\n  isEmpty() {\r\n    return isEmpty(this.executorsByZIndex_);\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} targetContext Context.\r\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {number} viewRotation View rotation.\r\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\r\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\r\n   *     Default is {@link module:ol/render/replay~ALL}\r\n   * @param {import(\"rbush\").default|null} [declutterTree] Declutter tree.\r\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\r\n   */\r\n  execute(\r\n    targetContext,\r\n    scaledCanvasSize,\r\n    transform,\r\n    viewRotation,\r\n    snapToPixel,\r\n    builderTypes,\r\n    declutterTree,\r\n  ) {\r\n    /** @type {Array<number>} */\r\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\r\n    zs.sort(ascending);\r\n\r\n    builderTypes = builderTypes ? builderTypes : ALL;\r\n    let i, ii, j, jj, replays, replay;\r\n    if (declutterTree) {\r\n      zs.reverse();\r\n    }\r\n    for (i = 0, ii = zs.length; i < ii; ++i) {\r\n      const zIndexKey = zs[i].toString();\r\n      replays = this.executorsByZIndex_[zIndexKey];\r\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\r\n        const builderType = builderTypes[j];\r\n        replay = replays[builderType];\r\n        if (replay !== undefined) {\r\n          const zIndexContext =\r\n            declutterTree === null ? undefined : replay.getZIndexContext();\r\n          const context = zIndexContext\r\n            ? zIndexContext.getContext()\r\n            : targetContext;\r\n          const requireClip =\r\n            this.maxExtent_ &&\r\n            builderType !== 'Image' &&\r\n            builderType !== 'Text';\r\n          if (requireClip) {\r\n            context.save();\r\n            // setup clipping so that the parts of over-simplified geometries are not\r\n            // visible outside the current extent when panning\r\n            this.clip(context, transform);\r\n          }\r\n          replay.execute(\r\n            context,\r\n            scaledCanvasSize,\r\n            transform,\r\n            viewRotation,\r\n            snapToPixel,\r\n            declutterTree,\r\n          );\r\n          if (requireClip) {\r\n            context.restore();\r\n          }\r\n          if (zIndexContext) {\r\n            zIndexContext.offset();\r\n            const z = zs[i];\r\n            if (!this.deferredZIndexContexts_[z]) {\r\n              this.deferredZIndexContexts_[z] = [];\r\n            }\r\n            this.deferredZIndexContexts_[z].push(zIndexContext);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.renderedContext_ = targetContext;\r\n  }\r\n\r\n  getDeferredZIndexContexts() {\r\n    return this.deferredZIndexContexts_;\r\n  }\r\n\r\n  getRenderedContext() {\r\n    return this.renderedContext_;\r\n  }\r\n\r\n  renderDeferred() {\r\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\r\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\r\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\r\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\r\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\r\n        zIndexContext.clear();\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * This cache is used to store arrays of indexes for calculated pixel circles\r\n * to increase performance.\r\n * It is a static property to allow each Replaygroup to access it.\r\n * @type {Object<number, Array<number>>}\r\n */\r\nconst circlePixelIndexArrayCache = {};\r\n\r\n/**\r\n * This methods creates an array with indexes of all pixels within a circle,\r\n * ordered by how close they are to the center.\r\n * A cache is used to increase performance.\r\n * @param {number} radius Radius.\r\n * @return {Array<number>} An array with indexes within a circle.\r\n */\r\nexport function getPixelIndexArray(radius) {\r\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\r\n    return circlePixelIndexArrayCache[radius];\r\n  }\r\n\r\n  const size = radius * 2 + 1;\r\n  const maxDistanceSq = radius * radius;\r\n  const distances = new Array(maxDistanceSq + 1);\r\n  for (let i = 0; i <= radius; ++i) {\r\n    for (let j = 0; j <= radius; ++j) {\r\n      const distanceSq = i * i + j * j;\r\n      if (distanceSq > maxDistanceSq) {\r\n        break;\r\n      }\r\n      let distance = distances[distanceSq];\r\n      if (!distance) {\r\n        distance = [];\r\n        distances[distanceSq] = distance;\r\n      }\r\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\r\n      if (i > 0) {\r\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\r\n      }\r\n      if (j > 0) {\r\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\r\n        if (i > 0) {\r\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const pixelIndex = [];\r\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\r\n    if (distances[i]) {\r\n      pixelIndex.push(...distances[i]);\r\n    }\r\n  }\r\n\r\n  circlePixelIndexArrayCache[radius] = pixelIndex;\r\n  return pixelIndex;\r\n}\r\n\r\nexport default ExecutorGroup;\r\n", "/**\r\n * @module ol/render/canvas/Immediate\r\n */\r\n// FIXME test, especially polygons with holes and multipolygons\r\n// FIXME need to handle large thick features (where pixel size matters)\r\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\r\n\r\nimport VectorContext from '../VectorContext.js';\r\nimport {asColorLike} from '../../colorlike.js';\r\nimport {\r\n  compose as composeTransform,\r\n  create as createTransform,\r\n} from '../../transform.js';\r\nimport {\r\n  defaultFillStyle,\r\n  defaultFont,\r\n  defaultLineCap,\r\n  defaultLineDash,\r\n  defaultLineDashOffset,\r\n  defaultLineJoin,\r\n  defaultLineWidth,\r\n  defaultMiterLimit,\r\n  defaultStrokeStyle,\r\n  defaultTextAlign,\r\n  defaultTextBaseline,\r\n} from '../canvas.js';\r\nimport {equals} from '../../array.js';\r\nimport {intersects} from '../../extent.js';\r\nimport {toFixed} from '../../math.js';\r\nimport {transform2D} from '../../geom/flat/transform.js';\r\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\r\n\r\n/**\r\n * @classdesc\r\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\r\n * direct rendering of features and geometries to an HTML5 Canvas context.\r\n * Instances of this class are created internally by the library and\r\n * provided to application code as vectorContext member of the\r\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\r\n * render events emitted by layers and maps.\r\n */\r\nclass CanvasImmediateRenderer extends VectorContext {\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {number} viewRotation View rotation.\r\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\r\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\r\n   */\r\n  constructor(\r\n    context,\r\n    pixelRatio,\r\n    extent,\r\n    transform,\r\n    viewRotation,\r\n    squaredTolerance,\r\n    userTransform,\r\n  ) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.context_ = context;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ = pixelRatio;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.extent_ = extent;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.transform_ = transform;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.transformRotation_ = transform\r\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\r\n      : 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.viewRotation_ = viewRotation;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.squaredTolerance_ = squaredTolerance;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../proj.js\").TransformFunction}\r\n     */\r\n    this.userTransform_ = userTransform;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").FillState}\r\n     */\r\n    this.contextFillState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").StrokeState}\r\n     */\r\n    this.contextStrokeState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").TextState}\r\n     */\r\n    this.contextTextState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").FillState}\r\n     */\r\n    this.fillState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").StrokeState}\r\n     */\r\n    this.strokeState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import('../../DataTile.js').ImageLike}\r\n     */\r\n    this.image_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageAnchorX_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageAnchorY_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageHeight_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageOpacity_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageOriginX_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageOriginY_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.imageRotateWithView_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageRotation_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../size.js\").Size}\r\n     */\r\n    this.imageScale_ = [0, 0];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageWidth_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.text_ = '';\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textOffsetX_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textOffsetY_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.textRotateWithView_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textRotation_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../size.js\").Size}\r\n     */\r\n    this.textScale_ = [0, 0];\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").FillState}\r\n     */\r\n    this.textFillState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").StrokeState}\r\n     */\r\n    this.textStrokeState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").TextState}\r\n     */\r\n    this.textState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.pixelCoordinates_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.tmpLocalTransform_ = createTransform();\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   */\r\n  drawImages_(flatCoordinates, offset, end, stride) {\r\n    if (!this.image_) {\r\n      return;\r\n    }\r\n    const pixelCoordinates = transform2D(\r\n      flatCoordinates,\r\n      offset,\r\n      end,\r\n      stride,\r\n      this.transform_,\r\n      this.pixelCoordinates_,\r\n    );\r\n    const context = this.context_;\r\n    const localTransform = this.tmpLocalTransform_;\r\n    const alpha = context.globalAlpha;\r\n    if (this.imageOpacity_ != 1) {\r\n      context.globalAlpha = alpha * this.imageOpacity_;\r\n    }\r\n    let rotation = this.imageRotation_;\r\n    if (this.transformRotation_ === 0) {\r\n      rotation -= this.viewRotation_;\r\n    }\r\n    if (this.imageRotateWithView_) {\r\n      rotation += this.viewRotation_;\r\n    }\r\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\r\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\r\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\r\n      if (\r\n        rotation !== 0 ||\r\n        this.imageScale_[0] != 1 ||\r\n        this.imageScale_[1] != 1\r\n      ) {\r\n        const centerX = x + this.imageAnchorX_;\r\n        const centerY = y + this.imageAnchorY_;\r\n        composeTransform(\r\n          localTransform,\r\n          centerX,\r\n          centerY,\r\n          1,\r\n          1,\r\n          rotation,\r\n          -centerX,\r\n          -centerY,\r\n        );\r\n        context.save();\r\n        context.transform.apply(context, localTransform);\r\n        context.translate(centerX, centerY);\r\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\r\n        context.drawImage(\r\n          this.image_,\r\n          this.imageOriginX_,\r\n          this.imageOriginY_,\r\n          this.imageWidth_,\r\n          this.imageHeight_,\r\n          -this.imageAnchorX_,\r\n          -this.imageAnchorY_,\r\n          this.imageWidth_,\r\n          this.imageHeight_,\r\n        );\r\n        context.restore();\r\n      } else {\r\n        context.drawImage(\r\n          this.image_,\r\n          this.imageOriginX_,\r\n          this.imageOriginY_,\r\n          this.imageWidth_,\r\n          this.imageHeight_,\r\n          x,\r\n          y,\r\n          this.imageWidth_,\r\n          this.imageHeight_,\r\n        );\r\n      }\r\n    }\r\n    if (this.imageOpacity_ != 1) {\r\n      context.globalAlpha = alpha;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   */\r\n  drawText_(flatCoordinates, offset, end, stride) {\r\n    if (!this.textState_ || this.text_ === '') {\r\n      return;\r\n    }\r\n    if (this.textFillState_) {\r\n      this.setContextFillState_(this.textFillState_);\r\n    }\r\n    if (this.textStrokeState_) {\r\n      this.setContextStrokeState_(this.textStrokeState_);\r\n    }\r\n    this.setContextTextState_(this.textState_);\r\n    const pixelCoordinates = transform2D(\r\n      flatCoordinates,\r\n      offset,\r\n      end,\r\n      stride,\r\n      this.transform_,\r\n      this.pixelCoordinates_,\r\n    );\r\n    const context = this.context_;\r\n    let rotation = this.textRotation_;\r\n    if (this.transformRotation_ === 0) {\r\n      rotation -= this.viewRotation_;\r\n    }\r\n    if (this.textRotateWithView_) {\r\n      rotation += this.viewRotation_;\r\n    }\r\n    for (; offset < end; offset += stride) {\r\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\r\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\r\n      if (\r\n        rotation !== 0 ||\r\n        this.textScale_[0] != 1 ||\r\n        this.textScale_[1] != 1\r\n      ) {\r\n        context.save();\r\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\r\n        context.rotate(rotation);\r\n        context.translate(this.textOffsetX_, this.textOffsetY_);\r\n        context.scale(this.textScale_[0], this.textScale_[1]);\r\n        if (this.textStrokeState_) {\r\n          context.strokeText(this.text_, 0, 0);\r\n        }\r\n        if (this.textFillState_) {\r\n          context.fillText(this.text_, 0, 0);\r\n        }\r\n        context.restore();\r\n      } else {\r\n        if (this.textStrokeState_) {\r\n          context.strokeText(this.text_, x, y);\r\n        }\r\n        if (this.textFillState_) {\r\n          context.fillText(this.text_, x, y);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @param {boolean} close Close.\r\n   * @private\r\n   * @return {number} end End.\r\n   */\r\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\r\n    const context = this.context_;\r\n    const pixelCoordinates = transform2D(\r\n      flatCoordinates,\r\n      offset,\r\n      end,\r\n      stride,\r\n      this.transform_,\r\n      this.pixelCoordinates_,\r\n    );\r\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\r\n    let length = pixelCoordinates.length;\r\n    if (close) {\r\n      length -= 2;\r\n    }\r\n    for (let i = 2; i < length; i += 2) {\r\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\r\n    }\r\n    if (close) {\r\n      context.closePath();\r\n    }\r\n    return end;\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {Array<number>} ends Ends.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   * @return {number} End.\r\n   */\r\n  drawRings_(flatCoordinates, offset, ends, stride) {\r\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n      offset = this.moveToLineTo_(\r\n        flatCoordinates,\r\n        offset,\r\n        ends[i],\r\n        stride,\r\n        true,\r\n      );\r\n    }\r\n    return offset;\r\n  }\r\n\r\n  /**\r\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\r\n   * the current fill and stroke styles.\r\n   *\r\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\r\n   * @api\r\n   */\r\n  drawCircle(geometry) {\r\n    if (this.squaredTolerance_) {\r\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\r\n        geometry.simplifyTransformed(\r\n          this.squaredTolerance_,\r\n          this.userTransform_,\r\n        )\r\n      );\r\n    }\r\n    if (!intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    if (this.fillState_ || this.strokeState_) {\r\n      if (this.fillState_) {\r\n        this.setContextFillState_(this.fillState_);\r\n      }\r\n      if (this.strokeState_) {\r\n        this.setContextStrokeState_(this.strokeState_);\r\n      }\r\n      const pixelCoordinates = transformGeom2D(\r\n        geometry,\r\n        this.transform_,\r\n        this.pixelCoordinates_,\r\n      );\r\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\r\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\r\n      const radius = Math.sqrt(dx * dx + dy * dy);\r\n      const context = this.context_;\r\n      context.beginPath();\r\n      context.arc(\r\n        pixelCoordinates[0],\r\n        pixelCoordinates[1],\r\n        radius,\r\n        0,\r\n        2 * Math.PI,\r\n      );\r\n      if (this.fillState_) {\r\n        context.fill();\r\n      }\r\n      if (this.strokeState_) {\r\n        context.stroke();\r\n      }\r\n    }\r\n    if (this.text_ !== '') {\r\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the rendering style.  Note that since this is an immediate rendering API,\r\n   * any `zIndex` on the provided style will be ignored.\r\n   *\r\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\r\n   * @api\r\n   */\r\n  setStyle(style) {\r\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\r\n    this.setImageStyle(style.getImage());\r\n    this.setTextStyle(style.getText());\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   */\r\n  setTransform(transform) {\r\n    this.transform_ = transform;\r\n  }\r\n\r\n  /**\r\n   * Render a geometry into the canvas.  Call\r\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\r\n   *\r\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\r\n   * @api\r\n   */\r\n  drawGeometry(geometry) {\r\n    const type = geometry.getType();\r\n    switch (type) {\r\n      case 'Point':\r\n        this.drawPoint(\r\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\r\n        );\r\n        break;\r\n      case 'LineString':\r\n        this.drawLineString(\r\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\r\n        );\r\n        break;\r\n      case 'Polygon':\r\n        this.drawPolygon(\r\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\r\n        );\r\n        break;\r\n      case 'MultiPoint':\r\n        this.drawMultiPoint(\r\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\r\n        );\r\n        break;\r\n      case 'MultiLineString':\r\n        this.drawMultiLineString(\r\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\r\n            geometry\r\n          ),\r\n        );\r\n        break;\r\n      case 'MultiPolygon':\r\n        this.drawMultiPolygon(\r\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\r\n            geometry\r\n          ),\r\n        );\r\n        break;\r\n      case 'GeometryCollection':\r\n        this.drawGeometryCollection(\r\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\r\n            geometry\r\n          ),\r\n        );\r\n        break;\r\n      case 'Circle':\r\n        this.drawCircle(\r\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\r\n        );\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\r\n   * style will be ignored - features are rendered immediately in the order that\r\n   * this method is called.  If you need `zIndex` support, you should be using an\r\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\r\n   *\r\n   * @param {import(\"../../Feature.js\").default} feature Feature.\r\n   * @param {import(\"../../style/Style.js\").default} style Style.\r\n   * @api\r\n   */\r\n  drawFeature(feature, style) {\r\n    const geometry = style.getGeometryFunction()(feature);\r\n    if (!geometry) {\r\n      return;\r\n    }\r\n    this.setStyle(style);\r\n    this.drawGeometry(geometry);\r\n  }\r\n\r\n  /**\r\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\r\n   * uses the current styles appropriate for each geometry in the collection.\r\n   *\r\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\r\n   */\r\n  drawGeometryCollection(geometry) {\r\n    const geometries = geometry.getGeometriesArray();\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      this.drawGeometry(geometries[i]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\r\n   * the current style.\r\n   *\r\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\r\n   */\r\n  drawPoint(geometry) {\r\n    if (this.squaredTolerance_) {\r\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\r\n        geometry.simplifyTransformed(\r\n          this.squaredTolerance_,\r\n          this.userTransform_,\r\n        )\r\n      );\r\n    }\r\n    const flatCoordinates = geometry.getFlatCoordinates();\r\n    const stride = geometry.getStride();\r\n    if (this.image_) {\r\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    }\r\n    if (this.text_ !== '') {\r\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\r\n   * uses the current style.\r\n   *\r\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\r\n   */\r\n  drawMultiPoint(geometry) {\r\n    if (this.squaredTolerance_) {\r\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\r\n        geometry.simplifyTransformed(\r\n          this.squaredTolerance_,\r\n          this.userTransform_,\r\n        )\r\n      );\r\n    }\r\n    const flatCoordinates = geometry.getFlatCoordinates();\r\n    const stride = geometry.getStride();\r\n    if (this.image_) {\r\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    }\r\n    if (this.text_ !== '') {\r\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a LineString into the canvas.  Rendering is immediate and uses\r\n   * the current style.\r\n   *\r\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\r\n   */\r\n  drawLineString(geometry) {\r\n    if (this.squaredTolerance_) {\r\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\r\n        geometry.simplifyTransformed(\r\n          this.squaredTolerance_,\r\n          this.userTransform_,\r\n        )\r\n      );\r\n    }\r\n    if (!intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    if (this.strokeState_) {\r\n      this.setContextStrokeState_(this.strokeState_);\r\n      const context = this.context_;\r\n      const flatCoordinates = geometry.getFlatCoordinates();\r\n      context.beginPath();\r\n      this.moveToLineTo_(\r\n        flatCoordinates,\r\n        0,\r\n        flatCoordinates.length,\r\n        geometry.getStride(),\r\n        false,\r\n      );\r\n      context.stroke();\r\n    }\r\n    if (this.text_ !== '') {\r\n      const flatMidpoint = geometry.getFlatMidpoint();\r\n      this.drawText_(flatMidpoint, 0, 2, 2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\r\n   * and uses the current style.\r\n   *\r\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\r\n   */\r\n  drawMultiLineString(geometry) {\r\n    if (this.squaredTolerance_) {\r\n      geometry =\r\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\r\n          geometry.simplifyTransformed(\r\n            this.squaredTolerance_,\r\n            this.userTransform_,\r\n          )\r\n        );\r\n    }\r\n    const geometryExtent = geometry.getExtent();\r\n    if (!intersects(this.extent_, geometryExtent)) {\r\n      return;\r\n    }\r\n    if (this.strokeState_) {\r\n      this.setContextStrokeState_(this.strokeState_);\r\n      const context = this.context_;\r\n      const flatCoordinates = geometry.getFlatCoordinates();\r\n      let offset = 0;\r\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\r\n      const stride = geometry.getStride();\r\n      context.beginPath();\r\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n        offset = this.moveToLineTo_(\r\n          flatCoordinates,\r\n          offset,\r\n          ends[i],\r\n          stride,\r\n          false,\r\n        );\r\n      }\r\n      context.stroke();\r\n    }\r\n    if (this.text_ !== '') {\r\n      const flatMidpoints = geometry.getFlatMidpoints();\r\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\r\n   * the current style.\r\n   *\r\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\r\n   */\r\n  drawPolygon(geometry) {\r\n    if (this.squaredTolerance_) {\r\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\r\n        geometry.simplifyTransformed(\r\n          this.squaredTolerance_,\r\n          this.userTransform_,\r\n        )\r\n      );\r\n    }\r\n    if (!intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    if (this.strokeState_ || this.fillState_) {\r\n      if (this.fillState_) {\r\n        this.setContextFillState_(this.fillState_);\r\n      }\r\n      if (this.strokeState_) {\r\n        this.setContextStrokeState_(this.strokeState_);\r\n      }\r\n      const context = this.context_;\r\n      context.beginPath();\r\n      this.drawRings_(\r\n        geometry.getOrientedFlatCoordinates(),\r\n        0,\r\n        /** @type {Array<number>} */ (geometry.getEnds()),\r\n        geometry.getStride(),\r\n      );\r\n      if (this.fillState_) {\r\n        context.fill();\r\n      }\r\n      if (this.strokeState_) {\r\n        context.stroke();\r\n      }\r\n    }\r\n    if (this.text_ !== '') {\r\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\r\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\r\n   * uses the current style.\r\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\r\n   */\r\n  drawMultiPolygon(geometry) {\r\n    if (this.squaredTolerance_) {\r\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\r\n        geometry.simplifyTransformed(\r\n          this.squaredTolerance_,\r\n          this.userTransform_,\r\n        )\r\n      );\r\n    }\r\n    if (!intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    if (this.strokeState_ || this.fillState_) {\r\n      if (this.fillState_) {\r\n        this.setContextFillState_(this.fillState_);\r\n      }\r\n      if (this.strokeState_) {\r\n        this.setContextStrokeState_(this.strokeState_);\r\n      }\r\n      const context = this.context_;\r\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\r\n      let offset = 0;\r\n      const endss = geometry.getEndss();\r\n      const stride = geometry.getStride();\r\n      context.beginPath();\r\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n        const ends = endss[i];\r\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\r\n      }\r\n      if (this.fillState_) {\r\n        context.fill();\r\n      }\r\n      if (this.strokeState_) {\r\n        context.stroke();\r\n      }\r\n    }\r\n    if (this.text_ !== '') {\r\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\r\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\r\n   * @private\r\n   */\r\n  setContextFillState_(fillState) {\r\n    const context = this.context_;\r\n    const contextFillState = this.contextFillState_;\r\n    if (!contextFillState) {\r\n      context.fillStyle = fillState.fillStyle;\r\n      this.contextFillState_ = {\r\n        fillStyle: fillState.fillStyle,\r\n      };\r\n    } else {\r\n      if (contextFillState.fillStyle != fillState.fillStyle) {\r\n        contextFillState.fillStyle = fillState.fillStyle;\r\n        context.fillStyle = fillState.fillStyle;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\r\n   * @private\r\n   */\r\n  setContextStrokeState_(strokeState) {\r\n    const context = this.context_;\r\n    const contextStrokeState = this.contextStrokeState_;\r\n    if (!contextStrokeState) {\r\n      context.lineCap = strokeState.lineCap;\r\n      context.setLineDash(strokeState.lineDash);\r\n      context.lineDashOffset = strokeState.lineDashOffset;\r\n      context.lineJoin = strokeState.lineJoin;\r\n      context.lineWidth = strokeState.lineWidth;\r\n      context.miterLimit = strokeState.miterLimit;\r\n      context.strokeStyle = strokeState.strokeStyle;\r\n      this.contextStrokeState_ = {\r\n        lineCap: strokeState.lineCap,\r\n        lineDash: strokeState.lineDash,\r\n        lineDashOffset: strokeState.lineDashOffset,\r\n        lineJoin: strokeState.lineJoin,\r\n        lineWidth: strokeState.lineWidth,\r\n        miterLimit: strokeState.miterLimit,\r\n        strokeStyle: strokeState.strokeStyle,\r\n      };\r\n    } else {\r\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\r\n        contextStrokeState.lineCap = strokeState.lineCap;\r\n        context.lineCap = strokeState.lineCap;\r\n      }\r\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\r\n        context.setLineDash(\r\n          (contextStrokeState.lineDash = strokeState.lineDash),\r\n        );\r\n      }\r\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\r\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\r\n        context.lineDashOffset = strokeState.lineDashOffset;\r\n      }\r\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\r\n        contextStrokeState.lineJoin = strokeState.lineJoin;\r\n        context.lineJoin = strokeState.lineJoin;\r\n      }\r\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\r\n        contextStrokeState.lineWidth = strokeState.lineWidth;\r\n        context.lineWidth = strokeState.lineWidth;\r\n      }\r\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\r\n        contextStrokeState.miterLimit = strokeState.miterLimit;\r\n        context.miterLimit = strokeState.miterLimit;\r\n      }\r\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\r\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\r\n        context.strokeStyle = strokeState.strokeStyle;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\r\n   * @private\r\n   */\r\n  setContextTextState_(textState) {\r\n    const context = this.context_;\r\n    const contextTextState = this.contextTextState_;\r\n    const textAlign = textState.textAlign\r\n      ? textState.textAlign\r\n      : defaultTextAlign;\r\n    if (!contextTextState) {\r\n      context.font = textState.font;\r\n      context.textAlign = textAlign;\r\n      context.textBaseline = textState.textBaseline;\r\n      this.contextTextState_ = {\r\n        font: textState.font,\r\n        textAlign: textAlign,\r\n        textBaseline: textState.textBaseline,\r\n      };\r\n    } else {\r\n      if (contextTextState.font != textState.font) {\r\n        contextTextState.font = textState.font;\r\n        context.font = textState.font;\r\n      }\r\n      if (contextTextState.textAlign != textAlign) {\r\n        contextTextState.textAlign = textAlign;\r\n        context.textAlign = textAlign;\r\n      }\r\n      if (contextTextState.textBaseline != textState.textBaseline) {\r\n        contextTextState.textBaseline = textState.textBaseline;\r\n        context.textBaseline = textState.textBaseline;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the fill and stroke style for subsequent draw operations.  To clear\r\n   * either fill or stroke styles, pass null for the appropriate parameter.\r\n   *\r\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\r\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\r\n   */\r\n  setFillStrokeStyle(fillStyle, strokeStyle) {\r\n    if (!fillStyle) {\r\n      this.fillState_ = null;\r\n    } else {\r\n      const fillStyleColor = fillStyle.getColor();\r\n      this.fillState_ = {\r\n        fillStyle: asColorLike(\r\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\r\n        ),\r\n      };\r\n    }\r\n    if (!strokeStyle) {\r\n      this.strokeState_ = null;\r\n    } else {\r\n      const strokeStyleColor = strokeStyle.getColor();\r\n      const strokeStyleLineCap = strokeStyle.getLineCap();\r\n      const strokeStyleLineDash = strokeStyle.getLineDash();\r\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\r\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\r\n      const strokeStyleWidth = strokeStyle.getWidth();\r\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\r\n      const lineDash = strokeStyleLineDash\r\n        ? strokeStyleLineDash\r\n        : defaultLineDash;\r\n      this.strokeState_ = {\r\n        lineCap:\r\n          strokeStyleLineCap !== undefined\r\n            ? strokeStyleLineCap\r\n            : defaultLineCap,\r\n        lineDash:\r\n          this.pixelRatio_ === 1\r\n            ? lineDash\r\n            : lineDash.map((n) => n * this.pixelRatio_),\r\n        lineDashOffset:\r\n          (strokeStyleLineDashOffset\r\n            ? strokeStyleLineDashOffset\r\n            : defaultLineDashOffset) * this.pixelRatio_,\r\n        lineJoin:\r\n          strokeStyleLineJoin !== undefined\r\n            ? strokeStyleLineJoin\r\n            : defaultLineJoin,\r\n        lineWidth:\r\n          (strokeStyleWidth !== undefined\r\n            ? strokeStyleWidth\r\n            : defaultLineWidth) * this.pixelRatio_,\r\n        miterLimit:\r\n          strokeStyleMiterLimit !== undefined\r\n            ? strokeStyleMiterLimit\r\n            : defaultMiterLimit,\r\n        strokeStyle: asColorLike(\r\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\r\n        ),\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the image style for subsequent draw operations.  Pass null to remove\r\n   * the image style.\r\n   *\r\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\r\n   */\r\n  setImageStyle(imageStyle) {\r\n    let imageSize;\r\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\r\n      this.image_ = null;\r\n      return;\r\n    }\r\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\r\n    const imageAnchor = imageStyle.getAnchor();\r\n    const imageOrigin = imageStyle.getOrigin();\r\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\r\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\r\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\r\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\r\n    this.imageOpacity_ = imageStyle.getOpacity();\r\n    this.imageOriginX_ = imageOrigin[0];\r\n    this.imageOriginY_ = imageOrigin[1];\r\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\r\n    this.imageRotation_ = imageStyle.getRotation();\r\n    const imageScale = imageStyle.getScaleArray();\r\n    this.imageScale_ = [\r\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\r\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\r\n    ];\r\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\r\n  }\r\n\r\n  /**\r\n   * Set the text style for subsequent draw operations.  Pass null to\r\n   * remove the text style.\r\n   *\r\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\r\n   */\r\n  setTextStyle(textStyle) {\r\n    if (!textStyle) {\r\n      this.text_ = '';\r\n    } else {\r\n      const textFillStyle = textStyle.getFill();\r\n      if (!textFillStyle) {\r\n        this.textFillState_ = null;\r\n      } else {\r\n        const textFillStyleColor = textFillStyle.getColor();\r\n        this.textFillState_ = {\r\n          fillStyle: asColorLike(\r\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\r\n          ),\r\n        };\r\n      }\r\n      const textStrokeStyle = textStyle.getStroke();\r\n      if (!textStrokeStyle) {\r\n        this.textStrokeState_ = null;\r\n      } else {\r\n        const textStrokeStyleColor = textStrokeStyle.getColor();\r\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\r\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\r\n        const textStrokeStyleLineDashOffset =\r\n          textStrokeStyle.getLineDashOffset();\r\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\r\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\r\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\r\n        this.textStrokeState_ = {\r\n          lineCap:\r\n            textStrokeStyleLineCap !== undefined\r\n              ? textStrokeStyleLineCap\r\n              : defaultLineCap,\r\n          lineDash: textStrokeStyleLineDash\r\n            ? textStrokeStyleLineDash\r\n            : defaultLineDash,\r\n          lineDashOffset: textStrokeStyleLineDashOffset\r\n            ? textStrokeStyleLineDashOffset\r\n            : defaultLineDashOffset,\r\n          lineJoin:\r\n            textStrokeStyleLineJoin !== undefined\r\n              ? textStrokeStyleLineJoin\r\n              : defaultLineJoin,\r\n          lineWidth:\r\n            textStrokeStyleWidth !== undefined\r\n              ? textStrokeStyleWidth\r\n              : defaultLineWidth,\r\n          miterLimit:\r\n            textStrokeStyleMiterLimit !== undefined\r\n              ? textStrokeStyleMiterLimit\r\n              : defaultMiterLimit,\r\n          strokeStyle: asColorLike(\r\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\r\n          ),\r\n        };\r\n      }\r\n      const textFont = textStyle.getFont();\r\n      const textOffsetX = textStyle.getOffsetX();\r\n      const textOffsetY = textStyle.getOffsetY();\r\n      const textRotateWithView = textStyle.getRotateWithView();\r\n      const textRotation = textStyle.getRotation();\r\n      const textScale = textStyle.getScaleArray();\r\n      const textText = textStyle.getText();\r\n      const textTextAlign = textStyle.getTextAlign();\r\n      const textTextBaseline = textStyle.getTextBaseline();\r\n      this.textState_ = {\r\n        font: textFont !== undefined ? textFont : defaultFont,\r\n        textAlign:\r\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\r\n        textBaseline:\r\n          textTextBaseline !== undefined\r\n            ? textTextBaseline\r\n            : defaultTextBaseline,\r\n      };\r\n      this.text_ =\r\n        textText !== undefined\r\n          ? Array.isArray(textText)\r\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\r\n            : textText\r\n          : '';\r\n      this.textOffsetX_ =\r\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\r\n      this.textOffsetY_ =\r\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\r\n      this.textRotateWithView_ =\r\n        textRotateWithView !== undefined ? textRotateWithView : false;\r\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\r\n      this.textScale_ = [\r\n        this.pixelRatio_ * textScale[0],\r\n        this.pixelRatio_ * textScale[1],\r\n      ];\r\n    }\r\n  }\r\n}\r\n\r\nexport default CanvasImmediateRenderer;\r\n", "/**\r\n * @module ol/render/canvas/hitdetect\r\n */\r\n\r\nimport CanvasImmediateRenderer from './Immediate.js';\r\nimport {Icon} from '../../style.js';\r\nimport {ascending} from '../../array.js';\r\nimport {clamp} from '../../math.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport {\r\n  getTransformFromProjections,\r\n  getUserProjection,\r\n  toUserExtent,\r\n} from '../../proj.js';\r\nimport {intersects} from '../../extent.js';\r\n\r\nexport const HIT_DETECT_RESOLUTION = 0.5;\r\n\r\n/**\r\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\r\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\r\n * for rendering features to all worlds of the viewport, from coordinates to css\r\n * pixels.\r\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\r\n * Features to consider for hit detection.\r\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\r\n * Layer style function.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\r\n * @param {number} resolution Resolution.\r\n * @param {number} rotation Rotation.\r\n * @param {number} [squaredTolerance] Squared tolerance.\r\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\r\n * @return {ImageData} Hit detection image data.\r\n */\r\nexport function createHitDetectionImageData(\r\n  size,\r\n  transforms,\r\n  features,\r\n  styleFunction,\r\n  extent,\r\n  resolution,\r\n  rotation,\r\n  squaredTolerance,\r\n  projection,\r\n) {\r\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\r\n  const width = size[0] * HIT_DETECT_RESOLUTION;\r\n  const height = size[1] * HIT_DETECT_RESOLUTION;\r\n  const context = createCanvasContext2D(width, height);\r\n  context.imageSmoothingEnabled = false;\r\n  const canvas = context.canvas;\r\n  const renderer = new CanvasImmediateRenderer(\r\n    context,\r\n    HIT_DETECT_RESOLUTION,\r\n    extent,\r\n    null,\r\n    rotation,\r\n    squaredTolerance,\r\n    projection\r\n      ? getTransformFromProjections(getUserProjection(), projection)\r\n      : null,\r\n  );\r\n  const featureCount = features.length;\r\n  // Stretch hit detection index to use the whole available color range\r\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\r\n  const featuresByZIndex = {};\r\n  for (let i = 1; i <= featureCount; ++i) {\r\n    const feature = features[i - 1];\r\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\r\n    if (!featureStyleFunction) {\r\n      continue;\r\n    }\r\n    let styles = featureStyleFunction(feature, resolution);\r\n    if (!styles) {\r\n      continue;\r\n    }\r\n    if (!Array.isArray(styles)) {\r\n      styles = [styles];\r\n    }\r\n    const index = i * indexFactor;\r\n    const color = index.toString(16).padStart(7, '#00000');\r\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\r\n      const originalStyle = styles[j];\r\n      const geometry = originalStyle.getGeometryFunction()(feature);\r\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\r\n        continue;\r\n      }\r\n      const style = originalStyle.clone();\r\n      const fill = style.getFill();\r\n      if (fill) {\r\n        fill.setColor(color);\r\n      }\r\n      const stroke = style.getStroke();\r\n      if (stroke) {\r\n        stroke.setColor(color);\r\n        stroke.setLineDash(null);\r\n      }\r\n      style.setText(undefined);\r\n      const image = originalStyle.getImage();\r\n      if (image) {\r\n        const imgSize = image.getImageSize();\r\n        if (!imgSize) {\r\n          continue;\r\n        }\r\n\r\n        const imgContext = createCanvasContext2D(\r\n          imgSize[0],\r\n          imgSize[1],\r\n          undefined,\r\n          {alpha: false},\r\n        );\r\n        const img = imgContext.canvas;\r\n        imgContext.fillStyle = color;\r\n        imgContext.fillRect(0, 0, img.width, img.height);\r\n        style.setImage(\r\n          new Icon({\r\n            img: img,\r\n            anchor: image.getAnchor(),\r\n            anchorXUnits: 'pixels',\r\n            anchorYUnits: 'pixels',\r\n            offset: image.getOrigin(),\r\n            opacity: 1,\r\n            size: image.getSize(),\r\n            scale: image.getScale(),\r\n            rotation: image.getRotation(),\r\n            rotateWithView: image.getRotateWithView(),\r\n          }),\r\n        );\r\n      }\r\n      const zIndex = style.getZIndex() || 0;\r\n      let byGeometryType = featuresByZIndex[zIndex];\r\n      if (!byGeometryType) {\r\n        byGeometryType = {};\r\n        featuresByZIndex[zIndex] = byGeometryType;\r\n        byGeometryType['Polygon'] = [];\r\n        byGeometryType['Circle'] = [];\r\n        byGeometryType['LineString'] = [];\r\n        byGeometryType['Point'] = [];\r\n      }\r\n      const type = geometry.getType();\r\n      if (type === 'GeometryCollection') {\r\n        const geometries =\r\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\r\n            geometry\r\n          ).getGeometriesArrayRecursive();\r\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n          const geometry = geometries[i];\r\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\r\n            geometry,\r\n            style,\r\n          );\r\n        }\r\n      } else {\r\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\r\n      }\r\n    }\r\n  }\r\n\r\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\r\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\r\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\r\n    for (const type in byGeometryType) {\r\n      const geomAndStyle = byGeometryType[type];\r\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\r\n        renderer.setStyle(geomAndStyle[j + 1]);\r\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\r\n          renderer.setTransform(transforms[k]);\r\n          renderer.drawGeometry(geomAndStyle[j]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return context.getImageData(0, 0, canvas.width, canvas.height);\r\n}\r\n\r\n/**\r\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\r\n * detection canvas in css pixels.\r\n * @param {Array<F>} features Features. Has to\r\n * match the `features` array that was passed to `createHitDetectionImageData()`.\r\n * @param {ImageData} imageData Hit detection image data generated by\r\n * `createHitDetectionImageData()`.\r\n * @return {Array<F>} Features.\r\n * @template {import(\"../../Feature.js\").FeatureLike} F\r\n */\r\nexport function hitDetect(pixel, features, imageData) {\r\n  /** @type {Array<F>} */\r\n  const resultFeatures = [];\r\n  if (imageData) {\r\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\r\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\r\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\r\n    // for browsers returning coordinates slightly larger than the actual canvas size\r\n    // due to a non-integer pixel ratio.\r\n    const index =\r\n      (clamp(x, 0, imageData.width - 1) +\r\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\r\n      4;\r\n    const r = imageData.data[index];\r\n    const g = imageData.data[index + 1];\r\n    const b = imageData.data[index + 2];\r\n    const i = b + 256 * (g + 256 * r);\r\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\r\n    if (i && i % indexFactor === 0) {\r\n      resultFeatures.push(features[i / indexFactor - 1]);\r\n    }\r\n  }\r\n  return resultFeatures;\r\n}\r\n", "/**\r\n * @module ol/renderer/vector\r\n */\r\nimport ImageState from '../ImageState.js';\r\nimport {getUid} from '../util.js';\r\n\r\n/**\r\n * Feature callback. The callback will be called with three arguments. The first\r\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\r\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\r\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\r\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\r\n * @template T\r\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\r\n */\r\n\r\n/**\r\n * Tolerance for geometry simplification in device pixels.\r\n * @type {number}\r\n */\r\nconst SIMPLIFY_TOLERANCE = 0.5;\r\n\r\n/**\r\n * @const\r\n * @type {Object<import(\"../geom/Geometry.js\").Type,\r\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\r\n *                         import(\"../style/Style.js\").default, Object): void>}\r\n */\r\nconst GEOMETRY_RENDERERS = {\r\n  'Point': renderPointGeometry,\r\n  'LineString': renderLineStringGeometry,\r\n  'Polygon': renderPolygonGeometry,\r\n  'MultiPoint': renderMultiPointGeometry,\r\n  'MultiLineString': renderMultiLineStringGeometry,\r\n  'MultiPolygon': renderMultiPolygonGeometry,\r\n  'GeometryCollection': renderGeometryCollectionGeometry,\r\n  'Circle': renderCircleGeometry,\r\n};\r\n\r\n/**\r\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\r\n * @return {number} Order.\r\n */\r\nexport function defaultOrder(feature1, feature2) {\r\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\r\n}\r\n\r\n/**\r\n * @param {number} resolution Resolution.\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @return {number} Squared pixel tolerance.\r\n */\r\nexport function getSquaredTolerance(resolution, pixelRatio) {\r\n  const tolerance = getTolerance(resolution, pixelRatio);\r\n  return tolerance * tolerance;\r\n}\r\n\r\n/**\r\n * @param {number} resolution Resolution.\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @return {number} Pixel tolerance.\r\n */\r\nexport function getTolerance(resolution, pixelRatio) {\r\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\r\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n * @param {number} [index] Render order index.\r\n */\r\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\r\n  const fillStyle = style.getFill();\r\n  const strokeStyle = style.getStroke();\r\n  if (fillStyle || strokeStyle) {\r\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\r\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\r\n    circleReplay.drawCircle(geometry, feature, index);\r\n  }\r\n  const textStyle = style.getText();\r\n  if (textStyle && textStyle.getText()) {\r\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\r\n    textReplay.setTextStyle(textStyle);\r\n    textReplay.drawText(geometry, feature);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\r\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\r\n * @param {boolean} [declutter] Enable decluttering.\r\n * @param {number} [index] Render order index..\r\n * @return {boolean} `true` if style is loading.\r\n */\r\nexport function renderFeature(\r\n  replayGroup,\r\n  feature,\r\n  style,\r\n  squaredTolerance,\r\n  listener,\r\n  transform,\r\n  declutter,\r\n  index,\r\n) {\r\n  const loadingPromises = [];\r\n  const imageStyle = style.getImage();\r\n  if (imageStyle) {\r\n    let loading = true;\r\n    const imageState = imageStyle.getImageState();\r\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\r\n      loading = false;\r\n    } else {\r\n      if (imageState == ImageState.IDLE) {\r\n        imageStyle.load();\r\n      }\r\n    }\r\n    if (loading) {\r\n      loadingPromises.push(imageStyle.ready());\r\n    }\r\n  }\r\n  const fillStyle = style.getFill();\r\n  if (fillStyle && fillStyle.loading()) {\r\n    loadingPromises.push(fillStyle.ready());\r\n  }\r\n  const loading = loadingPromises.length > 0;\r\n  if (loading) {\r\n    Promise.all(loadingPromises).then(() => listener(null));\r\n  }\r\n  renderFeatureInternal(\r\n    replayGroup,\r\n    feature,\r\n    style,\r\n    squaredTolerance,\r\n    transform,\r\n    declutter,\r\n    index,\r\n  );\r\n\r\n  return loading;\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\r\n * @param {boolean} [declutter] Enable decluttering.\r\n * @param {number} [index] Render order index..\r\n */\r\nfunction renderFeatureInternal(\r\n  replayGroup,\r\n  feature,\r\n  style,\r\n  squaredTolerance,\r\n  transform,\r\n  declutter,\r\n  index,\r\n) {\r\n  const geometry = style.getGeometryFunction()(feature);\r\n  if (!geometry) {\r\n    return;\r\n  }\r\n  const simplifiedGeometry = geometry.simplifyTransformed(\r\n    squaredTolerance,\r\n    transform,\r\n  );\r\n  const renderer = style.getRenderer();\r\n  if (renderer) {\r\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\r\n  } else {\r\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\r\n    geometryRenderer(\r\n      replayGroup,\r\n      simplifiedGeometry,\r\n      style,\r\n      feature,\r\n      index,\r\n      declutter,\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {number} [index] Render order index.\r\n */\r\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\r\n  if (geometry.getType() == 'GeometryCollection') {\r\n    const geometries =\r\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\r\n        geometry\r\n      ).getGeometries();\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\r\n    }\r\n    return;\r\n  }\r\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\r\n  replay.drawCustom(\r\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\r\n    feature,\r\n    style.getRenderer(),\r\n    style.getHitDetectionRenderer(),\r\n    index,\r\n  );\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\r\n * @param {number} [index] Render order index.\r\n */\r\nfunction renderGeometryCollectionGeometry(\r\n  replayGroup,\r\n  geometry,\r\n  style,\r\n  feature,\r\n  declutterBuilderGroup,\r\n  index,\r\n) {\r\n  const geometries = geometry.getGeometriesArray();\r\n  let i, ii;\r\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\r\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\r\n    geometryRenderer(\r\n      replayGroup,\r\n      geometries[i],\r\n      style,\r\n      feature,\r\n      declutterBuilderGroup,\r\n      index,\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {number} [index] Render order index.\r\n */\r\nfunction renderLineStringGeometry(\r\n  builderGroup,\r\n  geometry,\r\n  style,\r\n  feature,\r\n  index,\r\n) {\r\n  const strokeStyle = style.getStroke();\r\n  if (strokeStyle) {\r\n    const lineStringReplay = builderGroup.getBuilder(\r\n      style.getZIndex(),\r\n      'LineString',\r\n    );\r\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\r\n    lineStringReplay.drawLineString(geometry, feature, index);\r\n  }\r\n  const textStyle = style.getText();\r\n  if (textStyle && textStyle.getText()) {\r\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\r\n    textReplay.setTextStyle(textStyle);\r\n    textReplay.drawText(geometry, feature, index);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {number} [index] Render order index.\r\n */\r\nfunction renderMultiLineStringGeometry(\r\n  builderGroup,\r\n  geometry,\r\n  style,\r\n  feature,\r\n  index,\r\n) {\r\n  const strokeStyle = style.getStroke();\r\n  if (strokeStyle) {\r\n    const lineStringReplay = builderGroup.getBuilder(\r\n      style.getZIndex(),\r\n      'LineString',\r\n    );\r\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\r\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\r\n  }\r\n  const textStyle = style.getText();\r\n  if (textStyle && textStyle.getText()) {\r\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\r\n    textReplay.setTextStyle(textStyle);\r\n    textReplay.drawText(geometry, feature, index);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n * @param {number} [index] Render order index.\r\n */\r\nfunction renderMultiPolygonGeometry(\r\n  builderGroup,\r\n  geometry,\r\n  style,\r\n  feature,\r\n  index,\r\n) {\r\n  const fillStyle = style.getFill();\r\n  const strokeStyle = style.getStroke();\r\n  if (strokeStyle || fillStyle) {\r\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\r\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\r\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\r\n  }\r\n  const textStyle = style.getText();\r\n  if (textStyle && textStyle.getText()) {\r\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\r\n    textReplay.setTextStyle(textStyle);\r\n    textReplay.drawText(geometry, feature, index);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {number} [index] Render order index.\r\n * @param {boolean} [declutter] Enable decluttering.\r\n */\r\nfunction renderPointGeometry(\r\n  builderGroup,\r\n  geometry,\r\n  style,\r\n  feature,\r\n  index,\r\n  declutter,\r\n) {\r\n  const imageStyle = style.getImage();\r\n  const textStyle = style.getText();\r\n  const hasText = textStyle && textStyle.getText();\r\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\r\n  const declutterImageWithText =\r\n    declutter && imageStyle && hasText ? {} : undefined;\r\n  if (imageStyle) {\r\n    if (imageStyle.getImageState() != ImageState.LOADED) {\r\n      return;\r\n    }\r\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\r\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\r\n    imageReplay.drawPoint(geometry, feature, index);\r\n  }\r\n  if (hasText) {\r\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\r\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\r\n    textReplay.drawText(geometry, feature, index);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {number} [index] Render order index.\r\n * @param {boolean} [declutter] Enable decluttering.\r\n */\r\nfunction renderMultiPointGeometry(\r\n  builderGroup,\r\n  geometry,\r\n  style,\r\n  feature,\r\n  index,\r\n  declutter,\r\n) {\r\n  const imageStyle = style.getImage();\r\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\r\n  const textStyle = style.getText();\r\n  const hasText = textStyle && textStyle.getText();\r\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\r\n  const declutterImageWithText =\r\n    declutter && hasImage && hasText ? {} : undefined;\r\n  if (hasImage) {\r\n    if (imageStyle.getImageState() != ImageState.LOADED) {\r\n      return;\r\n    }\r\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\r\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\r\n    imageReplay.drawMultiPoint(geometry, feature, index);\r\n  }\r\n  if (hasText) {\r\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\r\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\r\n    textReplay.drawText(geometry, feature, index);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {number} [index] Render order index.\r\n */\r\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\r\n  const fillStyle = style.getFill();\r\n  const strokeStyle = style.getStroke();\r\n  if (fillStyle || strokeStyle) {\r\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\r\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\r\n    polygonReplay.drawPolygon(geometry, feature, index);\r\n  }\r\n  const textStyle = style.getText();\r\n  if (textStyle && textStyle.getText()) {\r\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\r\n    textReplay.setTextStyle(textStyle);\r\n    textReplay.drawText(geometry, feature, index);\r\n  }\r\n}\r\n", "/**\r\n * @module ol/renderer/canvas/VectorLayer\r\n */\r\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\r\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\r\nimport ExecutorGroup, {\r\n  ALL,\r\n  DECLUTTER,\r\n  NON_DECLUTTER,\r\n} from '../../render/canvas/ExecutorGroup.js';\r\nimport RenderEventType from '../../render/EventType.js';\r\nimport ViewHint from '../../ViewHint.js';\r\nimport {\r\n  HIT_DETECT_RESOLUTION,\r\n  createHitDetectionImageData,\r\n  hitDetect,\r\n} from '../../render/canvas/hitdetect.js';\r\nimport {\r\n  apply,\r\n  compose as composeTransform,\r\n  makeInverse,\r\n  toString as transformToString,\r\n} from '../../transform.js';\r\nimport {\r\n  buffer,\r\n  containsExtent,\r\n  createEmpty,\r\n  getHeight,\r\n  getWidth,\r\n  intersects as intersectsExtent,\r\n  wrapX as wrapExtentX,\r\n} from '../../extent.js';\r\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\r\nimport {\r\n  defaultOrder as defaultRenderOrder,\r\n  getTolerance as getRenderTolerance,\r\n  getSquaredTolerance as getSquaredRenderTolerance,\r\n  renderFeature,\r\n} from '../vector.js';\r\nimport {equals} from '../../array.js';\r\nimport {\r\n  fromUserExtent,\r\n  getTransformFromProjections,\r\n  getUserProjection,\r\n  toUserExtent,\r\n  toUserResolution,\r\n} from '../../proj.js';\r\nimport {getUid} from '../../util.js';\r\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\r\n\r\n/**\r\n * @classdesc\r\n * Canvas renderer for vector layers.\r\n * @api\r\n */\r\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\r\n  /**\r\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\r\n   */\r\n  constructor(vectorLayer) {\r\n    super(vectorLayer);\r\n\r\n    /** @private */\r\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.animatingOrInteracting_;\r\n\r\n    /**\r\n     * @type {ImageData|null}\r\n     */\r\n    this.hitDetectionImageData_ = null;\r\n\r\n    /**\r\n     * @type {Array<import(\"../../Feature.js\").default>}\r\n     */\r\n    this.renderedFeatures_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.renderedRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.renderedResolution_ = NaN;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.renderedExtent_ = createEmpty();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.wrappedRenderedExtent_ = createEmpty();\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.renderedRotation_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../coordinate\").Coordinate}\r\n     */\r\n    this.renderedCenter_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../proj/Projection\").default}\r\n     */\r\n    this.renderedProjection_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.renderedPixelRatio_ = 1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\r\n     */\r\n    this.renderedRenderOrder_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\r\n     */\r\n    this.replayGroup_ = null;\r\n\r\n    /**\r\n     * A new replay group had to be created by `prepareFrame()`\r\n     * @type {boolean}\r\n     */\r\n    this.replayGroupChanged = true;\r\n\r\n    /**\r\n     * Clipping to be performed by `renderFrame()`\r\n     * @type {boolean}\r\n     */\r\n    this.clipping = true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.targetContext_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.opacity_ = 1;\r\n  }\r\n\r\n  /**\r\n   * @param {ExecutorGroup} executorGroup Executor group.\r\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\r\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\r\n   *     `false` to only render non-declutterable items, `undefined` to render all.\r\n   */\r\n  renderWorlds(executorGroup, frameState, declutterable) {\r\n    const extent = frameState.extent;\r\n    const viewState = frameState.viewState;\r\n    const center = viewState.center;\r\n    const resolution = viewState.resolution;\r\n    const projection = viewState.projection;\r\n    const rotation = viewState.rotation;\r\n    const projectionExtent = projection.getExtent();\r\n    const vectorSource = this.getLayer().getSource();\r\n    const declutter = this.getLayer().getDeclutter();\r\n    const pixelRatio = frameState.pixelRatio;\r\n    const viewHints = frameState.viewHints;\r\n    const snapToPixel = !(\r\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\r\n    );\r\n    const context = this.context;\r\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\r\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\r\n\r\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\r\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\r\n    const endWorld = multiWorld\r\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\r\n      : 1;\r\n    let world = multiWorld\r\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\r\n      : 0;\r\n    do {\r\n      const transform = this.getRenderTransform(\r\n        center,\r\n        resolution,\r\n        rotation,\r\n        pixelRatio,\r\n        width,\r\n        height,\r\n        world * worldWidth,\r\n      );\r\n      executorGroup.execute(\r\n        context,\r\n        [context.canvas.width, context.canvas.height],\r\n        transform,\r\n        rotation,\r\n        snapToPixel,\r\n        declutterable === undefined\r\n          ? ALL\r\n          : declutterable\r\n            ? DECLUTTER\r\n            : NON_DECLUTTER,\r\n        declutterable\r\n          ? declutter && frameState.declutter[declutter]\r\n          : undefined,\r\n      );\r\n    } while (++world < endWorld);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  setDrawContext_() {\r\n    if (this.opacity_ !== 1) {\r\n      this.targetContext_ = this.context;\r\n      this.context = createCanvasContext2D(\r\n        this.context.canvas.width,\r\n        this.context.canvas.height,\r\n        canvasPool,\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  resetDrawContext_() {\r\n    if (this.opacity_ !== 1) {\r\n      const alpha = this.targetContext_.globalAlpha;\r\n      this.targetContext_.globalAlpha = this.opacity_;\r\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\r\n      this.targetContext_.globalAlpha = alpha;\r\n      releaseCanvas(this.context);\r\n      canvasPool.push(this.context.canvas);\r\n      this.context = this.targetContext_;\r\n      this.targetContext_ = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render declutter items for this layer\r\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\r\n   */\r\n  renderDeclutter(frameState) {\r\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\r\n      return;\r\n    }\r\n    this.renderWorlds(this.replayGroup_, frameState, true);\r\n  }\r\n\r\n  /**\r\n   * Render deferred instructions.\r\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\r\n   */\r\n  renderDeferredInternal(frameState) {\r\n    if (!this.replayGroup_) {\r\n      return;\r\n    }\r\n    this.replayGroup_.renderDeferred();\r\n    this.resetDrawContext_();\r\n  }\r\n\r\n  /**\r\n   * Render the layer.\r\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\r\n   * @param {HTMLElement|null} target Target that may be used to render content to.\r\n   * @return {HTMLElement|null} The rendered element.\r\n   */\r\n  renderFrame(frameState, target) {\r\n    const pixelRatio = frameState.pixelRatio;\r\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\r\n    this.opacity_ = layerState.opacity;\r\n    const extent = frameState.extent;\r\n    const resolution = frameState.viewState.resolution;\r\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\r\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\r\n\r\n    // set forward and inverse pixel transforms\r\n    composeTransform(\r\n      this.pixelTransform,\r\n      frameState.size[0] / 2,\r\n      frameState.size[1] / 2,\r\n      1 / pixelRatio,\r\n      1 / pixelRatio,\r\n      0,\r\n      -width / 2,\r\n      -height / 2,\r\n    );\r\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\r\n\r\n    const canvasTransform = transformToString(this.pixelTransform);\r\n\r\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\r\n\r\n    const context = this.context;\r\n    const canvas = context.canvas;\r\n\r\n    const replayGroup = this.replayGroup_;\r\n    let render = replayGroup && !replayGroup.isEmpty();\r\n    if (!render) {\r\n      const hasRenderListeners =\r\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\r\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\r\n      if (!hasRenderListeners) {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    // resize and clear\r\n    if (canvas.width != width || canvas.height != height) {\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      if (canvas.style.transform !== canvasTransform) {\r\n        canvas.style.transform = canvasTransform;\r\n      }\r\n    } else if (!this.containerReused) {\r\n      context.clearRect(0, 0, width, height);\r\n    }\r\n\r\n    this.setDrawContext_();\r\n\r\n    this.preRender(context, frameState);\r\n\r\n    const viewState = frameState.viewState;\r\n    const projection = viewState.projection;\r\n\r\n    // clipped rendering if layer extent is set\r\n    let clipped = false;\r\n    if (render && layerState.extent && this.clipping) {\r\n      const layerExtent = fromUserExtent(layerState.extent, projection);\r\n      render = intersectsExtent(layerExtent, frameState.extent);\r\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\r\n      if (clipped) {\r\n        this.clipUnrotated(context, frameState, layerExtent);\r\n      }\r\n    }\r\n\r\n    if (render) {\r\n      this.renderWorlds(\r\n        replayGroup,\r\n        frameState,\r\n        this.getLayer().getDeclutter() ? false : undefined,\r\n      );\r\n    }\r\n\r\n    if (clipped) {\r\n      context.restore();\r\n    }\r\n\r\n    this.postRender(context, frameState);\r\n\r\n    if (this.renderedRotation_ !== viewState.rotation) {\r\n      this.renderedRotation_ = viewState.rotation;\r\n      this.hitDetectionImageData_ = null;\r\n    }\r\n    if (!frameState.declutter) {\r\n      this.resetDrawContext_();\r\n    }\r\n    return this.container;\r\n  }\r\n\r\n  /**\r\n   * Asynchronous layer level hit detection.\r\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\r\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\r\n   * that resolves with an array of features.\r\n   */\r\n  getFeatures(pixel) {\r\n    return new Promise((resolve) => {\r\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\r\n        const size = [this.context.canvas.width, this.context.canvas.height];\r\n        apply(this.pixelTransform, size);\r\n        const center = this.renderedCenter_;\r\n        const resolution = this.renderedResolution_;\r\n        const rotation = this.renderedRotation_;\r\n        const projection = this.renderedProjection_;\r\n        const extent = this.wrappedRenderedExtent_;\r\n        const layer = this.getLayer();\r\n        const transforms = [];\r\n        const width = size[0] * HIT_DETECT_RESOLUTION;\r\n        const height = size[1] * HIT_DETECT_RESOLUTION;\r\n        transforms.push(\r\n          this.getRenderTransform(\r\n            center,\r\n            resolution,\r\n            rotation,\r\n            HIT_DETECT_RESOLUTION,\r\n            width,\r\n            height,\r\n            0,\r\n          ).slice(),\r\n        );\r\n        const source = layer.getSource();\r\n        const projectionExtent = projection.getExtent();\r\n        if (\r\n          source.getWrapX() &&\r\n          projection.canWrapX() &&\r\n          !containsExtent(projectionExtent, extent)\r\n        ) {\r\n          let startX = extent[0];\r\n          const worldWidth = getWidth(projectionExtent);\r\n          let world = 0;\r\n          let offsetX;\r\n          while (startX < projectionExtent[0]) {\r\n            --world;\r\n            offsetX = worldWidth * world;\r\n            transforms.push(\r\n              this.getRenderTransform(\r\n                center,\r\n                resolution,\r\n                rotation,\r\n                HIT_DETECT_RESOLUTION,\r\n                width,\r\n                height,\r\n                offsetX,\r\n              ).slice(),\r\n            );\r\n            startX += worldWidth;\r\n          }\r\n          world = 0;\r\n          startX = extent[2];\r\n          while (startX > projectionExtent[2]) {\r\n            ++world;\r\n            offsetX = worldWidth * world;\r\n            transforms.push(\r\n              this.getRenderTransform(\r\n                center,\r\n                resolution,\r\n                rotation,\r\n                HIT_DETECT_RESOLUTION,\r\n                width,\r\n                height,\r\n                offsetX,\r\n              ).slice(),\r\n            );\r\n            startX -= worldWidth;\r\n          }\r\n        }\r\n        const userProjection = getUserProjection();\r\n        this.hitDetectionImageData_ = createHitDetectionImageData(\r\n          size,\r\n          transforms,\r\n          this.renderedFeatures_,\r\n          layer.getStyleFunction(),\r\n          extent,\r\n          resolution,\r\n          rotation,\r\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\r\n          userProjection ? projection : null,\r\n        );\r\n      }\r\n      resolve(\r\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\r\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  forEachFeatureAtCoordinate(\r\n    coordinate,\r\n    frameState,\r\n    hitTolerance,\r\n    callback,\r\n    matches,\r\n  ) {\r\n    if (!this.replayGroup_) {\r\n      return undefined;\r\n    }\r\n    const resolution = frameState.viewState.resolution;\r\n    const rotation = frameState.viewState.rotation;\r\n    const layer = this.getLayer();\r\n\r\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\r\n    const features = {};\r\n\r\n    /**\r\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n     * @param {number} distanceSq The squared distance to the click position\r\n     * @return {T|undefined} Callback result.\r\n     */\r\n    const featureCallback = function (feature, geometry, distanceSq) {\r\n      const key = getUid(feature);\r\n      const match = features[key];\r\n      if (!match) {\r\n        if (distanceSq === 0) {\r\n          features[key] = true;\r\n          return callback(feature, layer, geometry);\r\n        }\r\n        matches.push(\r\n          (features[key] = {\r\n            feature: feature,\r\n            layer: layer,\r\n            geometry: geometry,\r\n            distanceSq: distanceSq,\r\n            callback: callback,\r\n          }),\r\n        );\r\n      } else if (match !== true && distanceSq < match.distanceSq) {\r\n        if (distanceSq === 0) {\r\n          features[key] = true;\r\n          matches.splice(matches.lastIndexOf(match), 1);\r\n          return callback(feature, layer, geometry);\r\n        }\r\n        match.geometry = geometry;\r\n        match.distanceSq = distanceSq;\r\n      }\r\n      return undefined;\r\n    };\r\n\r\n    let result;\r\n    const executorGroups = [this.replayGroup_];\r\n    const declutter = this.getLayer().getDeclutter();\r\n    executorGroups.some((executorGroup) => {\r\n      return (result = executorGroup.forEachFeatureAtCoordinate(\r\n        coordinate,\r\n        resolution,\r\n        rotation,\r\n        hitTolerance,\r\n        featureCallback,\r\n        declutter && frameState.declutter[declutter]\r\n          ? frameState.declutter[declutter].all().map((item) => item.value)\r\n          : null,\r\n      ));\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Perform action necessary to get the layer rendered after new fonts have loaded\r\n   */\r\n  handleFontsChanged() {\r\n    const layer = this.getLayer();\r\n    if (layer.getVisible() && this.replayGroup_) {\r\n      layer.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle changes in image style state.\r\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\r\n   * @private\r\n   */\r\n  handleStyleImageChange_(event) {\r\n    this.renderIfReadyAndVisible();\r\n  }\r\n\r\n  /**\r\n   * Determine whether render should be called.\r\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\r\n   * @return {boolean} Layer is ready to be rendered.\r\n   */\r\n  prepareFrame(frameState) {\r\n    const vectorLayer = this.getLayer();\r\n    const vectorSource = vectorLayer.getSource();\r\n    if (!vectorSource) {\r\n      return false;\r\n    }\r\n\r\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\r\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\r\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\r\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\r\n\r\n    if (\r\n      (this.ready && !updateWhileAnimating && animating) ||\r\n      (!updateWhileInteracting && interacting)\r\n    ) {\r\n      this.animatingOrInteracting_ = true;\r\n      return true;\r\n    }\r\n    this.animatingOrInteracting_ = false;\r\n\r\n    const frameStateExtent = frameState.extent;\r\n    const viewState = frameState.viewState;\r\n    const projection = viewState.projection;\r\n    const resolution = viewState.resolution;\r\n    const pixelRatio = frameState.pixelRatio;\r\n    const vectorLayerRevision = vectorLayer.getRevision();\r\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\r\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\r\n\r\n    if (vectorLayerRenderOrder === undefined) {\r\n      vectorLayerRenderOrder = defaultRenderOrder;\r\n    }\r\n\r\n    const center = viewState.center.slice();\r\n    const extent = buffer(\r\n      frameStateExtent,\r\n      vectorLayerRenderBuffer * resolution,\r\n    );\r\n    const renderedExtent = extent.slice();\r\n    const loadExtents = [extent.slice()];\r\n    const projectionExtent = projection.getExtent();\r\n\r\n    if (\r\n      vectorSource.getWrapX() &&\r\n      projection.canWrapX() &&\r\n      !containsExtent(projectionExtent, frameState.extent)\r\n    ) {\r\n      // For the replay group, we need an extent that intersects the real world\r\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\r\n      // to +540°, we add at least 1 world width on each side of the projection\r\n      // extent. If the viewport is wider than the world, we need to add half of\r\n      // the viewport width to make sure we cover the whole viewport.\r\n      const worldWidth = getWidth(projectionExtent);\r\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\r\n      extent[0] = projectionExtent[0] - gutter;\r\n      extent[2] = projectionExtent[2] + gutter;\r\n      wrapCoordinateX(center, projection);\r\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\r\n      // If the extent crosses the date line, we load data for both edges of the worlds\r\n      if (\r\n        loadExtent[0] < projectionExtent[0] &&\r\n        loadExtent[2] < projectionExtent[2]\r\n      ) {\r\n        loadExtents.push([\r\n          loadExtent[0] + worldWidth,\r\n          loadExtent[1],\r\n          loadExtent[2] + worldWidth,\r\n          loadExtent[3],\r\n        ]);\r\n      } else if (\r\n        loadExtent[0] > projectionExtent[0] &&\r\n        loadExtent[2] > projectionExtent[2]\r\n      ) {\r\n        loadExtents.push([\r\n          loadExtent[0] - worldWidth,\r\n          loadExtent[1],\r\n          loadExtent[2] - worldWidth,\r\n          loadExtent[3],\r\n        ]);\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.ready &&\r\n      this.renderedResolution_ == resolution &&\r\n      this.renderedRevision_ == vectorLayerRevision &&\r\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\r\n      containsExtent(this.wrappedRenderedExtent_, extent)\r\n    ) {\r\n      if (!equals(this.renderedExtent_, renderedExtent)) {\r\n        this.hitDetectionImageData_ = null;\r\n        this.renderedExtent_ = renderedExtent;\r\n      }\r\n      this.renderedCenter_ = center;\r\n      this.replayGroupChanged = false;\r\n      return true;\r\n    }\r\n\r\n    this.replayGroup_ = null;\r\n\r\n    const replayGroup = new CanvasBuilderGroup(\r\n      getRenderTolerance(resolution, pixelRatio),\r\n      extent,\r\n      resolution,\r\n      pixelRatio,\r\n    );\r\n\r\n    const userProjection = getUserProjection();\r\n    let userTransform;\r\n    if (userProjection) {\r\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\r\n        const extent = loadExtents[i];\r\n        const userExtent = toUserExtent(extent, projection);\r\n        vectorSource.loadFeatures(\r\n          userExtent,\r\n          toUserResolution(resolution, projection),\r\n          userProjection,\r\n        );\r\n      }\r\n      userTransform = getTransformFromProjections(userProjection, projection);\r\n    } else {\r\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\r\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\r\n      }\r\n    }\r\n\r\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\r\n    let ready = true;\r\n    const render =\r\n      /**\r\n       * @param {import(\"../../Feature.js\").default} feature Feature.\r\n       * @param {number} index Index.\r\n       */\r\n      (feature, index) => {\r\n        let styles;\r\n        const styleFunction =\r\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\r\n        if (styleFunction) {\r\n          styles = styleFunction(feature, resolution);\r\n        }\r\n        if (styles) {\r\n          const dirty = this.renderFeature(\r\n            feature,\r\n            squaredTolerance,\r\n            styles,\r\n            replayGroup,\r\n            userTransform,\r\n            this.getLayer().getDeclutter(),\r\n            index,\r\n          );\r\n          ready = ready && !dirty;\r\n        }\r\n      };\r\n\r\n    const userExtent = toUserExtent(extent, projection);\r\n    /** @type {Array<import(\"../../Feature.js\").default>} */\r\n    const features = vectorSource.getFeaturesInExtent(userExtent);\r\n    if (vectorLayerRenderOrder) {\r\n      features.sort(vectorLayerRenderOrder);\r\n    }\r\n    for (let i = 0, ii = features.length; i < ii; ++i) {\r\n      render(features[i], i);\r\n    }\r\n    this.renderedFeatures_ = features;\r\n    this.ready = ready;\r\n\r\n    const replayGroupInstructions = replayGroup.finish();\r\n    const executorGroup = new ExecutorGroup(\r\n      extent,\r\n      resolution,\r\n      pixelRatio,\r\n      vectorSource.getOverlaps(),\r\n      replayGroupInstructions,\r\n      vectorLayer.getRenderBuffer(),\r\n      !!frameState.declutter,\r\n    );\r\n\r\n    this.renderedResolution_ = resolution;\r\n    this.renderedRevision_ = vectorLayerRevision;\r\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\r\n    this.renderedExtent_ = renderedExtent;\r\n    this.wrappedRenderedExtent_ = extent;\r\n    this.renderedCenter_ = center;\r\n    this.renderedProjection_ = projection;\r\n    this.renderedPixelRatio_ = pixelRatio;\r\n    this.replayGroup_ = executorGroup;\r\n    this.hitDetectionImageData_ = null;\r\n\r\n    this.replayGroupChanged = true;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../Feature.js\").default} feature Feature.\r\n   * @param {number} squaredTolerance Squared render tolerance.\r\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\r\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\r\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\r\n   * @param {boolean} [declutter] Enable decluttering.\r\n   * @param {number} [index] Render order index.\r\n   * @return {boolean} `true` if an image is loading.\r\n   */\r\n  renderFeature(\r\n    feature,\r\n    squaredTolerance,\r\n    styles,\r\n    builderGroup,\r\n    transform,\r\n    declutter,\r\n    index,\r\n  ) {\r\n    if (!styles) {\r\n      return false;\r\n    }\r\n    let loading = false;\r\n    if (Array.isArray(styles)) {\r\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\r\n        loading =\r\n          renderFeature(\r\n            builderGroup,\r\n            feature,\r\n            styles[i],\r\n            squaredTolerance,\r\n            this.boundHandleStyleImageChange_,\r\n            transform,\r\n            declutter,\r\n            index,\r\n          ) || loading;\r\n      }\r\n    } else {\r\n      loading = renderFeature(\r\n        builderGroup,\r\n        feature,\r\n        styles,\r\n        squaredTolerance,\r\n        this.boundHandleStyleImageChange_,\r\n        transform,\r\n        declutter,\r\n        index,\r\n      );\r\n    }\r\n    return loading;\r\n  }\r\n}\r\n\r\nexport default CanvasVectorLayerRenderer;\r\n", "/**\r\n * @module ol/layer/Vector\r\n */\r\nimport BaseVectorLayer from './BaseVector.js';\r\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\r\n\r\n/**\r\n * @classdesc\r\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\r\n * even during animations. Points and labels stay upright on rotated views. For very large\r\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\r\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\r\n *\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\r\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\r\n * @api\r\n */\r\nclass VectorLayer extends BaseVectorLayer {\r\n  /**\r\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    super(options);\r\n  }\r\n\r\n  createRenderer() {\r\n    return new CanvasVectorLayerRenderer(this);\r\n  }\r\n}\r\n\r\nexport default VectorLayer;\r\n", "/**\r\n * @module ol/render\r\n */\r\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\r\nimport {DEVICE_PIXEL_RATIO} from './has.js';\r\nimport {\r\n  apply as applyTransform,\r\n  create as createTransform,\r\n  multiply as multiplyTransform,\r\n  scale as scaleTransform,\r\n} from './transform.js';\r\nimport {getSquaredTolerance} from './renderer/vector.js';\r\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\r\n\r\n/**\r\n * @typedef {Object} State\r\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\r\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\r\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\r\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\r\n * @property {number} resolution Resolution that the render batch was created and optimized for.\r\n * This is not the view's resolution that is being rendered.\r\n * @property {number} rotation Rotation of the rendered layer in radians.\r\n */\r\n\r\n/**\r\n * A function to be used when sorting features before rendering.\r\n * It takes two instances of {@link module:ol/Feature~Feature} or\r\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\r\n *\r\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\r\n */\r\n\r\n/**\r\n * @typedef {Object} ToContextOptions\r\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\r\n * pixels. When provided, both canvas and css size will be set according to the\r\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\r\n * altered.\r\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\r\n * pixel to css pixel ratio) for the canvas.\r\n */\r\n\r\n/**\r\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\r\n * to the context's canvas.\r\n *\r\n * The units for geometry coordinates are css pixels relative to the top left\r\n * corner of the canvas element.\r\n * ```js\r\n * import {toContext} from 'ol/render.js';\r\n * import Fill from 'ol/style/Fill.js';\r\n * import Polygon from 'ol/geom/Polygon.js';\r\n *\r\n * const canvas = document.createElement('canvas');\r\n * const render = toContext(\r\n *     canvas.getContext('2d'),\r\n *     {size: [100, 100]}\r\n * );\r\n * render.setFillStrokeStyle(new Fill({ color: blue }));\r\n * render.drawPolygon(\r\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\r\n * );\r\n * ```\r\n *\r\n * @param {CanvasRenderingContext2D} context Canvas context.\r\n * @param {ToContextOptions} [options] Options.\r\n * @return {CanvasImmediateRenderer} Canvas Immediate.\r\n * @api\r\n */\r\nexport function toContext(context, options) {\r\n  const canvas = context.canvas;\r\n  options = options ? options : {};\r\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\r\n  const size = options.size;\r\n  if (size) {\r\n    canvas.width = size[0] * pixelRatio;\r\n    canvas.height = size[1] * pixelRatio;\r\n    canvas.style.width = size[0] + 'px';\r\n    canvas.style.height = size[1] + 'px';\r\n  }\r\n  const extent = [0, 0, canvas.width, canvas.height];\r\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\r\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\r\n}\r\n\r\n/**\r\n * Gets a vector context for drawing to the event's canvas.\r\n * @param {import(\"./render/Event.js\").default} event Render event.\r\n * @return {CanvasImmediateRenderer} Vector context.\r\n * @api\r\n */\r\nexport function getVectorContext(event) {\r\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\r\n    throw new Error('Only works for render events from Canvas 2D layers');\r\n  }\r\n\r\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\r\n  const a = event.inversePixelTransform[0];\r\n  const b = event.inversePixelTransform[1];\r\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\r\n  const frameState = event.frameState;\r\n  const transform = multiplyTransform(\r\n    event.inversePixelTransform.slice(),\r\n    frameState.coordinateToPixelTransform,\r\n  );\r\n  const squaredTolerance = getSquaredTolerance(\r\n    frameState.viewState.resolution,\r\n    canvasPixelRatio,\r\n  );\r\n  let userTransform;\r\n  const userProjection = getUserProjection();\r\n  if (userProjection) {\r\n    userTransform = getTransformFromProjections(\r\n      userProjection,\r\n      frameState.viewState.projection,\r\n    );\r\n  }\r\n\r\n  return new CanvasImmediateRenderer(\r\n    event.context,\r\n    canvasPixelRatio,\r\n    frameState.extent,\r\n    transform,\r\n    frameState.viewState.rotation,\r\n    squaredTolerance,\r\n    userTransform,\r\n  );\r\n}\r\n\r\n/**\r\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\r\n * @param {import(\"./render/Event.js\").default} event Render event.\r\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\r\n * corner of the map viewport.\r\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\r\n * @api\r\n */\r\nexport function getRenderPixel(event, pixel) {\r\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\r\n}\r\n", "/**\r\n * @module ol/geom/flat/geodesic\r\n */\r\nimport {get as getProjection, getTransform} from '../../proj.js';\r\nimport {squaredSegmentDistance, toDegrees, toRadians} from '../../math.js';\r\n\r\n/**\r\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\r\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\r\n *     projected coordinates.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @return {Array<number>} Flat coordinates.\r\n */\r\nfunction line(interpolate, transform, squaredTolerance) {\r\n  // FIXME reduce garbage generation\r\n  // FIXME optimize stack operations\r\n\r\n  /** @type {Array<number>} */\r\n  const flatCoordinates = [];\r\n\r\n  let geoA = interpolate(0);\r\n  let geoB = interpolate(1);\r\n\r\n  let a = transform(geoA);\r\n  let b = transform(geoB);\r\n\r\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\r\n  const geoStack = [geoB, geoA];\r\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\r\n  const stack = [b, a];\r\n  /** @type {Array<number>} */\r\n  const fractionStack = [1, 0];\r\n\r\n  /** @type {!Object<string, boolean>} */\r\n  const fractions = {};\r\n\r\n  let maxIterations = 1e5;\r\n  let geoM, m, fracA, fracB, fracM, key;\r\n\r\n  while (--maxIterations > 0 && fractionStack.length > 0) {\r\n    // Pop the a coordinate off the stack\r\n    fracA = fractionStack.pop();\r\n    geoA = geoStack.pop();\r\n    a = stack.pop();\r\n    // Add the a coordinate if it has not been added yet\r\n    key = fracA.toString();\r\n    if (!(key in fractions)) {\r\n      flatCoordinates.push(a[0], a[1]);\r\n      fractions[key] = true;\r\n    }\r\n    // Pop the b coordinate off the stack\r\n    fracB = fractionStack.pop();\r\n    geoB = geoStack.pop();\r\n    b = stack.pop();\r\n    // Find the m point between the a and b coordinates\r\n    fracM = (fracA + fracB) / 2;\r\n    geoM = interpolate(fracM);\r\n    m = transform(geoM);\r\n    if (\r\n      squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) <\r\n      squaredTolerance\r\n    ) {\r\n      // If the m point is sufficiently close to the straight line, then we\r\n      // discard it.  Just use the b coordinate and move on to the next line\r\n      // segment.\r\n      flatCoordinates.push(b[0], b[1]);\r\n      key = fracB.toString();\r\n      fractions[key] = true;\r\n    } else {\r\n      // Otherwise, we need to subdivide the current line segment.  Split it\r\n      // into two and push the two line segments onto the stack.\r\n      fractionStack.push(fracB, fracM, fracM, fracA);\r\n      stack.push(b, m, m, a);\r\n      geoStack.push(geoB, geoM, geoM, geoA);\r\n    }\r\n  }\r\n\r\n  return flatCoordinates;\r\n}\r\n\r\n/**\r\n * Generate a great-circle arcs between two lat/lon points.\r\n * @param {number} lon1 Longitude 1 in degrees.\r\n * @param {number} lat1 Latitude 1 in degrees.\r\n * @param {number} lon2 Longitude 2 in degrees.\r\n * @param {number} lat2 Latitude 2 in degrees.\r\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @return {Array<number>} Flat coordinates.\r\n */\r\nexport function greatCircleArc(\r\n  lon1,\r\n  lat1,\r\n  lon2,\r\n  lat2,\r\n  projection,\r\n  squaredTolerance,\r\n) {\r\n  const geoProjection = getProjection('EPSG:4326');\r\n\r\n  const cosLat1 = Math.cos(toRadians(lat1));\r\n  const sinLat1 = Math.sin(toRadians(lat1));\r\n  const cosLat2 = Math.cos(toRadians(lat2));\r\n  const sinLat2 = Math.sin(toRadians(lat2));\r\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\r\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\r\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\r\n\r\n  return line(\r\n    /**\r\n     * @param {number} frac Fraction.\r\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\r\n     */\r\n    function (frac) {\r\n      if (1 <= d) {\r\n        return [lon2, lat2];\r\n      }\r\n      const D = frac * Math.acos(d);\r\n      const cosD = Math.cos(D);\r\n      const sinD = Math.sin(D);\r\n      const y = sinDeltaLon * cosLat2;\r\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\r\n      const theta = Math.atan2(y, x);\r\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\r\n      const lon =\r\n        toRadians(lon1) +\r\n        Math.atan2(\r\n          Math.sin(theta) * sinD * cosLat1,\r\n          cosD - sinLat1 * Math.sin(lat),\r\n        );\r\n      return [toDegrees(lon), toDegrees(lat)];\r\n    },\r\n    getTransform(geoProjection, projection),\r\n    squaredTolerance,\r\n  );\r\n}\r\n\r\n/**\r\n * Generate a meridian (line at constant longitude).\r\n * @param {number} lon Longitude.\r\n * @param {number} lat1 Latitude 1.\r\n * @param {number} lat2 Latitude 2.\r\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @return {Array<number>} Flat coordinates.\r\n */\r\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\r\n  const epsg4326Projection = getProjection('EPSG:4326');\r\n  return line(\r\n    /**\r\n     * @param {number} frac Fraction.\r\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\r\n     */\r\n    function (frac) {\r\n      return [lon, lat1 + (lat2 - lat1) * frac];\r\n    },\r\n    getTransform(epsg4326Projection, projection),\r\n    squaredTolerance,\r\n  );\r\n}\r\n\r\n/**\r\n * Generate a parallel (line at constant latitude).\r\n * @param {number} lat Latitude.\r\n * @param {number} lon1 Longitude 1.\r\n * @param {number} lon2 Longitude 2.\r\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @return {Array<number>} Flat coordinates.\r\n */\r\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\r\n  const epsg4326Projection = getProjection('EPSG:4326');\r\n  return line(\r\n    /**\r\n     * @param {number} frac Fraction.\r\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\r\n     */\r\n    function (frac) {\r\n      return [lon1 + (lon2 - lon1) * frac, lat];\r\n    },\r\n    getTransform(epsg4326Projection, projection),\r\n    squaredTolerance,\r\n  );\r\n}\r\n", "/**\r\n * @module ol/layer/Graticule\r\n */\r\nimport Collection from '../Collection.js';\r\nimport EventType from '../render/EventType.js';\r\nimport Feature from '../Feature.js';\r\nimport Fill from '../style/Fill.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport Point from '../geom/Point.js';\r\nimport Stroke from '../style/Stroke.js';\r\nimport Style from '../style/Style.js';\r\nimport Text from '../style/Text.js';\r\nimport VectorLayer from './Vector.js';\r\nimport VectorSource from '../source/Vector.js';\r\nimport {\r\n  applyTransform,\r\n  approximatelyEquals,\r\n  containsCoordinate,\r\n  containsExtent,\r\n  equals,\r\n  getCenter,\r\n  getIntersection,\r\n  getWidth,\r\n  intersects,\r\n  isEmpty,\r\n  wrapX as wrapExtentX,\r\n} from '../extent.js';\r\nimport {clamp} from '../math.js';\r\nimport {degreesToStringHDMS} from '../coordinate.js';\r\nimport {\r\n  equivalent as equivalentProjection,\r\n  get as getProjection,\r\n  getTransform,\r\n} from '../proj.js';\r\nimport {getVectorContext} from '../render.js';\r\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\r\n\r\n/**\r\n * @type {Stroke}\r\n * @private\r\n * @const\r\n */\r\nconst DEFAULT_STROKE_STYLE = new Stroke({\r\n  color: 'rgba(0,0,0,0.2)',\r\n});\r\n\r\n/**\r\n * @type {Array<number>}\r\n * @private\r\n */\r\nconst INTERVALS = [\r\n  90,\r\n  45,\r\n  30,\r\n  20,\r\n  10,\r\n  5,\r\n  2,\r\n  1,\r\n  30 / 60,\r\n  20 / 60,\r\n  10 / 60,\r\n  5 / 60,\r\n  2 / 60,\r\n  1 / 60,\r\n  30 / 3600,\r\n  20 / 3600,\r\n  10 / 3600,\r\n  5 / 3600,\r\n  2 / 3600,\r\n  1 / 3600,\r\n];\r\n\r\n/**\r\n * @typedef {Object} GraticuleLabelDataType\r\n * @property {Point} geom Geometry.\r\n * @property {string} text Text.\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\r\n * visible.\r\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\r\n * be visible.\r\n * @property {number} [maxLines=100] The maximum number of meridians and\r\n * parallels from the center of the map. The default value of 100 means that at\r\n * most 200 meridians and 200 parallels will be displayed. The default value is\r\n * appropriate for conformal projections like Spherical Mercator. If you\r\n * increase the value, more lines will be drawn and the drawing performance will\r\n * decrease.\r\n * @property {Stroke} [strokeStyle] The\r\n * stroke style to use for drawing the graticule. If not provided, the following stroke will be used:\r\n * ```js\r\n * new Stroke({\r\n *   color: 'rgba(0, 0, 0, 0.2)' // a not fully opaque black\r\n * });\r\n * ```\r\n * @property {number} [targetSize=100] The target size of the graticule cells,\r\n * in pixels.\r\n * @property {boolean} [showLabels=false] Render a label with the respective\r\n * latitude/longitude for each graticule line.\r\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\r\n * longitudes. This function is called with the longitude as argument, and\r\n * should return a formatted string representing the longitude. By default,\r\n * labels are formatted as degrees, minutes, seconds and hemisphere.\r\n * @property {function(number):string} [latLabelFormatter] Label formatter for\r\n * latitudes. This function is called with the latitude as argument, and\r\n * should return a formatted string representing the latitude. By default,\r\n * labels are formatted as degrees, minutes, seconds and hemisphere.\r\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\r\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\r\n * top.\r\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\r\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\r\n * right.\r\n * @property {Text} [lonLabelStyle] Longitude label text\r\n * style. If not provided, the following style will be used:\r\n * ```js\r\n * new Text({\r\n *   font: '12px Calibri,sans-serif',\r\n *   textBaseline: 'bottom',\r\n *   fill: new Fill({\r\n *     color: 'rgba(0,0,0,1)'\r\n *   }),\r\n *   stroke: new Stroke({\r\n *     color: 'rgba(255,255,255,1)',\r\n *     width: 3\r\n *   })\r\n * });\r\n * ```\r\n * Note that the default's `textBaseline` configuration will not work well for\r\n * `lonLabelPosition` configurations that position labels close to the top of\r\n * the viewport.\r\n * @property {Text} [latLabelStyle] Latitude label text style.\r\n * If not provided, the following style will be used:\r\n * ```js\r\n * new Text({\r\n *   font: '12px Calibri,sans-serif',\r\n *   textAlign: 'end',\r\n *   fill: new Fill({\r\n *     color: 'rgba(0,0,0,1)'\r\n *   }),\r\n *   stroke: Stroke({\r\n *     color: 'rgba(255,255,255,1)',\r\n *     width: 3\r\n *   })\r\n * });\r\n * ```\r\n * Note that the default's `textAlign` configuration will not work well for\r\n * `latLabelPosition` configurations that position labels close to the left of\r\n * the viewport.\r\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 30/60, 20/60, 10/60, 5/60, 2/60, 1/60, 30/3600, 20/3600, 10/3600, 5/3600, 2/3600, 1/3600]]\r\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\r\n * ```js\r\n * [30, 10]\r\n * ```\r\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\r\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\r\n * Note that the view projection must define both extent and worldExtent.\r\n *\r\n * @fires import(\"../render/Event.js\").RenderEvent\r\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\r\n * @api\r\n */\r\nclass Graticule extends VectorLayer {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    const baseOptions = Object.assign(\r\n      {\r\n        updateWhileAnimating: true,\r\n        updateWhileInteracting: true,\r\n        renderBuffer: 0,\r\n      },\r\n      options,\r\n    );\r\n\r\n    delete baseOptions.maxLines;\r\n    delete baseOptions.strokeStyle;\r\n    delete baseOptions.targetSize;\r\n    delete baseOptions.showLabels;\r\n    delete baseOptions.lonLabelFormatter;\r\n    delete baseOptions.latLabelFormatter;\r\n    delete baseOptions.lonLabelPosition;\r\n    delete baseOptions.latLabelPosition;\r\n    delete baseOptions.lonLabelStyle;\r\n    delete baseOptions.latLabelStyle;\r\n    delete baseOptions.intervals;\r\n    super(baseOptions);\r\n\r\n    /**\r\n     * @type {import(\"../proj/Projection.js\").default}\r\n     */\r\n    this.projection_ = null;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.maxLat_ = Infinity;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.maxLon_ = Infinity;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.minLat_ = -Infinity;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.minLon_ = -Infinity;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.maxX_ = Infinity;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.maxY_ = Infinity;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.minX_ = -Infinity;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.minY_ = -Infinity;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.targetSize_ =\r\n      options.targetSize !== undefined ? options.targetSize : 100;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\r\n\r\n    /**\r\n     * @type {Array<LineString>}\r\n     * @private\r\n     */\r\n    this.meridians_ = [];\r\n\r\n    /**\r\n     * @type {Array<LineString>}\r\n     * @private\r\n     */\r\n    this.parallels_ = [];\r\n\r\n    /**\r\n     * @type {Stroke}\r\n     * @private\r\n     */\r\n    this.strokeStyle_ =\r\n      options.strokeStyle !== undefined\r\n        ? options.strokeStyle\r\n        : DEFAULT_STROKE_STYLE;\r\n\r\n    /**\r\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\r\n     * @private\r\n     */\r\n    this.fromLonLatTransform_ = undefined;\r\n\r\n    /**\r\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\r\n     * @private\r\n     */\r\n    this.toLonLatTransform_ = undefined;\r\n\r\n    /**\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @private\r\n     */\r\n    this.projectionCenterLonLat_ = null;\r\n\r\n    /**\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @private\r\n     */\r\n    this.bottomLeft_ = null;\r\n\r\n    /**\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @private\r\n     */\r\n    this.bottomRight_ = null;\r\n\r\n    /**\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @private\r\n     */\r\n    this.topLeft_ = null;\r\n\r\n    /**\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @private\r\n     */\r\n    this.topRight_ = null;\r\n\r\n    /**\r\n     * @type {Array<GraticuleLabelDataType>}\r\n     * @private\r\n     */\r\n    this.meridiansLabels_ = null;\r\n\r\n    /**\r\n     * @type {Array<GraticuleLabelDataType>}\r\n     * @private\r\n     */\r\n    this.parallelsLabels_ = null;\r\n\r\n    if (options.showLabels) {\r\n      /**\r\n       * @type {null|function(number):string}\r\n       * @private\r\n       */\r\n      this.lonLabelFormatter_ =\r\n        options.lonLabelFormatter == undefined\r\n          ? degreesToStringHDMS.bind(this, 'EW')\r\n          : options.lonLabelFormatter;\r\n\r\n      /**\r\n       * @type {function(number):string}\r\n       * @private\r\n       */\r\n      this.latLabelFormatter_ =\r\n        options.latLabelFormatter == undefined\r\n          ? degreesToStringHDMS.bind(this, 'NS')\r\n          : options.latLabelFormatter;\r\n\r\n      /**\r\n       * Longitude label position in fractions (0..1) of view extent. 0 means\r\n       * bottom, 1 means top.\r\n       * @type {number}\r\n       * @private\r\n       */\r\n      this.lonLabelPosition_ =\r\n        options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\r\n\r\n      /**\r\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\r\n       * means right.\r\n       * @type {number}\r\n       * @private\r\n       */\r\n      this.latLabelPosition_ =\r\n        options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\r\n\r\n      /**\r\n       * @type {Style}\r\n       * @private\r\n       */\r\n      this.lonLabelStyleBase_ = new Style({\r\n        text:\r\n          options.lonLabelStyle !== undefined\r\n            ? options.lonLabelStyle.clone()\r\n            : new Text({\r\n                font: '12px Calibri,sans-serif',\r\n                textBaseline: 'bottom',\r\n                fill: new Fill({\r\n                  color: 'rgba(0,0,0,1)',\r\n                }),\r\n                stroke: new Stroke({\r\n                  color: 'rgba(255,255,255,1)',\r\n                  width: 3,\r\n                }),\r\n              }),\r\n      });\r\n\r\n      /**\r\n       * @private\r\n       * @param {import(\"../Feature\").default} feature Feature\r\n       * @return {Style} style\r\n       */\r\n      this.lonLabelStyle_ = (feature) => {\r\n        const label = feature.get('graticule_label');\r\n        this.lonLabelStyleBase_.getText().setText(label);\r\n        return this.lonLabelStyleBase_;\r\n      };\r\n\r\n      /**\r\n       * @type {Style}\r\n       * @private\r\n       */\r\n      this.latLabelStyleBase_ = new Style({\r\n        text:\r\n          options.latLabelStyle !== undefined\r\n            ? options.latLabelStyle.clone()\r\n            : new Text({\r\n                font: '12px Calibri,sans-serif',\r\n                textAlign: 'right',\r\n                fill: new Fill({\r\n                  color: 'rgba(0,0,0,1)',\r\n                }),\r\n                stroke: new Stroke({\r\n                  color: 'rgba(255,255,255,1)',\r\n                  width: 3,\r\n                }),\r\n              }),\r\n      });\r\n\r\n      /**\r\n       * @private\r\n       * @param {import(\"../Feature\").default} feature Feature\r\n       * @return {Style} style\r\n       */\r\n      this.latLabelStyle_ = (feature) => {\r\n        const label = feature.get('graticule_label');\r\n        this.latLabelStyleBase_.getText().setText(label);\r\n        return this.latLabelStyleBase_;\r\n      };\r\n\r\n      this.meridiansLabels_ = [];\r\n      this.parallelsLabels_ = [];\r\n\r\n      this.addEventListener(EventType.POSTRENDER, this.drawLabels_.bind(this));\r\n    }\r\n\r\n    /**\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    this.intervals_ =\r\n      options.intervals !== undefined ? options.intervals : INTERVALS;\r\n\r\n    // use a source with a custom loader for lines & text\r\n    this.setSource(\r\n      new VectorSource({\r\n        loader: this.loaderFunction.bind(this),\r\n        strategy: this.strategyFunction.bind(this),\r\n        features: new Collection(),\r\n        overlaps: false,\r\n        useSpatialIndex: false,\r\n        wrapX: options.wrapX,\r\n      }),\r\n    );\r\n\r\n    /**\r\n     * feature pool to use when updating graticule\r\n     * @type {Array<Feature>}\r\n     * @private\r\n     */\r\n    this.featurePool_ = [];\r\n\r\n    /**\r\n     * @type {Style}\r\n     * @private\r\n     */\r\n    this.lineStyle_ = new Style({\r\n      stroke: this.strokeStyle_,\r\n    });\r\n\r\n    /**\r\n     * @type {?import(\"../extent.js\").Extent}\r\n     * @private\r\n     */\r\n    this.loadedExtent_ = null;\r\n\r\n    /**\r\n     * @type {?import(\"../extent.js\").Extent}\r\n     * @private\r\n     */\r\n    this.renderedExtent_ = null;\r\n\r\n    /**\r\n     * @type {?number}\r\n     * @private\r\n     */\r\n    this.renderedResolution_ = null;\r\n\r\n    this.setRenderOrder(null);\r\n  }\r\n\r\n  /**\r\n   * Strategy function for loading features based on the view's extent and\r\n   * resolution.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {number} resolution Resolution.\r\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\r\n   */\r\n  strategyFunction(extent, resolution) {\r\n    // extents may be passed in different worlds, to avoid endless loop we use only one\r\n    let realWorldExtent = extent.slice();\r\n    if (this.projection_ && this.getSource().getWrapX()) {\r\n      wrapExtentX(realWorldExtent, this.projection_);\r\n    }\r\n    if (this.loadedExtent_) {\r\n      if (\r\n        approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)\r\n      ) {\r\n        // make sure result is exactly equal to previous extent\r\n        realWorldExtent = this.loadedExtent_.slice();\r\n      } else {\r\n        // we should not keep track of loaded extents\r\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\r\n      }\r\n    }\r\n    return [realWorldExtent];\r\n  }\r\n\r\n  /**\r\n   * Update geometries in the source based on current view\r\n   * @param {import(\"../extent\").Extent} extent Extent\r\n   * @param {number} resolution Resolution\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\r\n   */\r\n  loaderFunction(extent, resolution, projection) {\r\n    this.loadedExtent_ = extent;\r\n    const source = this.getSource();\r\n\r\n    // only consider the intersection between our own extent & the requested one\r\n    const layerExtent = this.getExtent() || [\r\n      -Infinity,\r\n      -Infinity,\r\n      Infinity,\r\n      Infinity,\r\n    ];\r\n    const renderExtent = getIntersection(layerExtent, extent);\r\n\r\n    if (\r\n      this.renderedExtent_ &&\r\n      equals(this.renderedExtent_, renderExtent) &&\r\n      this.renderedResolution_ === resolution\r\n    ) {\r\n      return;\r\n    }\r\n    this.renderedExtent_ = renderExtent;\r\n    this.renderedResolution_ = resolution;\r\n\r\n    // bail out if nothing to render\r\n    if (isEmpty(renderExtent)) {\r\n      return;\r\n    }\r\n\r\n    // update projection info\r\n    const center = getCenter(renderExtent);\r\n    const squaredTolerance = (resolution * resolution) / 4;\r\n\r\n    const updateProjectionInfo =\r\n      !this.projection_ || !equivalentProjection(this.projection_, projection);\r\n\r\n    if (updateProjectionInfo) {\r\n      this.updateProjectionInfo_(projection);\r\n    }\r\n\r\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\r\n\r\n    // first make sure we have enough features in the pool\r\n    let featureCount = this.meridians_.length + this.parallels_.length;\r\n    if (this.meridiansLabels_) {\r\n      featureCount += this.meridians_.length;\r\n    }\r\n    if (this.parallelsLabels_) {\r\n      featureCount += this.parallels_.length;\r\n    }\r\n\r\n    let feature;\r\n    while (featureCount > this.featurePool_.length) {\r\n      feature = new Feature();\r\n      this.featurePool_.push(feature);\r\n    }\r\n\r\n    const featuresColl = source.getFeaturesCollection();\r\n    featuresColl.clear();\r\n    let poolIndex = 0;\r\n\r\n    // add features for the lines & labels\r\n    let i, l;\r\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\r\n      feature = this.featurePool_[poolIndex++];\r\n      feature.setGeometry(this.meridians_[i]);\r\n      feature.setStyle(this.lineStyle_);\r\n      featuresColl.push(feature);\r\n    }\r\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\r\n      feature = this.featurePool_[poolIndex++];\r\n      feature.setGeometry(this.parallels_[i]);\r\n      feature.setStyle(this.lineStyle_);\r\n      featuresColl.push(feature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} lon Longitude.\r\n   * @param {number} minLat Minimal latitude.\r\n   * @param {number} maxLat Maximal latitude.\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {number} index Index.\r\n   * @return {number} Index.\r\n   * @private\r\n   */\r\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\r\n    const lineString = this.getMeridian_(\r\n      lon,\r\n      minLat,\r\n      maxLat,\r\n      squaredTolerance,\r\n      index,\r\n    );\r\n    if (intersects(lineString.getExtent(), extent)) {\r\n      if (this.meridiansLabels_) {\r\n        const text = this.lonLabelFormatter_(lon);\r\n        if (index in this.meridiansLabels_) {\r\n          this.meridiansLabels_[index].text = text;\r\n        } else {\r\n          this.meridiansLabels_[index] = {\r\n            geom: new Point([]),\r\n            text: text,\r\n          };\r\n        }\r\n      }\r\n      this.meridians_[index++] = lineString;\r\n    }\r\n    return index;\r\n  }\r\n\r\n  /**\r\n   * @param {number} lat Latitude.\r\n   * @param {number} minLon Minimal longitude.\r\n   * @param {number} maxLon Maximal longitude.\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {number} index Index.\r\n   * @return {number} Index.\r\n   * @private\r\n   */\r\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\r\n    const lineString = this.getParallel_(\r\n      lat,\r\n      minLon,\r\n      maxLon,\r\n      squaredTolerance,\r\n      index,\r\n    );\r\n    if (intersects(lineString.getExtent(), extent)) {\r\n      if (this.parallelsLabels_) {\r\n        const text = this.latLabelFormatter_(lat);\r\n        if (index in this.parallelsLabels_) {\r\n          this.parallelsLabels_[index].text = text;\r\n        } else {\r\n          this.parallelsLabels_[index] = {\r\n            geom: new Point([]),\r\n            text: text,\r\n          };\r\n        }\r\n      }\r\n      this.parallels_[index++] = lineString;\r\n    }\r\n    return index;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../render/Event.js\").default} event Render event.\r\n   * @private\r\n   */\r\n  drawLabels_(event) {\r\n    const rotation = event.frameState.viewState.rotation;\r\n    const resolution = event.frameState.viewState.resolution;\r\n    const size = event.frameState.size;\r\n    const extent = event.frameState.extent;\r\n    const rotationCenter = getCenter(extent);\r\n    let rotationExtent = extent;\r\n    if (rotation) {\r\n      const unrotatedWidth = size[0] * resolution;\r\n      const unrotatedHeight = size[1] * resolution;\r\n      rotationExtent = [\r\n        rotationCenter[0] - unrotatedWidth / 2,\r\n        rotationCenter[1] - unrotatedHeight / 2,\r\n        rotationCenter[0] + unrotatedWidth / 2,\r\n        rotationCenter[1] + unrotatedHeight / 2,\r\n      ];\r\n    }\r\n\r\n    let startWorld = 0;\r\n    let endWorld = 0;\r\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\r\n    const projectionExtent = this.projection_.getExtent();\r\n    const worldWidth = getWidth(projectionExtent);\r\n    if (\r\n      this.getSource().getWrapX() &&\r\n      this.projection_.canWrapX() &&\r\n      !containsExtent(projectionExtent, extent)\r\n    ) {\r\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\r\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\r\n      const inverted = Math.abs(rotation) > Math.PI / 2;\r\n      labelsAtStart = labelsAtStart !== inverted;\r\n    }\r\n    const vectorContext = getVectorContext(event);\r\n\r\n    for (let world = startWorld; world <= endWorld; ++world) {\r\n      let poolIndex = this.meridians_.length + this.parallels_.length;\r\n      let feature, index, l, textPoint;\r\n\r\n      if (this.meridiansLabels_) {\r\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\r\n          const lineString = this.meridians_[index];\r\n          if (!rotation && world === 0) {\r\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\r\n          } else {\r\n            const clone = lineString.clone();\r\n            clone.translate(world * worldWidth, 0);\r\n            clone.rotate(-rotation, rotationCenter);\r\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\r\n            textPoint.rotate(rotation, rotationCenter);\r\n          }\r\n          feature = this.featurePool_[poolIndex++];\r\n          feature.setGeometry(textPoint);\r\n          feature.set('graticule_label', this.meridiansLabels_[index].text);\r\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\r\n        }\r\n      }\r\n      if (this.parallelsLabels_) {\r\n        if (\r\n          (world === startWorld && labelsAtStart) ||\r\n          (world === endWorld && !labelsAtStart)\r\n        ) {\r\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\r\n            const lineString = this.parallels_[index];\r\n            if (!rotation && world === 0) {\r\n              textPoint = this.getParallelPoint_(lineString, extent, index);\r\n            } else {\r\n              const clone = lineString.clone();\r\n              clone.translate(world * worldWidth, 0);\r\n              clone.rotate(-rotation, rotationCenter);\r\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\r\n              textPoint.rotate(rotation, rotationCenter);\r\n            }\r\n            feature = this.featurePool_[poolIndex++];\r\n            feature.setGeometry(textPoint);\r\n            feature.set('graticule_label', this.parallelsLabels_[index].text);\r\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @private\r\n   */\r\n  createGraticule_(extent, center, resolution, squaredTolerance) {\r\n    const interval = this.getInterval_(resolution);\r\n    if (interval == -1) {\r\n      this.meridians_.length = 0;\r\n      this.parallels_.length = 0;\r\n      if (this.meridiansLabels_) {\r\n        this.meridiansLabels_.length = 0;\r\n      }\r\n      if (this.parallelsLabels_) {\r\n        this.parallelsLabels_.length = 0;\r\n      }\r\n      return;\r\n    }\r\n\r\n    let wrapX = false;\r\n    const projectionExtent = this.projection_.getExtent();\r\n    const worldWidth = getWidth(projectionExtent);\r\n    if (\r\n      this.getSource().getWrapX() &&\r\n      this.projection_.canWrapX() &&\r\n      !containsExtent(projectionExtent, extent)\r\n    ) {\r\n      if (getWidth(extent) >= worldWidth) {\r\n        extent[0] = projectionExtent[0];\r\n        extent[2] = projectionExtent[2];\r\n      } else {\r\n        wrapX = true;\r\n      }\r\n    }\r\n\r\n    // Constrain the center to fit into the extent available to the graticule\r\n\r\n    const validCenterP = [\r\n      clamp(center[0], this.minX_, this.maxX_),\r\n      clamp(center[1], this.minY_, this.maxY_),\r\n    ];\r\n\r\n    // Transform the center to lon lat\r\n    // Some projections may have a void area at the poles\r\n    // so replace any NaN latitudes with the min or max value closest to a pole\r\n\r\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\r\n    if (isNaN(centerLonLat[1])) {\r\n      centerLonLat[1] =\r\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\r\n          ? this.maxLat_\r\n          : this.minLat_;\r\n    }\r\n    let centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\r\n    let centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\r\n    const maxLines = this.maxLines_;\r\n    let cnt, idx, lat, lon;\r\n\r\n    // Limit the extent to fit into the extent available to the graticule\r\n\r\n    let validExtentP = extent;\r\n    if (!wrapX) {\r\n      validExtentP = [\r\n        clamp(extent[0], this.minX_, this.maxX_),\r\n        clamp(extent[1], this.minY_, this.maxY_),\r\n        clamp(extent[2], this.minX_, this.maxX_),\r\n        clamp(extent[3], this.minY_, this.maxY_),\r\n      ];\r\n    }\r\n\r\n    // Transform the extent to get the lon lat ranges for the edges of the extent\r\n\r\n    const validExtent = applyTransform(\r\n      validExtentP,\r\n      this.toLonLatTransform_,\r\n      undefined,\r\n      8,\r\n    );\r\n\r\n    let maxLat = validExtent[3];\r\n    let maxLon = validExtent[2];\r\n    let minLat = validExtent[1];\r\n    let minLon = validExtent[0];\r\n\r\n    if (!wrapX) {\r\n      // Check if extremities of the world extent lie inside the extent\r\n      // (for example the pole in a polar projection)\r\n      // and extend the extent as appropriate\r\n\r\n      if (containsCoordinate(validExtentP, this.bottomLeft_)) {\r\n        minLon = this.minLon_;\r\n        minLat = this.minLat_;\r\n      }\r\n      if (containsCoordinate(validExtentP, this.bottomRight_)) {\r\n        maxLon = this.maxLon_;\r\n        minLat = this.minLat_;\r\n      }\r\n      if (containsCoordinate(validExtentP, this.topLeft_)) {\r\n        minLon = this.minLon_;\r\n        maxLat = this.maxLat_;\r\n      }\r\n      if (containsCoordinate(validExtentP, this.topRight_)) {\r\n        maxLon = this.maxLon_;\r\n        maxLat = this.maxLat_;\r\n      }\r\n\r\n      // The transformed center may also extend the lon lat ranges used for rendering\r\n\r\n      maxLat = clamp(maxLat, centerLat, this.maxLat_);\r\n      maxLon = clamp(maxLon, centerLon, this.maxLon_);\r\n      minLat = clamp(minLat, this.minLat_, centerLat);\r\n      minLon = clamp(minLon, this.minLon_, centerLon);\r\n    }\r\n\r\n    // Create meridians\r\n\r\n    centerLon = Math.floor(centerLon / interval) * interval;\r\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\r\n\r\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\r\n\r\n    cnt = 0;\r\n    if (wrapX) {\r\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\r\n        idx = this.addMeridian_(\r\n          lon,\r\n          minLat,\r\n          maxLat,\r\n          squaredTolerance,\r\n          extent,\r\n          idx,\r\n        );\r\n      }\r\n    } else {\r\n      while (lon != this.minLon_ && cnt++ < maxLines) {\r\n        lon = Math.max(lon - interval, this.minLon_);\r\n        idx = this.addMeridian_(\r\n          lon,\r\n          minLat,\r\n          maxLat,\r\n          squaredTolerance,\r\n          extent,\r\n          idx,\r\n        );\r\n      }\r\n    }\r\n\r\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\r\n\r\n    cnt = 0;\r\n    if (wrapX) {\r\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\r\n        idx = this.addMeridian_(\r\n          lon,\r\n          minLat,\r\n          maxLat,\r\n          squaredTolerance,\r\n          extent,\r\n          idx,\r\n        );\r\n      }\r\n    } else {\r\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\r\n        lon = Math.min(lon + interval, this.maxLon_);\r\n        idx = this.addMeridian_(\r\n          lon,\r\n          minLat,\r\n          maxLat,\r\n          squaredTolerance,\r\n          extent,\r\n          idx,\r\n        );\r\n      }\r\n    }\r\n\r\n    this.meridians_.length = idx;\r\n    if (this.meridiansLabels_) {\r\n      this.meridiansLabels_.length = idx;\r\n    }\r\n\r\n    // Create parallels\r\n\r\n    centerLat = Math.floor(centerLat / interval) * interval;\r\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\r\n\r\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\r\n\r\n    cnt = 0;\r\n    while (lat != this.minLat_ && cnt++ < maxLines) {\r\n      lat = Math.max(lat - interval, this.minLat_);\r\n      idx = this.addParallel_(\r\n        lat,\r\n        minLon,\r\n        maxLon,\r\n        squaredTolerance,\r\n        extent,\r\n        idx,\r\n      );\r\n    }\r\n\r\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\r\n\r\n    cnt = 0;\r\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\r\n      lat = Math.min(lat + interval, this.maxLat_);\r\n      idx = this.addParallel_(\r\n        lat,\r\n        minLon,\r\n        maxLon,\r\n        squaredTolerance,\r\n        extent,\r\n        idx,\r\n      );\r\n    }\r\n\r\n    this.parallels_.length = idx;\r\n    if (this.parallelsLabels_) {\r\n      this.parallelsLabels_.length = idx;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} resolution Resolution.\r\n   * @return {number} The interval in degrees.\r\n   * @private\r\n   */\r\n  getInterval_(resolution) {\r\n    const centerLon = this.projectionCenterLonLat_[0];\r\n    const centerLat = this.projectionCenterLonLat_[1];\r\n    let interval = -1;\r\n    const target = Math.pow(this.targetSize_ * resolution, 2);\r\n    /** @type {Array<number>} **/\r\n    const p1 = [];\r\n    /** @type {Array<number>} **/\r\n    const p2 = [];\r\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\r\n      const delta = clamp(this.intervals_[i] / 2, 0, 90);\r\n      // Don't attempt to transform latitudes beyond the poles!\r\n      const clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\r\n      p1[0] = centerLon - delta;\r\n      p1[1] = clampedLat - delta;\r\n      p2[0] = centerLon + delta;\r\n      p2[1] = clampedLat + delta;\r\n      this.fromLonLatTransform_(p1, p1);\r\n      this.fromLonLatTransform_(p2, p2);\r\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\r\n      if (dist <= target) {\r\n        break;\r\n      }\r\n      interval = this.intervals_[i];\r\n    }\r\n    return interval;\r\n  }\r\n\r\n  /**\r\n   * @param {number} lon Longitude.\r\n   * @param {number} minLat Minimal latitude.\r\n   * @param {number} maxLat Maximal latitude.\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @return {LineString} The meridian line string.\r\n   * @param {number} index Index.\r\n   * @private\r\n   */\r\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\r\n    const flatCoordinates = meridian(\r\n      lon,\r\n      minLat,\r\n      maxLat,\r\n      this.projection_,\r\n      squaredTolerance,\r\n    );\r\n    let lineString = this.meridians_[index];\r\n    if (!lineString) {\r\n      lineString = new LineString(flatCoordinates, 'XY');\r\n      this.meridians_[index] = lineString;\r\n    } else {\r\n      lineString.setFlatCoordinates('XY', flatCoordinates);\r\n      lineString.changed();\r\n    }\r\n    return lineString;\r\n  }\r\n\r\n  /**\r\n   * @param {LineString} lineString Meridian\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {number} index Index.\r\n   * @return {Point} Meridian point.\r\n   * @private\r\n   */\r\n  getMeridianPoint_(lineString, extent, index) {\r\n    const flatCoordinates = lineString.getFlatCoordinates();\r\n    let bottom = 1;\r\n    let top = flatCoordinates.length - 1;\r\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\r\n      bottom = top;\r\n      top = 1;\r\n    }\r\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\r\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\r\n    const lat = clamp(\r\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\r\n      clampedBottom,\r\n      clampedTop,\r\n    );\r\n    const coordinate0 =\r\n      flatCoordinates[bottom - 1] +\r\n      ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\r\n        (lat - flatCoordinates[bottom])) /\r\n        (flatCoordinates[top] - flatCoordinates[bottom]);\r\n    const coordinate = [coordinate0, lat];\r\n    const point = this.meridiansLabels_[index].geom;\r\n    point.setCoordinates(coordinate);\r\n    return point;\r\n  }\r\n\r\n  /**\r\n   * Get the list of meridians.  Meridians are lines of equal longitude.\r\n   * @return {Array<LineString>} The meridians.\r\n   * @api\r\n   */\r\n  getMeridians() {\r\n    return this.meridians_;\r\n  }\r\n\r\n  /**\r\n   * @param {number} lat Latitude.\r\n   * @param {number} minLon Minimal longitude.\r\n   * @param {number} maxLon Maximal longitude.\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @return {LineString} The parallel line string.\r\n   * @param {number} index Index.\r\n   * @private\r\n   */\r\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\r\n    const flatCoordinates = parallel(\r\n      lat,\r\n      minLon,\r\n      maxLon,\r\n      this.projection_,\r\n      squaredTolerance,\r\n    );\r\n    let lineString = this.parallels_[index];\r\n    if (!lineString) {\r\n      lineString = new LineString(flatCoordinates, 'XY');\r\n    } else {\r\n      lineString.setFlatCoordinates('XY', flatCoordinates);\r\n      lineString.changed();\r\n    }\r\n    return lineString;\r\n  }\r\n\r\n  /**\r\n   * @param {LineString} lineString Parallels.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {number} index Index.\r\n   * @return {Point} Parallel point.\r\n   * @private\r\n   */\r\n  getParallelPoint_(lineString, extent, index) {\r\n    const flatCoordinates = lineString.getFlatCoordinates();\r\n    let left = 0;\r\n    let right = flatCoordinates.length - 2;\r\n    if (flatCoordinates[left] > flatCoordinates[right]) {\r\n      left = right;\r\n      right = 0;\r\n    }\r\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\r\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\r\n    const lon = clamp(\r\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\r\n      clampedLeft,\r\n      clampedRight,\r\n    );\r\n    const coordinate1 =\r\n      flatCoordinates[left + 1] +\r\n      ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\r\n        (lon - flatCoordinates[left])) /\r\n        (flatCoordinates[right] - flatCoordinates[left]);\r\n    const coordinate = [lon, coordinate1];\r\n    const point = this.parallelsLabels_[index].geom;\r\n    point.setCoordinates(coordinate);\r\n    return point;\r\n  }\r\n\r\n  /**\r\n   * Get the list of parallels.  Parallels are lines of equal latitude.\r\n   * @return {Array<LineString>} The parallels.\r\n   * @api\r\n   */\r\n  getParallels() {\r\n    return this.parallels_;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @private\r\n   */\r\n  updateProjectionInfo_(projection) {\r\n    const epsg4326Projection = getProjection('EPSG:4326');\r\n\r\n    const worldExtent = projection.getWorldExtent();\r\n\r\n    this.maxLat_ = worldExtent[3];\r\n    this.maxLon_ = worldExtent[2];\r\n    this.minLat_ = worldExtent[1];\r\n    this.minLon_ = worldExtent[0];\r\n\r\n    // If the world extent crosses the dateline define a custom transform to\r\n    // return longitudes which wrap the dateline\r\n\r\n    const toLonLatTransform = getTransform(projection, epsg4326Projection);\r\n    if (this.minLon_ < this.maxLon_) {\r\n      this.toLonLatTransform_ = toLonLatTransform;\r\n    } else {\r\n      const split = this.minLon_ + this.maxLon_ / 2;\r\n      this.maxLon_ += 360;\r\n      this.toLonLatTransform_ = function (coordinates, output, dimension) {\r\n        dimension = dimension || 2;\r\n        const lonLatCoordinates = toLonLatTransform(\r\n          coordinates,\r\n          output,\r\n          dimension,\r\n        );\r\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\r\n          if (lonLatCoordinates[i] < split) {\r\n            lonLatCoordinates[i] += 360;\r\n          }\r\n        }\r\n        return lonLatCoordinates;\r\n      };\r\n    }\r\n\r\n    // Transform the extent to get the limits of the view projection extent\r\n    // which should be available to the graticule\r\n\r\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\r\n    const worldExtentP = applyTransform(\r\n      [this.minLon_, this.minLat_, this.maxLon_, this.maxLat_],\r\n      this.fromLonLatTransform_,\r\n      undefined,\r\n      8,\r\n    );\r\n\r\n    this.minX_ = worldExtentP[0];\r\n    this.maxX_ = worldExtentP[2];\r\n    this.minY_ = worldExtentP[1];\r\n    this.maxY_ = worldExtentP[3];\r\n\r\n    // Determine the view projection coordinates of the extremities of the world extent\r\n    // as these may lie inside a view extent (for example the pole in a polar projection)\r\n\r\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\r\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\r\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\r\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\r\n\r\n    // Transform the projection center to lon lat\r\n    // Some projections may have a void area at the poles\r\n    // so replace any NaN latitudes with the min or max value closest to a pole\r\n\r\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(\r\n      getCenter(projection.getExtent()),\r\n    );\r\n    if (isNaN(this.projectionCenterLonLat_[1])) {\r\n      this.projectionCenterLonLat_[1] =\r\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\r\n          ? this.maxLat_\r\n          : this.minLat_;\r\n    }\r\n\r\n    this.projection_ = projection;\r\n  }\r\n}\r\n\r\nexport default Graticule;\r\n", "/**\r\n * @module ol/Kinetic\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Implementation of inertial deceleration for map movement.\r\n *\r\n * @api\r\n */\r\nclass Kinetic {\r\n  /**\r\n   * @param {number} decay Rate of decay (must be negative).\r\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\r\n   * @param {number} delay Delay to consider to calculate the kinetic\r\n   *     initial values (milliseconds).\r\n   */\r\n  constructor(decay, minVelocity, delay) {\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.decay_ = decay;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.minVelocity_ = minVelocity;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.delay_ = delay;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.points_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.angle_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.initialVelocity_ = 0;\r\n  }\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  begin() {\r\n    this.points_.length = 0;\r\n    this.angle_ = 0;\r\n    this.initialVelocity_ = 0;\r\n  }\r\n\r\n  /**\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   */\r\n  update(x, y) {\r\n    this.points_.push(x, y, Date.now());\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Whether we should do kinetic animation.\r\n   */\r\n  end() {\r\n    if (this.points_.length < 6) {\r\n      // at least 2 points are required (i.e. there must be at least 6 elements\r\n      // in the array)\r\n      return false;\r\n    }\r\n    const delay = Date.now() - this.delay_;\r\n    const lastIndex = this.points_.length - 3;\r\n    if (this.points_[lastIndex + 2] < delay) {\r\n      // the last tracked point is too old, which means that the user stopped\r\n      // panning before releasing the map\r\n      return false;\r\n    }\r\n\r\n    // get the first point which still falls into the delay time\r\n    let firstIndex = lastIndex - 3;\r\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\r\n      firstIndex -= 3;\r\n    }\r\n\r\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\r\n    // we don't want a duration of 0 (divide by zero)\r\n    // we also make sure the user panned for a duration of at least one frame\r\n    // (1/60s) to compute sane displacement values\r\n    if (duration < 1000 / 60) {\r\n      return false;\r\n    }\r\n\r\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\r\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\r\n    this.angle_ = Math.atan2(dy, dx);\r\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\r\n    return this.initialVelocity_ > this.minVelocity_;\r\n  }\r\n\r\n  /**\r\n   * @return {number} Total distance travelled (pixels).\r\n   */\r\n  getDistance() {\r\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\r\n  }\r\n\r\n  /**\r\n   * @return {number} Angle of the kinetic panning animation (radians).\r\n   */\r\n  getAngle() {\r\n    return this.angle_;\r\n  }\r\n}\r\n\r\nexport default Kinetic;\r\n", "/**\r\n * @module ol/renderer/Map\r\n */\r\nimport Disposable from '../Disposable.js';\r\nimport {TRUE} from '../functions.js';\r\nimport {abstract} from '../util.js';\r\nimport {compose as composeTransform, makeInverse} from '../transform.js';\r\nimport {getWidth} from '../extent.js';\r\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\r\nimport {inView} from '../layer/Layer.js';\r\nimport {wrapX} from '../coordinate.js';\r\n\r\n/**\r\n * @template T\r\n * @typedef HitMatch\r\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\r\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n * @property {number} distanceSq Squared distance.\r\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\r\n */\r\n\r\n/**\r\n * @abstract\r\n */\r\nclass MapRenderer extends Disposable {\r\n  /**\r\n   * @param {import(\"../Map.js\").default} map Map.\r\n   */\r\n  constructor(map) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../Map.js\").default}\r\n     */\r\n    this.map_ = map;\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../render/EventType.js\").default} type Event type.\r\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\r\n   */\r\n  dispatchRenderEvent(type, frameState) {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\r\n   * @protected\r\n   */\r\n  calculateMatrices2D(frameState) {\r\n    const viewState = frameState.viewState;\r\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\r\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\r\n\r\n    composeTransform(\r\n      coordinateToPixelTransform,\r\n      frameState.size[0] / 2,\r\n      frameState.size[1] / 2,\r\n      1 / viewState.resolution,\r\n      -1 / viewState.resolution,\r\n      -viewState.rotation,\r\n      -viewState.center[0],\r\n      -viewState.center[1],\r\n    );\r\n\r\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {boolean} checkWrapped Check for wrapped geometries.\r\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\r\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\r\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\r\n   *     function, only layers which are visible and for which this function\r\n   *     returns `true` will be tested for features.  By default, all visible\r\n   *     layers will be tested.\r\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\r\n   * @return {T|undefined} Callback result.\r\n   * @template S,T,U\r\n   */\r\n  forEachFeatureAtCoordinate(\r\n    coordinate,\r\n    frameState,\r\n    hitTolerance,\r\n    checkWrapped,\r\n    callback,\r\n    thisArg,\r\n    layerFilter,\r\n    thisArg2,\r\n  ) {\r\n    let result;\r\n    const viewState = frameState.viewState;\r\n\r\n    /**\r\n     * @param {boolean} managed Managed layer.\r\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n     * @return {T|undefined} Callback result.\r\n     */\r\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\r\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\r\n    }\r\n\r\n    const projection = viewState.projection;\r\n\r\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\r\n    const offsets = [[0, 0]];\r\n    if (projection.canWrapX() && checkWrapped) {\r\n      const projectionExtent = projection.getExtent();\r\n      const worldWidth = getWidth(projectionExtent);\r\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\r\n    }\r\n\r\n    const layerStates = frameState.layerStatesArray;\r\n    const numLayers = layerStates.length;\r\n\r\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\r\n    const tmpCoord = [];\r\n    for (let i = 0; i < offsets.length; i++) {\r\n      for (let j = numLayers - 1; j >= 0; --j) {\r\n        const layerState = layerStates[j];\r\n        const layer = layerState.layer;\r\n        if (\r\n          layer.hasRenderer() &&\r\n          inView(layerState, viewState) &&\r\n          layerFilter.call(thisArg2, layer)\r\n        ) {\r\n          const layerRenderer = layer.getRenderer();\r\n          const source = layer.getSource();\r\n          if (layerRenderer && source) {\r\n            const coordinates = source.getWrapX()\r\n              ? translatedCoordinate\r\n              : coordinate;\r\n            const callback = forEachFeatureAtCoordinate.bind(\r\n              null,\r\n              layerState.managed,\r\n            );\r\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\r\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\r\n            result = layerRenderer.forEachFeatureAtCoordinate(\r\n              tmpCoord,\r\n              frameState,\r\n              hitTolerance,\r\n              callback,\r\n              matches,\r\n            );\r\n          }\r\n          if (result) {\r\n            return result;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (matches.length === 0) {\r\n      return undefined;\r\n    }\r\n    const order = 1 / matches.length;\r\n    matches.forEach((m, i) => (m.distanceSq += i * order));\r\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\r\n    matches.some((m) => {\r\n      return (result = m.callback(m.feature, m.layer, m.geometry));\r\n    });\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {boolean} checkWrapped Check for wrapped geometries.\r\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\r\n   *     function, only layers which are visible and for which this function\r\n   *     returns `true` will be tested for features.  By default, all visible\r\n   *     layers will be tested.\r\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\r\n   * @return {boolean} Is there a feature at the given coordinate?\r\n   * @template U\r\n   */\r\n  hasFeatureAtCoordinate(\r\n    coordinate,\r\n    frameState,\r\n    hitTolerance,\r\n    checkWrapped,\r\n    layerFilter,\r\n    thisArg,\r\n  ) {\r\n    const hasFeature = this.forEachFeatureAtCoordinate(\r\n      coordinate,\r\n      frameState,\r\n      hitTolerance,\r\n      checkWrapped,\r\n      TRUE,\r\n      this,\r\n      layerFilter,\r\n      thisArg,\r\n    );\r\n\r\n    return hasFeature !== undefined;\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../Map.js\").default} Map.\r\n   */\r\n  getMap() {\r\n    return this.map_;\r\n  }\r\n\r\n  /**\r\n   * Render.\r\n   * @abstract\r\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\r\n   */\r\n  renderFrame(frameState) {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\r\n   * @protected\r\n   */\r\n  scheduleExpireIconCache(frameState) {\r\n    if (iconImageCache.canExpireCache()) {\r\n      frameState.postRenderFunctions.push(expireIconCache);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../Map.js\").default} map Map.\r\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\r\n */\r\nfunction expireIconCache(map, frameState) {\r\n  iconImageCache.expire();\r\n}\r\n\r\nexport default MapRenderer;\r\n", "/**\r\n * @module ol/renderer/Composite\r\n */\r\nimport BaseVectorLayer from '../layer/BaseVector.js';\r\nimport MapRenderer from './Map.js';\r\nimport ObjectEventType from '../ObjectEventType.js';\r\nimport RenderEvent from '../render/Event.js';\r\nimport RenderEventType from '../render/EventType.js';\r\nimport {CLASS_UNSELECTABLE} from '../css.js';\r\nimport {checkedFonts} from '../render/canvas.js';\r\nimport {inView} from '../layer/Layer.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport {replaceChildren} from '../dom.js';\r\n\r\n/**\r\n * @classdesc\r\n * Canvas map renderer.\r\n * @api\r\n */\r\nclass CompositeMapRenderer extends MapRenderer {\r\n  /**\r\n   * @param {import(\"../Map.js\").default} map Map.\r\n   */\r\n  constructor(map) {\r\n    super(map);\r\n\r\n    /**\r\n     * @type {import(\"../events.js\").EventsKey}\r\n     */\r\n    this.fontChangeListenerKey_ = listen(\r\n      checkedFonts,\r\n      ObjectEventType.PROPERTYCHANGE,\r\n      map.redrawText.bind(map),\r\n    );\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLDivElement}\r\n     */\r\n    this.element_ = document.createElement('div');\r\n    const style = this.element_.style;\r\n    style.position = 'absolute';\r\n    style.width = '100%';\r\n    style.height = '100%';\r\n    style.zIndex = '0';\r\n\r\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\r\n\r\n    const container = map.getViewport();\r\n    container.insertBefore(this.element_, container.firstChild || null);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<HTMLElement>}\r\n     */\r\n    this.children_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderedVisible_ = true;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../render/EventType.js\").default} type Event type.\r\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\r\n   */\r\n  dispatchRenderEvent(type, frameState) {\r\n    const map = this.getMap();\r\n    if (map.hasListener(type)) {\r\n      const event = new RenderEvent(type, undefined, frameState);\r\n      map.dispatchEvent(event);\r\n    }\r\n  }\r\n\r\n  disposeInternal() {\r\n    unlistenByKey(this.fontChangeListenerKey_);\r\n    this.element_.parentNode.removeChild(this.element_);\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * Render.\r\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\r\n   */\r\n  renderFrame(frameState) {\r\n    if (!frameState) {\r\n      if (this.renderedVisible_) {\r\n        this.element_.style.display = 'none';\r\n        this.renderedVisible_ = false;\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.calculateMatrices2D(frameState);\r\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\r\n\r\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\r\n      return a.zIndex - b.zIndex;\r\n    });\r\n    const declutter = layerStatesArray.some(\r\n      (layerState) =>\r\n        layerState.layer instanceof BaseVectorLayer &&\r\n        layerState.layer.getDeclutter(),\r\n    );\r\n    if (declutter) {\r\n      // Some layers need decluttering, turn on deferred rendering hint\r\n      frameState.declutter = {};\r\n    }\r\n    const viewState = frameState.viewState;\r\n\r\n    this.children_.length = 0;\r\n\r\n    const renderedLayerStates = [];\r\n    let previousElement = null;\r\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\r\n      const layerState = layerStatesArray[i];\r\n      frameState.layerIndex = i;\r\n\r\n      const layer = layerState.layer;\r\n      const sourceState = layer.getSourceState();\r\n      if (\r\n        !inView(layerState, viewState) ||\r\n        (sourceState != 'ready' && sourceState != 'undefined')\r\n      ) {\r\n        layer.unrender();\r\n        continue;\r\n      }\r\n\r\n      const element = layer.render(frameState, previousElement);\r\n      if (!element) {\r\n        continue;\r\n      }\r\n      if (element !== previousElement) {\r\n        this.children_.push(element);\r\n        previousElement = element;\r\n      }\r\n\r\n      renderedLayerStates.push(layerState);\r\n    }\r\n\r\n    this.declutter(frameState, renderedLayerStates);\r\n\r\n    replaceChildren(this.element_, this.children_);\r\n\r\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\r\n\r\n    if (!this.renderedVisible_) {\r\n      this.element_.style.display = '';\r\n      this.renderedVisible_ = true;\r\n    }\r\n\r\n    this.scheduleExpireIconCache(frameState);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\r\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\r\n   */\r\n  declutter(frameState, layerStates) {\r\n    for (let i = layerStates.length - 1; i >= 0; --i) {\r\n      const layerState = layerStates[i];\r\n      const layer = layerState.layer;\r\n      if (layer.getDeclutter()) {\r\n        layer.renderDeclutter(frameState, layerState);\r\n      }\r\n    }\r\n    layerStates.forEach((layerState) =>\r\n      layerState.layer.renderDeferred(frameState),\r\n    );\r\n  }\r\n}\r\n\r\nexport default CompositeMapRenderer;\r\n", "/**\r\n * @module ol/layer/Group\r\n */\r\nimport BaseLayer from './Base.js';\r\nimport Collection from '../Collection.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport Event from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport ObjectEventType from '../ObjectEventType.js';\r\nimport {assert} from '../asserts.js';\r\nimport {clear} from '../obj.js';\r\nimport {getIntersection} from '../extent.js';\r\nimport {getUid} from '../util.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\n\r\n/**\r\n * @typedef {'addlayer'|'removelayer'} EventType\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\r\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\r\n * a single event will be triggered (instead of one per layer in the group added or removed).\r\n */\r\nexport class GroupEvent extends Event {\r\n  /**\r\n   * @param {EventType} type The event type.\r\n   * @param {BaseLayer} layer The layer.\r\n   */\r\n  constructor(type, layer) {\r\n    super(type);\r\n\r\n    /**\r\n     * The added or removed layer.\r\n     * @type {BaseLayer}\r\n     * @api\r\n     */\r\n    this.layer = layer;\r\n  }\r\n}\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\r\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\r\n * visible.\r\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\r\n * be visible.\r\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\r\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n * @private\r\n */\r\nconst Property = {\r\n  LAYERS: 'layers',\r\n};\r\n\r\n/**\r\n * @classdesc\r\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\r\n *\r\n * A generic `change` event is triggered when the group/Collection changes.\r\n *\r\n * @api\r\n */\r\nclass LayerGroup extends BaseLayer {\r\n  /**\r\n   * @param {Options} [options] Layer options.\r\n   */\r\n  constructor(options) {\r\n    options = options || {};\r\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\r\n    delete baseOptions.layers;\r\n\r\n    let layers = options.layers;\r\n\r\n    super(baseOptions);\r\n\r\n    /***\r\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {GroupOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"../events.js\").EventsKey>}\r\n     */\r\n    this.layersListenerKeys_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\r\n     */\r\n    this.listenerKeys_ = {};\r\n\r\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\r\n\r\n    if (layers) {\r\n      if (Array.isArray(layers)) {\r\n        layers = new Collection(layers.slice(), {unique: true});\r\n      } else {\r\n        assert(\r\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\r\n          'Expected `layers` to be an array or a `Collection`',\r\n        );\r\n      }\r\n    } else {\r\n      layers = new Collection(undefined, {unique: true});\r\n    }\r\n\r\n    this.setLayers(layers);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleLayerChange_() {\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleLayersChanged_() {\r\n    this.layersListenerKeys_.forEach(unlistenByKey);\r\n    this.layersListenerKeys_.length = 0;\r\n\r\n    const layers = this.getLayers();\r\n    this.layersListenerKeys_.push(\r\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\r\n      listen(\r\n        layers,\r\n        CollectionEventType.REMOVE,\r\n        this.handleLayersRemove_,\r\n        this,\r\n      ),\r\n    );\r\n\r\n    for (const id in this.listenerKeys_) {\r\n      this.listenerKeys_[id].forEach(unlistenByKey);\r\n    }\r\n    clear(this.listenerKeys_);\r\n\r\n    const layersArray = layers.getArray();\r\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\r\n      const layer = layersArray[i];\r\n      this.registerLayerListeners_(layer);\r\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @param {BaseLayer} layer The layer.\r\n   */\r\n  registerLayerListeners_(layer) {\r\n    const listenerKeys = [\r\n      listen(\r\n        layer,\r\n        ObjectEventType.PROPERTYCHANGE,\r\n        this.handleLayerChange_,\r\n        this,\r\n      ),\r\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\r\n    ];\r\n\r\n    if (layer instanceof LayerGroup) {\r\n      listenerKeys.push(\r\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\r\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\r\n      );\r\n    }\r\n\r\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\r\n  }\r\n\r\n  /**\r\n   * @param {GroupEvent} event The layer group event.\r\n   */\r\n  handleLayerGroupAdd_(event) {\r\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\r\n  }\r\n\r\n  /**\r\n   * @param {GroupEvent} event The layer group event.\r\n   */\r\n  handleLayerGroupRemove_(event) {\r\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\r\n   * @private\r\n   */\r\n  handleLayersAdd_(collectionEvent) {\r\n    const layer = collectionEvent.element;\r\n    this.registerLayerListeners_(layer);\r\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\r\n   * @private\r\n   */\r\n  handleLayersRemove_(collectionEvent) {\r\n    const layer = collectionEvent.element;\r\n    const key = getUid(layer);\r\n    this.listenerKeys_[key].forEach(unlistenByKey);\r\n    delete this.listenerKeys_[key];\r\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\r\n   * in this group.\r\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\r\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getLayers() {\r\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\r\n      this.get(Property.LAYERS)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\r\n   * in this group.\r\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\r\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setLayers(layers) {\r\n    const collection = this.getLayers();\r\n    if (collection) {\r\n      const currentLayers = collection.getArray();\r\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\r\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\r\n      }\r\n    }\r\n\r\n    this.set(Property.LAYERS, layers);\r\n  }\r\n\r\n  /**\r\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\r\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\r\n   */\r\n  getLayersArray(array) {\r\n    array = array !== undefined ? array : [];\r\n    this.getLayers().forEach(function (layer) {\r\n      layer.getLayersArray(array);\r\n    });\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   * Get the layer states list and use this groups z-index as the default\r\n   * for all layers in this and nested groups, if it is unset at this point.\r\n   * If dest is not provided and this group's z-index is undefined\r\n   * 0 is used a the default z-index.\r\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\r\n   * of layer states (to be modified in place).\r\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\r\n   */\r\n  getLayerStatesArray(dest) {\r\n    const states = dest !== undefined ? dest : [];\r\n    const pos = states.length;\r\n\r\n    this.getLayers().forEach(function (layer) {\r\n      layer.getLayerStatesArray(states);\r\n    });\r\n\r\n    const ownLayerState = this.getLayerState();\r\n    let defaultZIndex = ownLayerState.zIndex;\r\n    if (!dest && ownLayerState.zIndex === undefined) {\r\n      defaultZIndex = 0;\r\n    }\r\n    for (let i = pos, ii = states.length; i < ii; i++) {\r\n      const layerState = states[i];\r\n      layerState.opacity *= ownLayerState.opacity;\r\n      layerState.visible = layerState.visible && ownLayerState.visible;\r\n      layerState.maxResolution = Math.min(\r\n        layerState.maxResolution,\r\n        ownLayerState.maxResolution,\r\n      );\r\n      layerState.minResolution = Math.max(\r\n        layerState.minResolution,\r\n        ownLayerState.minResolution,\r\n      );\r\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\r\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\r\n      if (ownLayerState.extent !== undefined) {\r\n        if (layerState.extent !== undefined) {\r\n          layerState.extent = getIntersection(\r\n            layerState.extent,\r\n            ownLayerState.extent,\r\n          );\r\n        } else {\r\n          layerState.extent = ownLayerState.extent;\r\n        }\r\n      }\r\n      if (layerState.zIndex === undefined) {\r\n        layerState.zIndex = defaultZIndex;\r\n      }\r\n    }\r\n\r\n    return states;\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../source/Source.js\").State} Source state.\r\n   */\r\n  getSourceState() {\r\n    return 'ready';\r\n  }\r\n}\r\n\r\nexport default LayerGroup;\r\n", "/**\r\n * @module ol/MapEvent\r\n */\r\nimport Event from './events/Event.js';\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted as map events are instances of this type.\r\n * See {@link module:ol/Map~Map} for which events trigger a map event.\r\n */\r\nclass MapEvent extends Event {\r\n  /**\r\n   * @param {string} type Event type.\r\n   * @param {import(\"./Map.js\").default} map Map.\r\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\r\n   */\r\n  constructor(type, map, frameState) {\r\n    super(type);\r\n\r\n    /**\r\n     * The map where the event occurred.\r\n     * @type {import(\"./Map.js\").default}\r\n     * @api\r\n     */\r\n    this.map = map;\r\n\r\n    /**\r\n     * The frame state at the time of the event.\r\n     * @type {?import(\"./Map.js\").FrameState}\r\n     * @api\r\n     */\r\n    this.frameState = frameState !== undefined ? frameState : null;\r\n  }\r\n}\r\n\r\nexport default MapEvent;\r\n", "/**\r\n * @module ol/MapBrowserEvent\r\n */\r\nimport MapEvent from './MapEvent.js';\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted as map browser events are instances of this type.\r\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\r\n * @template {UIEvent} EVENT\r\n */\r\nclass MapBrowserEvent extends MapEvent {\r\n  /**\r\n   * @param {string} type Event type.\r\n   * @param {import(\"./Map.js\").default} map Map.\r\n   * @param {EVENT} originalEvent Original event.\r\n   * @param {boolean} [dragging] Is the map currently being dragged?\r\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\r\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\r\n   */\r\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\r\n    super(type, map, frameState);\r\n\r\n    /**\r\n     * The original browser event.\r\n     * @const\r\n     * @type {EVENT}\r\n     * @api\r\n     */\r\n    this.originalEvent = originalEvent;\r\n\r\n    /**\r\n     * The map pixel relative to the viewport corresponding to the original browser event.\r\n     * @type {?import(\"./pixel.js\").Pixel}\r\n     */\r\n    this.pixel_ = null;\r\n\r\n    /**\r\n     * The coordinate in the user projection corresponding to the original browser event.\r\n     * @type {?import(\"./coordinate.js\").Coordinate}\r\n     */\r\n    this.coordinate_ = null;\r\n\r\n    /**\r\n     * Indicates if the map is currently being dragged. Only set for\r\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\r\n     *\r\n     * @type {boolean}\r\n     * @api\r\n     */\r\n    this.dragging = dragging !== undefined ? dragging : false;\r\n\r\n    /**\r\n     * @type {Array<PointerEvent>|undefined}\r\n     */\r\n    this.activePointers = activePointers;\r\n  }\r\n\r\n  /**\r\n   * The map pixel relative to the viewport corresponding to the original event.\r\n   * @type {import(\"./pixel.js\").Pixel}\r\n   * @api\r\n   */\r\n  get pixel() {\r\n    if (!this.pixel_) {\r\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\r\n    }\r\n    return this.pixel_;\r\n  }\r\n  set pixel(pixel) {\r\n    this.pixel_ = pixel;\r\n  }\r\n\r\n  /**\r\n   * The coordinate corresponding to the original browser event.  This will be in the user\r\n   * projection if one is set.  Otherwise it will be in the view projection.\r\n   * @type {import(\"./coordinate.js\").Coordinate}\r\n   * @api\r\n   */\r\n  get coordinate() {\r\n    if (!this.coordinate_) {\r\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\r\n    }\r\n    return this.coordinate_;\r\n  }\r\n  set coordinate(coordinate) {\r\n    this.coordinate_ = coordinate;\r\n  }\r\n\r\n  /**\r\n   * Prevents the default browser action.\r\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\r\n   * @api\r\n   */\r\n  preventDefault() {\r\n    super.preventDefault();\r\n    if ('preventDefault' in this.originalEvent) {\r\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Prevents further propagation of the current event.\r\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\r\n   * @api\r\n   */\r\n  stopPropagation() {\r\n    super.stopPropagation();\r\n    if ('stopPropagation' in this.originalEvent) {\r\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\r\n    }\r\n  }\r\n}\r\n\r\nexport default MapBrowserEvent;\r\n", "/**\r\n * @module ol/MapBrowserEventType\r\n */\r\nimport EventType from './events/EventType.js';\r\n\r\n/**\r\n * Constants for event names.\r\n * @enum {string}\r\n */\r\nexport default {\r\n  /**\r\n   * A true single click with no dragging and no double click. Note that this\r\n   * event is delayed by 250 ms to ensure that it is not a double click.\r\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\r\n   * @api\r\n   */\r\n  SINGLECLICK: 'singleclick',\r\n\r\n  /**\r\n   * A click with no dragging. A double click will fire two of this.\r\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\r\n   * @api\r\n   */\r\n  CLICK: EventType.CLICK,\r\n\r\n  /**\r\n   * A true double click, with no dragging.\r\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\r\n   * @api\r\n   */\r\n  DBLCLICK: EventType.DBLCLICK,\r\n\r\n  /**\r\n   * Triggered when a pointer is dragged.\r\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\r\n   * @api\r\n   */\r\n  POINTERDRAG: 'pointerdrag',\r\n\r\n  /**\r\n   * Triggered when a pointer is moved. Note that on touch devices this is\r\n   * triggered when the map is panned, so is not the same as mousemove.\r\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\r\n   * @api\r\n   */\r\n  POINTERMOVE: 'pointermove',\r\n\r\n  POINTERDOWN: 'pointerdown',\r\n  POINTERUP: 'pointerup',\r\n  POINTEROVER: 'pointerover',\r\n  POINTEROUT: 'pointerout',\r\n  POINTERENTER: 'pointerenter',\r\n  POINTERLEAVE: 'pointerleave',\r\n  POINTERCANCEL: 'pointercancel',\r\n};\r\n\r\n/***\r\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\r\n */\r\n", "/**\r\n * @module ol/pointer/EventType\r\n */\r\n\r\n/**\r\n * Constants for event names.\r\n * @enum {string}\r\n */\r\nexport default {\r\n  POINTERMOVE: 'pointermove',\r\n  POINTERDOWN: 'pointerdown',\r\n  POINTERUP: 'pointerup',\r\n  POINTEROVER: 'pointerover',\r\n  POINTEROUT: 'pointerout',\r\n  POINTERENTER: 'pointerenter',\r\n  POINTERLEAVE: 'pointerleave',\r\n  POINTERCANCEL: 'pointercancel',\r\n};\r\n", "/**\r\n * @module ol/MapBrowserEventHandler\r\n */\r\n\r\nimport EventType from './events/EventType.js';\r\nimport MapBrowserEvent from './MapBrowserEvent.js';\r\nimport MapBrowserEventType from './MapBrowserEventType.js';\r\nimport PointerEventType from './pointer/EventType.js';\r\nimport Target from './events/Target.js';\r\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\r\nimport {listen, unlistenByKey} from './events.js';\r\n\r\nclass MapBrowserEventHandler extends Target {\r\n  /**\r\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\r\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\r\n   */\r\n  constructor(map, moveTolerance) {\r\n    super(map);\r\n\r\n    /**\r\n     * This is the element that we will listen to the real events on.\r\n     * @type {import(\"./Map.js\").default}\r\n     * @private\r\n     */\r\n    this.map_ = map;\r\n\r\n    /**\r\n     * @type {ReturnType<typeof setTimeout>}\r\n     * @private\r\n     */\r\n    this.clickTimeoutId_;\r\n\r\n    /**\r\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\r\n     * @type {boolean}\r\n     */\r\n    this.emulateClicks_ = false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.dragging_ = false;\r\n\r\n    /**\r\n     * @type {!Array<import(\"./events.js\").EventsKey>}\r\n     * @private\r\n     */\r\n    this.dragListenerKeys_ = [];\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\r\n\r\n    /**\r\n     * The most recent \"down\" type event (or null if none have occurred).\r\n     * Set on pointerdown.\r\n     * @type {PointerEvent|null}\r\n     * @private\r\n     */\r\n    this.down_ = null;\r\n\r\n    const element = this.map_.getViewport();\r\n\r\n    /**\r\n     * @type {Array<PointerEvent>}\r\n     * @private\r\n     */\r\n    this.activePointers_ = [];\r\n\r\n    /**\r\n     * @type {!Object<number, Event>}\r\n     * @private\r\n     */\r\n    this.trackedTouches_ = {};\r\n\r\n    this.element_ = element;\r\n\r\n    /**\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     * @private\r\n     */\r\n    this.pointerdownListenerKey_ = listen(\r\n      element,\r\n      PointerEventType.POINTERDOWN,\r\n      this.handlePointerDown_,\r\n      this,\r\n    );\r\n\r\n    /**\r\n     * @type {PointerEvent}\r\n     * @private\r\n     */\r\n    this.originalPointerMoveEvent_;\r\n\r\n    /**\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     * @private\r\n     */\r\n    this.relayedListenerKey_ = listen(\r\n      element,\r\n      PointerEventType.POINTERMOVE,\r\n      this.relayMoveEvent_,\r\n      this,\r\n    );\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\r\n\r\n    this.element_.addEventListener(\r\n      EventType.TOUCHMOVE,\r\n      this.boundHandleTouchMove_,\r\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  emulateClick_(pointerEvent) {\r\n    let newEvent = new MapBrowserEvent(\r\n      MapBrowserEventType.CLICK,\r\n      this.map_,\r\n      pointerEvent,\r\n    );\r\n    this.dispatchEvent(newEvent);\r\n    if (this.clickTimeoutId_ !== undefined) {\r\n      // double-click\r\n      clearTimeout(this.clickTimeoutId_);\r\n      this.clickTimeoutId_ = undefined;\r\n      newEvent = new MapBrowserEvent(\r\n        MapBrowserEventType.DBLCLICK,\r\n        this.map_,\r\n        pointerEvent,\r\n      );\r\n      this.dispatchEvent(newEvent);\r\n    } else {\r\n      // click\r\n      this.clickTimeoutId_ = setTimeout(() => {\r\n        this.clickTimeoutId_ = undefined;\r\n        const newEvent = new MapBrowserEvent(\r\n          MapBrowserEventType.SINGLECLICK,\r\n          this.map_,\r\n          pointerEvent,\r\n        );\r\n        this.dispatchEvent(newEvent);\r\n      }, 250);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Keeps track on how many pointers are currently active.\r\n   *\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  updateActivePointers_(pointerEvent) {\r\n    const event = pointerEvent;\r\n    const id = event.pointerId;\r\n\r\n    if (\r\n      event.type == MapBrowserEventType.POINTERUP ||\r\n      event.type == MapBrowserEventType.POINTERCANCEL\r\n    ) {\r\n      delete this.trackedTouches_[id];\r\n      for (const pointerId in this.trackedTouches_) {\r\n        if (this.trackedTouches_[pointerId].target !== event.target) {\r\n          // Some platforms assign a new pointerId when the target changes.\r\n          // If this happens, delete one tracked pointer. If there is more\r\n          // than one tracked pointer for the old target, it will be cleared\r\n          // by subsequent POINTERUP events from other pointers.\r\n          delete this.trackedTouches_[pointerId];\r\n          break;\r\n        }\r\n      }\r\n    } else if (\r\n      event.type == MapBrowserEventType.POINTERDOWN ||\r\n      event.type == MapBrowserEventType.POINTERMOVE\r\n    ) {\r\n      this.trackedTouches_[id] = event;\r\n    }\r\n    this.activePointers_ = Object.values(this.trackedTouches_);\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  handlePointerUp_(pointerEvent) {\r\n    this.updateActivePointers_(pointerEvent);\r\n    const newEvent = new MapBrowserEvent(\r\n      MapBrowserEventType.POINTERUP,\r\n      this.map_,\r\n      pointerEvent,\r\n      undefined,\r\n      undefined,\r\n      this.activePointers_,\r\n    );\r\n    this.dispatchEvent(newEvent);\r\n\r\n    // We emulate click events on left mouse button click, touch contact, and pen\r\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\r\n    // to 0).\r\n    // See http://www.w3.org/TR/pointerevents/#button-states\r\n    // We only fire click, singleclick, and doubleclick if nobody has called\r\n    // event.preventDefault().\r\n    if (\r\n      this.emulateClicks_ &&\r\n      !newEvent.defaultPrevented &&\r\n      !this.dragging_ &&\r\n      this.isMouseActionButton_(pointerEvent)\r\n    ) {\r\n      this.emulateClick_(this.down_);\r\n    }\r\n\r\n    if (this.activePointers_.length === 0) {\r\n      this.dragListenerKeys_.forEach(unlistenByKey);\r\n      this.dragListenerKeys_.length = 0;\r\n      this.dragging_ = false;\r\n      this.down_ = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @return {boolean} If the left mouse button was pressed.\r\n   * @private\r\n   */\r\n  isMouseActionButton_(pointerEvent) {\r\n    return pointerEvent.button === 0;\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  handlePointerDown_(pointerEvent) {\r\n    this.emulateClicks_ = this.activePointers_.length === 0;\r\n    this.updateActivePointers_(pointerEvent);\r\n    const newEvent = new MapBrowserEvent(\r\n      MapBrowserEventType.POINTERDOWN,\r\n      this.map_,\r\n      pointerEvent,\r\n      undefined,\r\n      undefined,\r\n      this.activePointers_,\r\n    );\r\n    this.dispatchEvent(newEvent);\r\n\r\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\r\n    Object.defineProperty(this.down_, 'target', {\r\n      writable: false,\r\n      value: pointerEvent.target,\r\n    });\r\n\r\n    if (this.dragListenerKeys_.length === 0) {\r\n      const doc = this.map_.getOwnerDocument();\r\n      this.dragListenerKeys_.push(\r\n        listen(\r\n          doc,\r\n          MapBrowserEventType.POINTERMOVE,\r\n          this.handlePointerMove_,\r\n          this,\r\n        ),\r\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\r\n        /* Note that the listener for `pointercancel is set up on\r\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\r\n         * the `pointerup` and `pointermove` listeners.\r\n         *\r\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\r\n         * issues `pointercancel` events, when there was no `touchend` for a\r\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\r\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\r\n         * But `documentPointerEventHandler_` doesn't know about the first\r\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\r\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\r\n         * only registered there.\r\n         */\r\n        listen(\r\n          this.element_,\r\n          MapBrowserEventType.POINTERCANCEL,\r\n          this.handlePointerUp_,\r\n          this,\r\n        ),\r\n      );\r\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\r\n        this.dragListenerKeys_.push(\r\n          listen(\r\n            this.element_.getRootNode(),\r\n            MapBrowserEventType.POINTERUP,\r\n            this.handlePointerUp_,\r\n            this,\r\n          ),\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  handlePointerMove_(pointerEvent) {\r\n    // Between pointerdown and pointerup, pointermove events are triggered.\r\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\r\n    // moved a significant distance.\r\n    if (this.isMoving_(pointerEvent)) {\r\n      this.updateActivePointers_(pointerEvent);\r\n      this.dragging_ = true;\r\n      const newEvent = new MapBrowserEvent(\r\n        MapBrowserEventType.POINTERDRAG,\r\n        this.map_,\r\n        pointerEvent,\r\n        this.dragging_,\r\n        undefined,\r\n        this.activePointers_,\r\n      );\r\n      this.dispatchEvent(newEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Wrap and relay a pointermove event.\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  relayMoveEvent_(pointerEvent) {\r\n    this.originalPointerMoveEvent_ = pointerEvent;\r\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\r\n    this.dispatchEvent(\r\n      new MapBrowserEvent(\r\n        MapBrowserEventType.POINTERMOVE,\r\n        this.map_,\r\n        pointerEvent,\r\n        dragging,\r\n      ),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\r\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\r\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\r\n   * when an interaction (currently `DragPan` handles the event.\r\n   * @param {TouchEvent} event Event.\r\n   * @private\r\n   */\r\n  handleTouchMove_(event) {\r\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\r\n    // may not be initialized yet when we get here on a platform without native pointer events,\r\n    // when elm-pep is used as pointer events polyfill.\r\n    const originalEvent = this.originalPointerMoveEvent_;\r\n    if (\r\n      (!originalEvent || originalEvent.defaultPrevented) &&\r\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\r\n    ) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @return {boolean} Is moving.\r\n   * @private\r\n   */\r\n  isMoving_(pointerEvent) {\r\n    return (\r\n      this.dragging_ ||\r\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\r\n        this.moveTolerance_ ||\r\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Clean up.\r\n   */\r\n  disposeInternal() {\r\n    if (this.relayedListenerKey_) {\r\n      unlistenByKey(this.relayedListenerKey_);\r\n      this.relayedListenerKey_ = null;\r\n    }\r\n    this.element_.removeEventListener(\r\n      EventType.TOUCHMOVE,\r\n      this.boundHandleTouchMove_,\r\n    );\r\n\r\n    if (this.pointerdownListenerKey_) {\r\n      unlistenByKey(this.pointerdownListenerKey_);\r\n      this.pointerdownListenerKey_ = null;\r\n    }\r\n\r\n    this.dragListenerKeys_.forEach(unlistenByKey);\r\n    this.dragListenerKeys_.length = 0;\r\n\r\n    this.element_ = null;\r\n    super.disposeInternal();\r\n  }\r\n}\r\n\r\nexport default MapBrowserEventHandler;\r\n", "/**\r\n * @module ol/MapEventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  /**\r\n   * Triggered after a map frame is rendered.\r\n   * @event module:ol/MapEvent~MapEvent#postrender\r\n   * @api\r\n   */\r\n  POSTRENDER: 'postrender',\r\n\r\n  /**\r\n   * Triggered when the map starts moving.\r\n   * @event module:ol/MapEvent~MapEvent#movestart\r\n   * @api\r\n   */\r\n  MOVESTART: 'movestart',\r\n\r\n  /**\r\n   * Triggered after the map is moved.\r\n   * @event module:ol/MapEvent~MapEvent#moveend\r\n   * @api\r\n   */\r\n  MOVEEND: 'moveend',\r\n\r\n  /**\r\n   * Triggered when loading of additional map data (tiles, images, features) starts.\r\n   * @event module:ol/MapEvent~MapEvent#loadstart\r\n   * @api\r\n   */\r\n  LOADSTART: 'loadstart',\r\n\r\n  /**\r\n   * Triggered when loading of additional map data has completed.\r\n   * @event module:ol/MapEvent~MapEvent#loadend\r\n   * @api\r\n   */\r\n  LOADEND: 'loadend',\r\n};\r\n\r\n/***\r\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\r\n */\r\n", "/**\r\n * @module ol/MapProperty\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  LAYERGROUP: 'layergroup',\r\n  SIZE: 'size',\r\n  TARGET: 'target',\r\n  VIEW: 'view',\r\n};\r\n", "/**\r\n * @module ol/control/Control\r\n */\r\nimport BaseObject from '../Object.js';\r\nimport MapEventType from '../MapEventType.js';\r\nimport {VOID} from '../functions.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport {removeNode} from '../dom.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {HTMLElement} [element] The element is the control's\r\n * container element. This only needs to be specified if you're developing\r\n * a custom control.\r\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\r\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\r\n * callback.\r\n * @property {HTMLElement|string} [target] Specify a target if you want\r\n * the control to be rendered outside of the map's viewport.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A control is a visible widget with a DOM element in a fixed position on the\r\n * screen. They can involve user input (buttons), or be informational only;\r\n * the position is determined using CSS. By default these are placed in the\r\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\r\n * any outside DOM element.\r\n *\r\n * This is the base class for controls. You can use it for simple custom\r\n * controls by creating the element with listeners, creating an instance:\r\n * ```js\r\n * const myControl = new Control({element: myElement});\r\n * ```\r\n * and then adding this to the map.\r\n *\r\n * The main advantage of having this as a control rather than a simple separate\r\n * DOM element is that preventing propagation is handled for you. Controls\r\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\r\n *\r\n * You can also extend this base for your own control class. See\r\n * examples/custom-controls for an example of how to do this.\r\n *\r\n * @api\r\n */\r\nclass Control extends BaseObject {\r\n  /**\r\n   * @param {Options} options Control options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    const element = options.element;\r\n    if (element && !options.target && !element.style.pointerEvents) {\r\n      element.style.pointerEvents = 'auto';\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     * @type {HTMLElement}\r\n     */\r\n    this.element = element ? element : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.target_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../Map.js\").default|null}\r\n     */\r\n    this.map_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {!Array<import(\"../events.js\").EventsKey>}\r\n     */\r\n    this.listenerKeys = [];\r\n\r\n    if (options.render) {\r\n      this.render = options.render;\r\n    }\r\n\r\n    if (options.target) {\r\n      this.setTarget(options.target);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clean up.\r\n   */\r\n  disposeInternal() {\r\n    removeNode(this.element);\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * Get the map associated with this control.\r\n   * @return {import(\"../Map.js\").default|null} Map.\r\n   * @api\r\n   */\r\n  getMap() {\r\n    return this.map_;\r\n  }\r\n\r\n  /**\r\n   * Remove the control from its current map and attach it to the new map.\r\n   * Pass `null` to just remove the control from the current map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../Map.js\").default|null} map Map.\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    if (this.map_) {\r\n      removeNode(this.element);\r\n    }\r\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\r\n      unlistenByKey(this.listenerKeys[i]);\r\n    }\r\n    this.listenerKeys.length = 0;\r\n    this.map_ = map;\r\n    if (map) {\r\n      const target = this.target_\r\n        ? this.target_\r\n        : map.getOverlayContainerStopEvent();\r\n      target.appendChild(this.element);\r\n      if (this.render !== VOID) {\r\n        this.listenerKeys.push(\r\n          listen(map, MapEventType.POSTRENDER, this.render, this),\r\n        );\r\n      }\r\n      map.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Renders the control.\r\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n   * @api\r\n   */\r\n  render(mapEvent) {}\r\n\r\n  /**\r\n   * This function is used to set a target element for the control. It has no\r\n   * effect if it is called after the control has been added to the map (i.e.\r\n   * after `setMap` is called on the control). If no `target` is set in the\r\n   * options passed to the control constructor and if `setTarget` is not called\r\n   * then the control is added to the map's overlay container.\r\n   * @param {HTMLElement|string} target Target.\r\n   * @api\r\n   */\r\n  setTarget(target) {\r\n    this.target_ =\r\n      typeof target === 'string' ? document.getElementById(target) : target;\r\n  }\r\n}\r\n\r\nexport default Control;\r\n", "/**\r\n * @module ol/control/Attribution\r\n */\r\nimport Control from './Control.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\r\nimport {equals} from '../array.js';\r\nimport {removeChildren, replaceNode} from '../dom.js';\r\nimport {toPromise} from '../functions.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-attribution'] CSS class name.\r\n * @property {HTMLElement|string} [target] Specify a target if you\r\n * want the control to be rendered outside of the map's\r\n * viewport.\r\n * @property {boolean} [collapsible] Specify if attributions can\r\n * be collapsed. If not specified, sources control this behavior with their\r\n * `attributionsCollapsible` setting.\r\n * @property {boolean} [collapsed=true] Specify if attributions should\r\n * be collapsed at startup.\r\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\r\n * @property {string|HTMLElement} [label='i'] Text label to use for the\r\n * collapsed attributions button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\r\n * collapsed attributions button.\r\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\r\n * for the expanded attributions button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\r\n * expanded attributions button.\r\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\r\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\r\n * callback.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Control to show all the attributions associated with the layer sources\r\n * in the map. This control is one of the default controls included in maps.\r\n * By default it will show in the bottom right portion of the map, but this can\r\n * be changed by using a css selector for `.ol-attribution`.\r\n *\r\n * @api\r\n */\r\nclass Attribution extends Control {\r\n  /**\r\n   * @param {Options} [options] Attribution options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      render: options.render,\r\n      target: options.target,\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.ulElement_ = document.createElement('ul');\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.collapsed_ =\r\n      options.collapsed !== undefined ? options.collapsed : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.userCollapsed_ = this.collapsed_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.overrideCollapsible_ = options.collapsible !== undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.collapsible_ =\r\n      options.collapsible !== undefined ? options.collapsible : true;\r\n\r\n    if (!this.collapsible_) {\r\n      this.collapsed_ = false;\r\n    }\r\n\r\n    const className =\r\n      options.className !== undefined ? options.className : 'ol-attribution';\r\n\r\n    const tipLabel =\r\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\r\n\r\n    const expandClassName =\r\n      options.expandClassName !== undefined\r\n        ? options.expandClassName\r\n        : className + '-expand';\r\n\r\n    const collapseLabel =\r\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\r\n\r\n    const collapseClassName =\r\n      options.collapseClassName !== undefined\r\n        ? options.collapseClassName\r\n        : className + '-collapse';\r\n\r\n    if (typeof collapseLabel === 'string') {\r\n      /**\r\n       * @private\r\n       * @type {HTMLElement}\r\n       */\r\n      this.collapseLabel_ = document.createElement('span');\r\n      this.collapseLabel_.textContent = collapseLabel;\r\n      this.collapseLabel_.className = collapseClassName;\r\n    } else {\r\n      this.collapseLabel_ = collapseLabel;\r\n    }\r\n\r\n    const label = options.label !== undefined ? options.label : 'i';\r\n\r\n    if (typeof label === 'string') {\r\n      /**\r\n       * @private\r\n       * @type {HTMLElement}\r\n       */\r\n      this.label_ = document.createElement('span');\r\n      this.label_.textContent = label;\r\n      this.label_.className = expandClassName;\r\n    } else {\r\n      this.label_ = label;\r\n    }\r\n\r\n    const activeLabel =\r\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.toggleButton_ = document.createElement('button');\r\n    this.toggleButton_.setAttribute('type', 'button');\r\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\r\n    this.toggleButton_.title = tipLabel;\r\n    this.toggleButton_.appendChild(activeLabel);\r\n\r\n    this.toggleButton_.addEventListener(\r\n      EventType.CLICK,\r\n      this.handleClick_.bind(this),\r\n      false,\r\n    );\r\n\r\n    const cssClasses =\r\n      className +\r\n      ' ' +\r\n      CLASS_UNSELECTABLE +\r\n      ' ' +\r\n      CLASS_CONTROL +\r\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\r\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\r\n    const element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(this.toggleButton_);\r\n    element.appendChild(this.ulElement_);\r\n\r\n    /**\r\n     * A list of currently rendered resolutions.\r\n     * @type {Array<string>}\r\n     * @private\r\n     */\r\n    this.renderedAttributions_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderedVisible_ = true;\r\n  }\r\n\r\n  /**\r\n   * Collect a list of visible attributions and set the collapsible state.\r\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\r\n   * @return {Array<string>} Attributions.\r\n   * @private\r\n   */\r\n  collectSourceAttributions_(frameState) {\r\n    const visibleAttributions = Array.from(\r\n      new Set(\r\n        this.getMap()\r\n          .getAllLayers()\r\n          .flatMap((layer) => layer.getAttributions(frameState)),\r\n      ),\r\n    );\r\n\r\n    const collapsible = !this.getMap()\r\n      .getAllLayers()\r\n      .some(\r\n        (layer) =>\r\n          layer.getSource() &&\r\n          layer.getSource().getAttributionsCollapsible() === false,\r\n      );\r\n    if (!this.overrideCollapsible_) {\r\n      this.setCollapsible(collapsible);\r\n    }\r\n    return visibleAttributions;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\r\n   */\r\n  async updateElement_(frameState) {\r\n    if (!frameState) {\r\n      if (this.renderedVisible_) {\r\n        this.element.style.display = 'none';\r\n        this.renderedVisible_ = false;\r\n      }\r\n      return;\r\n    }\r\n\r\n    const attributions = await Promise.all(\r\n      this.collectSourceAttributions_(frameState).map((attribution) =>\r\n        toPromise(() => attribution),\r\n      ),\r\n    );\r\n\r\n    const visible = attributions.length > 0;\r\n    if (this.renderedVisible_ != visible) {\r\n      this.element.style.display = visible ? '' : 'none';\r\n      this.renderedVisible_ = visible;\r\n    }\r\n\r\n    if (equals(attributions, this.renderedAttributions_)) {\r\n      return;\r\n    }\r\n\r\n    removeChildren(this.ulElement_);\r\n\r\n    // append the attributions\r\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\r\n      const element = document.createElement('li');\r\n      element.innerHTML = attributions[i];\r\n      this.ulElement_.appendChild(element);\r\n    }\r\n\r\n    this.renderedAttributions_ = attributions;\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  handleClick_(event) {\r\n    event.preventDefault();\r\n    this.handleToggle_();\r\n    this.userCollapsed_ = this.collapsed_;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleToggle_() {\r\n    this.element.classList.toggle(CLASS_COLLAPSED);\r\n    if (this.collapsed_) {\r\n      replaceNode(this.collapseLabel_, this.label_);\r\n    } else {\r\n      replaceNode(this.label_, this.collapseLabel_);\r\n    }\r\n    this.collapsed_ = !this.collapsed_;\r\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\r\n  }\r\n\r\n  /**\r\n   * Return `true` if the attribution is collapsible, `false` otherwise.\r\n   * @return {boolean} True if the widget is collapsible.\r\n   * @api\r\n   */\r\n  getCollapsible() {\r\n    return this.collapsible_;\r\n  }\r\n\r\n  /**\r\n   * Set whether the attribution should be collapsible.\r\n   * @param {boolean} collapsible True if the widget is collapsible.\r\n   * @api\r\n   */\r\n  setCollapsible(collapsible) {\r\n    if (this.collapsible_ === collapsible) {\r\n      return;\r\n    }\r\n    this.collapsible_ = collapsible;\r\n    this.element.classList.toggle('ol-uncollapsible');\r\n    if (this.userCollapsed_) {\r\n      this.handleToggle_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collapse or expand the attribution according to the passed parameter. Will\r\n   * not do anything if the attribution isn't collapsible or if the current\r\n   * collapsed state is already the one requested.\r\n   * @param {boolean} collapsed True if the widget is collapsed.\r\n   * @api\r\n   */\r\n  setCollapsed(collapsed) {\r\n    this.userCollapsed_ = collapsed;\r\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\r\n      return;\r\n    }\r\n    this.handleToggle_();\r\n  }\r\n\r\n  /**\r\n   * Return `true` when the attribution is currently collapsed or `false`\r\n   * otherwise.\r\n   * @return {boolean} True if the widget is collapsed.\r\n   * @api\r\n   */\r\n  getCollapsed() {\r\n    return this.collapsed_;\r\n  }\r\n\r\n  /**\r\n   * Update the attribution element.\r\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n   * @override\r\n   */\r\n  render(mapEvent) {\r\n    this.updateElement_(mapEvent.frameState);\r\n  }\r\n}\r\n\r\nexport default Attribution;\r\n", "/**\r\n * @module ol/control/Rotate\r\n */\r\nimport Control from './Control.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\r\nimport {easeOut} from '../easing.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-rotate'] CSS class name.\r\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\r\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\r\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\r\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\r\n * @property {function():void} [resetNorth] Function called when the control is clicked.\r\n * This will override the default `resetNorth`.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\r\n * rendered outside of the map's viewport.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A button control to reset rotation to 0.\r\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\r\n * selector is added to the button when the rotation is 0.\r\n *\r\n * @api\r\n */\r\nclass Rotate extends Control {\r\n  /**\r\n   * @param {Options} [options] Rotate options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      render: options.render,\r\n      target: options.target,\r\n    });\r\n\r\n    const className =\r\n      options.className !== undefined ? options.className : 'ol-rotate';\r\n\r\n    const label = options.label !== undefined ? options.label : '\\u21E7';\r\n\r\n    const compassClassName =\r\n      options.compassClassName !== undefined\r\n        ? options.compassClassName\r\n        : 'ol-compass';\r\n\r\n    /**\r\n     * @type {HTMLElement}\r\n     * @private\r\n     */\r\n    this.label_ = null;\r\n\r\n    if (typeof label === 'string') {\r\n      this.label_ = document.createElement('span');\r\n      this.label_.className = compassClassName;\r\n      this.label_.textContent = label;\r\n    } else {\r\n      this.label_ = label;\r\n      this.label_.classList.add(compassClassName);\r\n    }\r\n\r\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\r\n\r\n    const button = document.createElement('button');\r\n    button.className = className + '-reset';\r\n    button.setAttribute('type', 'button');\r\n    button.title = tipLabel;\r\n    button.appendChild(this.label_);\r\n\r\n    button.addEventListener(\r\n      EventType.CLICK,\r\n      this.handleClick_.bind(this),\r\n      false,\r\n    );\r\n\r\n    const cssClasses =\r\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\r\n    const element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(button);\r\n\r\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.rotation_ = undefined;\r\n\r\n    if (this.autoHide_) {\r\n      this.element.classList.add(CLASS_HIDDEN);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  handleClick_(event) {\r\n    event.preventDefault();\r\n    if (this.callResetNorth_ !== undefined) {\r\n      this.callResetNorth_();\r\n    } else {\r\n      this.resetNorth_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  resetNorth_() {\r\n    const map = this.getMap();\r\n    const view = map.getView();\r\n    if (!view) {\r\n      // the map does not have a view, so we can't act\r\n      // upon it\r\n      return;\r\n    }\r\n    const rotation = view.getRotation();\r\n    if (rotation !== undefined) {\r\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\r\n        view.animate({\r\n          rotation: 0,\r\n          duration: this.duration_,\r\n          easing: easeOut,\r\n        });\r\n      } else {\r\n        view.setRotation(0);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the rotate control element.\r\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n   * @override\r\n   */\r\n  render(mapEvent) {\r\n    const frameState = mapEvent.frameState;\r\n    if (!frameState) {\r\n      return;\r\n    }\r\n    const rotation = frameState.viewState.rotation;\r\n    if (rotation != this.rotation_) {\r\n      const transform = 'rotate(' + rotation + 'rad)';\r\n      if (this.autoHide_) {\r\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\r\n        if (!contains && rotation === 0) {\r\n          this.element.classList.add(CLASS_HIDDEN);\r\n        } else if (contains && rotation !== 0) {\r\n          this.element.classList.remove(CLASS_HIDDEN);\r\n        }\r\n      }\r\n      this.label_.style.transform = transform;\r\n    }\r\n    this.rotation_ = rotation;\r\n  }\r\n}\r\n\r\nexport default Rotate;\r\n", "/**\r\n * @module ol/control/Zoom\r\n */\r\nimport Control from './Control.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\r\nimport {easeOut} from '../easing.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {string} [className='ol-zoom'] CSS class name.\r\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\r\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\r\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\r\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\r\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\r\n * @property {number} [delta=1] The zoom delta applied on each click.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\r\n * rendered outside of the map's viewport.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A control with 2 buttons, one for zoom in and one for zoom out.\r\n * This control is one of the default controls of a map. To style this control\r\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\r\n *\r\n * @api\r\n */\r\nclass Zoom extends Control {\r\n  /**\r\n   * @param {Options} [options] Zoom options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      target: options.target,\r\n    });\r\n\r\n    const className =\r\n      options.className !== undefined ? options.className : 'ol-zoom';\r\n\r\n    const delta = options.delta !== undefined ? options.delta : 1;\r\n\r\n    const zoomInClassName =\r\n      options.zoomInClassName !== undefined\r\n        ? options.zoomInClassName\r\n        : className + '-in';\r\n\r\n    const zoomOutClassName =\r\n      options.zoomOutClassName !== undefined\r\n        ? options.zoomOutClassName\r\n        : className + '-out';\r\n\r\n    const zoomInLabel =\r\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\r\n    const zoomOutLabel =\r\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\r\n\r\n    const zoomInTipLabel =\r\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\r\n    const zoomOutTipLabel =\r\n      options.zoomOutTipLabel !== undefined\r\n        ? options.zoomOutTipLabel\r\n        : 'Zoom out';\r\n\r\n    const inElement = document.createElement('button');\r\n    inElement.className = zoomInClassName;\r\n    inElement.setAttribute('type', 'button');\r\n    inElement.title = zoomInTipLabel;\r\n    inElement.appendChild(\r\n      typeof zoomInLabel === 'string'\r\n        ? document.createTextNode(zoomInLabel)\r\n        : zoomInLabel,\r\n    );\r\n\r\n    inElement.addEventListener(\r\n      EventType.CLICK,\r\n      this.handleClick_.bind(this, delta),\r\n      false,\r\n    );\r\n\r\n    const outElement = document.createElement('button');\r\n    outElement.className = zoomOutClassName;\r\n    outElement.setAttribute('type', 'button');\r\n    outElement.title = zoomOutTipLabel;\r\n    outElement.appendChild(\r\n      typeof zoomOutLabel === 'string'\r\n        ? document.createTextNode(zoomOutLabel)\r\n        : zoomOutLabel,\r\n    );\r\n\r\n    outElement.addEventListener(\r\n      EventType.CLICK,\r\n      this.handleClick_.bind(this, -delta),\r\n      false,\r\n    );\r\n\r\n    const cssClasses =\r\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\r\n    const element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(inElement);\r\n    element.appendChild(outElement);\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n  }\r\n\r\n  /**\r\n   * @param {number} delta Zoom delta.\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  handleClick_(delta, event) {\r\n    event.preventDefault();\r\n    this.zoomByDelta_(delta);\r\n  }\r\n\r\n  /**\r\n   * @param {number} delta Zoom delta.\r\n   * @private\r\n   */\r\n  zoomByDelta_(delta) {\r\n    const map = this.getMap();\r\n    const view = map.getView();\r\n    if (!view) {\r\n      // the map does not have a view, so we can't act\r\n      // upon it\r\n      return;\r\n    }\r\n    const currentZoom = view.getZoom();\r\n    if (currentZoom !== undefined) {\r\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\r\n      if (this.duration_ > 0) {\r\n        if (view.getAnimating()) {\r\n          view.cancelAnimations();\r\n        }\r\n        view.animate({\r\n          zoom: newZoom,\r\n          duration: this.duration_,\r\n          easing: easeOut,\r\n        });\r\n      } else {\r\n        view.setZoom(newZoom);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Zoom;\r\n", "/**\r\n * @module ol/control/defaults\r\n */\r\nimport Attribution from './Attribution.js';\r\nimport Collection from '../Collection.js';\r\nimport Rotate from './Rotate.js';\r\nimport Zoom from './Zoom.js';\r\n\r\n/**\r\n * @typedef {Object} DefaultsOptions\r\n * @property {boolean} [attribution=true] Include\r\n * {@link module:ol/control/Attribution~Attribution}.\r\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\r\n * Options for {@link module:ol/control/Attribution~Attribution}.\r\n * @property {boolean} [rotate=true] Include\r\n * {@link module:ol/control/Rotate~Rotate}.\r\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\r\n * for {@link module:ol/control/Rotate~Rotate}.\r\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\r\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\r\n * {@link module:ol/control/Zoom~Zoom}.\r\n */\r\n\r\n/**\r\n * Set of controls included in maps by default. Unless configured otherwise,\r\n * this returns a collection containing an instance of each of the following\r\n * controls:\r\n * * {@link module:ol/control/Zoom~Zoom}\r\n * * {@link module:ol/control/Rotate~Rotate}\r\n * * {@link module:ol/control/Attribution~Attribution}\r\n *\r\n * @param {DefaultsOptions} [options] Options for the default controls.\r\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\r\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\r\n * @api\r\n */\r\nexport function defaults(options) {\r\n  options = options ? options : {};\r\n\r\n  /** @type {Collection<import(\"./Control.js\").default>} */\r\n  const controls = new Collection();\r\n\r\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\r\n  if (zoomControl) {\r\n    controls.push(new Zoom(options.zoomOptions));\r\n  }\r\n\r\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\r\n  if (rotateControl) {\r\n    controls.push(new Rotate(options.rotateOptions));\r\n  }\r\n\r\n  const attributionControl =\r\n    options.attribution !== undefined ? options.attribution : true;\r\n  if (attributionControl) {\r\n    controls.push(new Attribution(options.attributionOptions));\r\n  }\r\n\r\n  return controls;\r\n}\r\n", "/**\r\n * @module ol/interaction/Property\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  ACTIVE: 'active',\r\n};\r\n", "/**\r\n * @module ol/interaction/Interaction\r\n */\r\nimport BaseObject from '../Object.js';\r\nimport InteractionProperty from './Property.js';\r\nimport {easeOut, linear} from '../easing.js';\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\r\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\r\n *     'change:active', Return>} InteractionOnSignature\r\n */\r\n\r\n/**\r\n * Object literal with config options for interactions.\r\n * @typedef {Object} InteractionOptions\r\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\r\n * Method called by the map to notify the interaction that a browser event was\r\n * dispatched to the map. If the function returns a falsy value, propagation of\r\n * the event to other interactions in the map's interactions chain will be\r\n * prevented (this includes functions with no explicit return). The interactions\r\n * are traversed in reverse order of the interactions collection of the map.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * User actions that change the state of the map. Some are similar to controls,\r\n * but are not associated with a DOM element.\r\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\r\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\r\n * by a keyboard event not a button element event.\r\n * Although interactions do not have a DOM element, some of them do render\r\n * vectors and so are visible on the screen.\r\n * @api\r\n */\r\nclass Interaction extends BaseObject {\r\n  /**\r\n   * @param {InteractionOptions} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    /***\r\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {InteractionOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    if (options && options.handleEvent) {\r\n      this.handleEvent = options.handleEvent;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../Map.js\").default|null}\r\n     */\r\n    this.map_ = null;\r\n\r\n    this.setActive(true);\r\n  }\r\n\r\n  /**\r\n   * Return whether the interaction is currently active.\r\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getActive() {\r\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\r\n  }\r\n\r\n  /**\r\n   * Get the map associated with this interaction.\r\n   * @return {import(\"../Map.js\").default|null} Map.\r\n   * @api\r\n   */\r\n  getMap() {\r\n    return this.map_;\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   * @api\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Activate or deactivate the interaction.\r\n   * @param {boolean} active Active.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setActive(active) {\r\n    this.set(InteractionProperty.ACTIVE, active);\r\n  }\r\n\r\n  /**\r\n   * Remove the interaction from its current map and attach it to the new map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../Map.js\").default|null} map Map.\r\n   */\r\n  setMap(map) {\r\n    this.map_ = map;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../View.js\").default} view View.\r\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\r\n * @param {number} [duration] Duration.\r\n */\r\nexport function pan(view, delta, duration) {\r\n  const currentCenter = view.getCenterInternal();\r\n  if (currentCenter) {\r\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\r\n    view.animateInternal({\r\n      duration: duration !== undefined ? duration : 250,\r\n      easing: linear,\r\n      center: view.getConstrainedCenter(center),\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../View.js\").default} view View.\r\n * @param {number} delta Delta from previous zoom level.\r\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\r\n * @param {number} [duration] Duration.\r\n */\r\nexport function zoomByDelta(view, delta, anchor, duration) {\r\n  const currentZoom = view.getZoom();\r\n\r\n  if (currentZoom === undefined) {\r\n    return;\r\n  }\r\n\r\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\r\n  const newResolution = view.getResolutionForZoom(newZoom);\r\n\r\n  if (view.getAnimating()) {\r\n    view.cancelAnimations();\r\n  }\r\n  view.animate({\r\n    resolution: newResolution,\r\n    anchor: anchor,\r\n    duration: duration !== undefined ? duration : 250,\r\n    easing: easeOut,\r\n  });\r\n}\r\n\r\nexport default Interaction;\r\n", "/**\r\n * @module ol/interaction/DoubleClickZoom\r\n */\r\nimport Interaction, {zoomByDelta} from './Interaction.js';\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {number} [delta=1] The zoom delta applied on each double click.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom by double-clicking on the map.\r\n * @api\r\n */\r\nclass DoubleClickZoom extends Interaction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    options = options ? options : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.delta_ = options.delta ? options.delta : 1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\r\n   * doubleclick) and eventually zooms the map.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    let stopEvent = false;\r\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\r\n      const browserEvent = /** @type {MouseEvent} */ (\r\n        mapBrowserEvent.originalEvent\r\n      );\r\n      const map = mapBrowserEvent.map;\r\n      const anchor = mapBrowserEvent.coordinate;\r\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\r\n      const view = map.getView();\r\n      zoomByDelta(view, delta, anchor, this.duration_);\r\n      browserEvent.preventDefault();\r\n      stopEvent = true;\r\n    }\r\n    return !stopEvent;\r\n  }\r\n}\r\n\r\nexport default DoubleClickZoom;\r\n", "/**\r\n * @module ol/interaction/Pointer\r\n */\r\nimport Interaction from './Interaction.js';\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\r\n * Function handling \"down\" events. If the function returns `true` then a drag\r\n * sequence is started.\r\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\r\n * Function handling \"drag\" events. This function is called on \"move\" events\r\n * during a drag sequence.\r\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\r\n * Method called by the map to notify the interaction that a browser event was\r\n * dispatched to the map. The function may return `false` to prevent the\r\n * propagation of the event to other interactions in the map's interactions\r\n * chain.\r\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\r\n * Function handling \"move\" events. This function is called on \"move\" events.\r\n * This functions is also called during a drag sequence, so during a drag\r\n * sequence both the `handleDragEvent` function and this function are called.\r\n * If `handleDownEvent` is defined and it returns true this function will not\r\n * be called during a drag sequence.\r\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\r\n *  Function handling \"up\" events. If the function returns `false` then the\r\n * current drag sequence is stopped.\r\n * @property {function(boolean):boolean} [stopDown]\r\n * Should the down event be propagated to other interactions, or should be\r\n * stopped?\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Base class that calls user-defined functions on `down`, `move` and `up`\r\n * events. This class also manages \"drag sequences\".\r\n *\r\n * When the `handleDownEvent` user function returns `true` a drag sequence is\r\n * started. During a drag sequence the `handleDragEvent` user function is\r\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\r\n * user function is called and returns `false`.\r\n * @api\r\n */\r\nclass PointerInteraction extends Interaction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    super(\r\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\r\n    );\r\n\r\n    if (options.handleDownEvent) {\r\n      this.handleDownEvent = options.handleDownEvent;\r\n    }\r\n\r\n    if (options.handleDragEvent) {\r\n      this.handleDragEvent = options.handleDragEvent;\r\n    }\r\n\r\n    if (options.handleMoveEvent) {\r\n      this.handleMoveEvent = options.handleMoveEvent;\r\n    }\r\n\r\n    if (options.handleUpEvent) {\r\n      this.handleUpEvent = options.handleUpEvent;\r\n    }\r\n\r\n    if (options.stopDown) {\r\n      this.stopDown = options.stopDown;\r\n    }\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @protected\r\n     */\r\n    this.handlingDownUpSequence = false;\r\n\r\n    /**\r\n     * @type {Array<PointerEvent>}\r\n     * @protected\r\n     */\r\n    this.targetPointers = [];\r\n  }\r\n\r\n  /**\r\n   * Returns the current number of pointers involved in the interaction,\r\n   * e.g. `2` when two fingers are used.\r\n   * @return {number} The number of pointers.\r\n   * @api\r\n   */\r\n  getPointerCount() {\r\n    return this.targetPointers.length;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   * @protected\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @protected\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {}\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\r\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\r\n   * detected.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   * @api\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    if (!mapBrowserEvent.originalEvent) {\r\n      return true;\r\n    }\r\n\r\n    let stopEvent = false;\r\n    this.updateTrackedPointers_(mapBrowserEvent);\r\n    if (this.handlingDownUpSequence) {\r\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\r\n        this.handleDragEvent(mapBrowserEvent);\r\n        // prevent page scrolling during dragging\r\n        mapBrowserEvent.originalEvent.preventDefault();\r\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\r\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\r\n        this.handlingDownUpSequence =\r\n          handledUp && this.targetPointers.length > 0;\r\n      }\r\n    } else {\r\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\r\n        const handled = this.handleDownEvent(mapBrowserEvent);\r\n        this.handlingDownUpSequence = handled;\r\n        stopEvent = this.stopDown(handled);\r\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\r\n        this.handleMoveEvent(mapBrowserEvent);\r\n      }\r\n    }\r\n    return !stopEvent;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer move events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @protected\r\n   */\r\n  handleMoveEvent(mapBrowserEvent) {}\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   * @protected\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * This function is used to determine if \"down\" events should be propagated\r\n   * to other interactions or should be stopped.\r\n   * @param {boolean} handled Was the event handled by the interaction?\r\n   * @return {boolean} Should the `down` event be stopped?\r\n   */\r\n  stopDown(handled) {\r\n    return handled;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @private\r\n   */\r\n  updateTrackedPointers_(mapBrowserEvent) {\r\n    if (mapBrowserEvent.activePointers) {\r\n      this.targetPointers = mapBrowserEvent.activePointers;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Array<PointerEvent>} pointerEvents List of events.\r\n * @return {{clientX: number, clientY: number}} Centroid pixel.\r\n */\r\nexport function centroid(pointerEvents) {\r\n  const length = pointerEvents.length;\r\n  let clientX = 0;\r\n  let clientY = 0;\r\n  for (let i = 0; i < length; i++) {\r\n    clientX += pointerEvents[i].clientX;\r\n    clientY += pointerEvents[i].clientY;\r\n  }\r\n  return {clientX: clientX / length, clientY: clientY / length};\r\n}\r\n\r\nexport default PointerInteraction;\r\n", "/**\r\n * @module ol/events/condition\r\n */\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport {FALSE, TRUE} from '../functions.js';\r\nimport {MAC, WEBKIT} from '../has.js';\r\nimport {assert} from '../asserts.js';\r\n\r\n/**\r\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * `{boolean}`. If the condition is met, true should be returned.\r\n *\r\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\r\n */\r\n\r\n/**\r\n * Creates a condition function that passes when all provided conditions pass.\r\n * @param {...Condition} var_args Conditions to check.\r\n * @return {Condition} Condition function.\r\n */\r\nexport function all(var_args) {\r\n  const conditions = arguments;\r\n  /**\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   * @return {boolean} All conditions passed.\r\n   */\r\n  return function (event) {\r\n    let pass = true;\r\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\r\n      pass = pass && conditions[i](event);\r\n      if (!pass) {\r\n        break;\r\n      }\r\n    }\r\n    return pass;\r\n  };\r\n}\r\n\r\n/**\r\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\r\n * additionally the shift-key is pressed).\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if only the alt key is pressed.\r\n * @api\r\n */\r\nexport const altKeyOnly = function (mapBrowserEvent) {\r\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\r\n    mapBrowserEvent.originalEvent\r\n  );\r\n  return (\r\n    originalEvent.altKey &&\r\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\r\n    !originalEvent.shiftKey\r\n  );\r\n};\r\n\r\n/**\r\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\r\n * (e.g. when additionally the platform-modifier-key is pressed).\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if only the alt and shift keys are pressed.\r\n * @api\r\n */\r\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\r\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\r\n    mapBrowserEvent.originalEvent\r\n  );\r\n  return (\r\n    originalEvent.altKey &&\r\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\r\n    originalEvent.shiftKey\r\n  );\r\n};\r\n\r\n/**\r\n * Return `true` if the map has the focus. This condition requires a map target\r\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\r\n * @return {boolean} The map has the focus.\r\n * @api\r\n */\r\nexport const focus = function (event) {\r\n  const targetElement = event.map.getTargetElement();\r\n  const activeElement = event.map.getOwnerDocument().activeElement;\r\n  return targetElement.contains(activeElement);\r\n};\r\n\r\n/**\r\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\r\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\r\n */\r\nexport const focusWithTabindex = function (event) {\r\n  return event.map.getTargetElement().hasAttribute('tabindex')\r\n    ? focus(event)\r\n    : true;\r\n};\r\n\r\n/**\r\n * Return always true.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True.\r\n * @api\r\n */\r\nexport const always = TRUE;\r\n\r\n/**\r\n * Return `true` if the event is a `click` event, `false` otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event is a map `click` event.\r\n * @api\r\n */\r\nexport const click = function (mapBrowserEvent) {\r\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\r\n};\r\n\r\n/**\r\n * Return `true` if the event has an \"action\"-producing mouse button.\r\n *\r\n * By definition, this includes left-click on windows/linux, and left-click\r\n * without the ctrl key on Macs.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} The result.\r\n */\r\nexport const mouseActionButton = function (mapBrowserEvent) {\r\n  const originalEvent = /** @type {MouseEvent} */ (\r\n    mapBrowserEvent.originalEvent\r\n  );\r\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\r\n};\r\n\r\n/**\r\n * Return always false.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} False.\r\n * @api\r\n */\r\nexport const never = FALSE;\r\n\r\n/**\r\n * Return `true` if the browser event is a `pointermove` event, `false`\r\n * otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the browser event is a `pointermove` event.\r\n * @api\r\n */\r\nexport const pointerMove = function (mapBrowserEvent) {\r\n  return mapBrowserEvent.type == 'pointermove';\r\n};\r\n\r\n/**\r\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event is a map `singleclick` event.\r\n * @api\r\n */\r\nexport const singleClick = function (mapBrowserEvent) {\r\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\r\n};\r\n\r\n/**\r\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event is a map `dblclick` event.\r\n * @api\r\n */\r\nexport const doubleClick = function (mapBrowserEvent) {\r\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\r\n};\r\n\r\n/**\r\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\r\n * pressed.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True only if there no modifier keys are pressed.\r\n * @api\r\n */\r\nexport const noModifierKeys = function (mapBrowserEvent) {\r\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\r\n    mapBrowserEvent.originalEvent\r\n  );\r\n  return (\r\n    !originalEvent.altKey &&\r\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\r\n    !originalEvent.shiftKey\r\n  );\r\n};\r\n\r\n/**\r\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\r\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\r\n * the shift-key is pressed).\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if only the platform modifier key is pressed.\r\n * @api\r\n */\r\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\r\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\r\n    mapBrowserEvent.originalEvent\r\n  );\r\n  return (\r\n    !originalEvent.altKey &&\r\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\r\n    !originalEvent.shiftKey\r\n  );\r\n};\r\n\r\n/**\r\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\r\n * ctrl-key otherwise) is pressed.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the platform modifier key is pressed.\r\n * @api\r\n */\r\nexport const platformModifierKey = function (mapBrowserEvent) {\r\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\r\n    mapBrowserEvent.originalEvent\r\n  );\r\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\r\n};\r\n\r\n/**\r\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\r\n * additionally the alt-key is pressed).\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if only the shift key is pressed.\r\n * @api\r\n */\r\nexport const shiftKeyOnly = function (mapBrowserEvent) {\r\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\r\n    mapBrowserEvent.originalEvent\r\n  );\r\n  return (\r\n    !originalEvent.altKey &&\r\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\r\n    originalEvent.shiftKey\r\n  );\r\n};\r\n\r\n/**\r\n * Return `true` if the target element is not editable, i.e. not an `input`,\r\n * `select`, or `textarea` element and no `contenteditable` attribute is\r\n * set or inherited, `false` otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True only if the target element is not editable.\r\n * @api\r\n */\r\nexport const targetNotEditable = function (mapBrowserEvent) {\r\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\r\n    mapBrowserEvent.originalEvent\r\n  );\r\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\r\n  return (\r\n    tagName !== 'INPUT' &&\r\n    tagName !== 'SELECT' &&\r\n    tagName !== 'TEXTAREA' &&\r\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\r\n    // different type like `SVGElement`.\r\n    // @ts-ignore\r\n    !originalEvent.target.isContentEditable\r\n  );\r\n};\r\n\r\n/**\r\n * Return `true` if the event originates from a mouse device.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event originates from a mouse device.\r\n * @api\r\n */\r\nexport const mouseOnly = function (mapBrowserEvent) {\r\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\r\n    mapBrowserEvent\r\n  ).originalEvent;\r\n  assert(\r\n    pointerEvent !== undefined,\r\n    'mapBrowserEvent must originate from a pointer event',\r\n  );\r\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\r\n  return pointerEvent.pointerType == 'mouse';\r\n};\r\n\r\n/**\r\n * Return `true` if the event originates from a touchable device.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event originates from a touchable device.\r\n * @api\r\n */\r\nexport const touchOnly = function (mapBrowserEvent) {\r\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\r\n    mapBrowserEvent\r\n  ).originalEvent;\r\n  assert(\r\n    pointerEvt !== undefined,\r\n    'mapBrowserEvent must originate from a pointer event',\r\n  );\r\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\r\n  return pointerEvt.pointerType === 'touch';\r\n};\r\n\r\n/**\r\n * Return `true` if the event originates from a digital pen.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event originates from a digital pen.\r\n * @api\r\n */\r\nexport const penOnly = function (mapBrowserEvent) {\r\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\r\n    mapBrowserEvent\r\n  ).originalEvent;\r\n  assert(\r\n    pointerEvt !== undefined,\r\n    'mapBrowserEvent must originate from a pointer event',\r\n  );\r\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\r\n  return pointerEvt.pointerType === 'pen';\r\n};\r\n\r\n/**\r\n * Return `true` if the event originates from a primary pointer in\r\n * contact with the surface or if the left mouse button is pressed.\r\n * See https://www.w3.org/TR/pointerevents/#button-states.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event originates from a primary pointer.\r\n * @api\r\n */\r\nexport const primaryAction = function (mapBrowserEvent) {\r\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\r\n    mapBrowserEvent\r\n  ).originalEvent;\r\n  assert(\r\n    pointerEvent !== undefined,\r\n    'mapBrowserEvent must originate from a pointer event',\r\n  );\r\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\r\n};\r\n", "/**\r\n * @module ol/interaction/DragPan\r\n */\r\nimport PointerInteraction, {\r\n  centroid as centroidFromPointers,\r\n} from './Pointer.js';\r\nimport {FALSE} from '../functions.js';\r\nimport {\r\n  all,\r\n  focusWithTabindex,\r\n  noModifierKeys,\r\n  primaryAction,\r\n} from '../events/condition.js';\r\nimport {easeOut} from '../easing.js';\r\nimport {\r\n  rotate as rotateCoordinate,\r\n  scale as scaleCoordinate,\r\n} from '../coordinate.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\r\n * to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\r\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\r\n * the interaction will only handle events when the map has the focus.\r\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to pan the map by dragging the map.\r\n * @api\r\n */\r\nclass DragPan extends PointerInteraction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    super({\r\n      stopDown: FALSE,\r\n    });\r\n\r\n    options = options ? options : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../Kinetic.js\").default|undefined}\r\n     */\r\n    this.kinetic_ = options.kinetic;\r\n\r\n    /**\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     */\r\n    this.lastCentroid = null;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.lastPointersCount_;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.panning_ = false;\r\n\r\n    const condition = options.condition\r\n      ? options.condition\r\n      : all(noModifierKeys, primaryAction);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.onFocusOnly\r\n      ? all(focusWithTabindex, condition)\r\n      : condition;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.noKinetic_ = false;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    const map = mapBrowserEvent.map;\r\n    if (!this.panning_) {\r\n      this.panning_ = true;\r\n      map.getView().beginInteraction();\r\n    }\r\n    const targetPointers = this.targetPointers;\r\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\r\n    if (targetPointers.length == this.lastPointersCount_) {\r\n      if (this.kinetic_) {\r\n        this.kinetic_.update(centroid[0], centroid[1]);\r\n      }\r\n      if (this.lastCentroid) {\r\n        const delta = [\r\n          this.lastCentroid[0] - centroid[0],\r\n          centroid[1] - this.lastCentroid[1],\r\n        ];\r\n        const map = mapBrowserEvent.map;\r\n        const view = map.getView();\r\n        scaleCoordinate(delta, view.getResolution());\r\n        rotateCoordinate(delta, view.getRotation());\r\n        view.adjustCenterInternal(delta);\r\n      }\r\n    } else if (this.kinetic_) {\r\n      // reset so we don't overestimate the kinetic energy after\r\n      // after one finger down, tiny drag, second finger down\r\n      this.kinetic_.begin();\r\n    }\r\n    this.lastCentroid = centroid;\r\n    this.lastPointersCount_ = targetPointers.length;\r\n    mapBrowserEvent.originalEvent.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n    if (this.targetPointers.length === 0) {\r\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\r\n        const distance = this.kinetic_.getDistance();\r\n        const angle = this.kinetic_.getAngle();\r\n        const center = view.getCenterInternal();\r\n        const centerpx = map.getPixelFromCoordinateInternal(center);\r\n        const dest = map.getCoordinateFromPixelInternal([\r\n          centerpx[0] - distance * Math.cos(angle),\r\n          centerpx[1] - distance * Math.sin(angle),\r\n        ]);\r\n        view.animateInternal({\r\n          center: view.getConstrainedCenter(dest),\r\n          duration: 500,\r\n          easing: easeOut,\r\n        });\r\n      }\r\n      if (this.panning_) {\r\n        this.panning_ = false;\r\n        view.endInteraction();\r\n      }\r\n      return false;\r\n    }\r\n    if (this.kinetic_) {\r\n      // reset so we don't overestimate the kinetic energy after\r\n      // after one finger up, tiny drag, second finger up\r\n      this.kinetic_.begin();\r\n    }\r\n    this.lastCentroid = null;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\r\n      const map = mapBrowserEvent.map;\r\n      const view = map.getView();\r\n      this.lastCentroid = null;\r\n      // stop any current animation\r\n      if (view.getAnimating()) {\r\n        view.cancelAnimations();\r\n      }\r\n      if (this.kinetic_) {\r\n        this.kinetic_.begin();\r\n      }\r\n      // No kinetic as soon as more than one pointer on the screen is\r\n      // detected. This is to prevent nasty pans after pinch.\r\n      this.noKinetic_ = this.targetPointers.length > 1;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default DragPan;\r\n", "/**\r\n * @module ol/interaction/DragRotate\r\n */\r\nimport PointerInteraction from './Pointer.js';\r\nimport {FALSE} from '../functions.js';\r\nimport {\r\n  altShiftKeysOnly,\r\n  mouseActionButton,\r\n  mouseOnly,\r\n} from '../events/condition.js';\r\nimport {disable} from '../rotationconstraint.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\r\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\r\n * to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to rotate the map by clicking and dragging on the map,\r\n * normally combined with an {@link module:ol/events/condition} that limits\r\n * it to when the alt and shift keys are held down.\r\n *\r\n * This interaction is only supported for mouse devices.\r\n * @api\r\n */\r\nclass DragRotate extends PointerInteraction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    super({\r\n      stopDown: FALSE,\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lastAngle_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return;\r\n    }\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n    if (view.getConstraints().rotation === disable) {\r\n      return;\r\n    }\r\n    const size = map.getSize();\r\n    const offset = mapBrowserEvent.pixel;\r\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\r\n    if (this.lastAngle_ !== undefined) {\r\n      const delta = theta - this.lastAngle_;\r\n      view.adjustRotationInternal(-delta);\r\n    }\r\n    this.lastAngle_ = theta;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return true;\r\n    }\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n    view.endInteraction(this.duration_);\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      mouseActionButton(mapBrowserEvent) &&\r\n      this.condition_(mapBrowserEvent)\r\n    ) {\r\n      const map = mapBrowserEvent.map;\r\n      map.getView().beginInteraction();\r\n      this.lastAngle_ = undefined;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default DragRotate;\r\n", "/**\r\n * @module ol/render/Box\r\n */\r\n\r\nimport Disposable from '../Disposable.js';\r\nimport Polygon from '../geom/Polygon.js';\r\n\r\nclass RenderBox extends Disposable {\r\n  /**\r\n   * @param {string} className CSS class name.\r\n   */\r\n  constructor(className) {\r\n    super();\r\n\r\n    /**\r\n     * @type {import(\"../geom/Polygon.js\").default}\r\n     * @private\r\n     */\r\n    this.geometry_ = null;\r\n\r\n    /**\r\n     * @type {HTMLDivElement}\r\n     * @private\r\n     */\r\n    this.element_ = document.createElement('div');\r\n    this.element_.style.position = 'absolute';\r\n    this.element_.style.pointerEvents = 'auto';\r\n    this.element_.className = 'ol-box ' + className;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../Map.js\").default|null}\r\n     */\r\n    this.map_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     */\r\n    this.startPixel_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     */\r\n    this.endPixel_ = null;\r\n  }\r\n\r\n  /**\r\n   * Clean up.\r\n   */\r\n  disposeInternal() {\r\n    this.setMap(null);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  render_() {\r\n    const startPixel = this.startPixel_;\r\n    const endPixel = this.endPixel_;\r\n    const px = 'px';\r\n    const style = this.element_.style;\r\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\r\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\r\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\r\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Map.js\").default|null} map Map.\r\n   */\r\n  setMap(map) {\r\n    if (this.map_) {\r\n      this.map_.getOverlayContainer().removeChild(this.element_);\r\n      const style = this.element_.style;\r\n      style.left = 'inherit';\r\n      style.top = 'inherit';\r\n      style.width = 'inherit';\r\n      style.height = 'inherit';\r\n    }\r\n    this.map_ = map;\r\n    if (this.map_) {\r\n      this.map_.getOverlayContainer().appendChild(this.element_);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\r\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\r\n   */\r\n  setPixels(startPixel, endPixel) {\r\n    this.startPixel_ = startPixel;\r\n    this.endPixel_ = endPixel;\r\n    this.createOrUpdateGeometry();\r\n    this.render_();\r\n  }\r\n\r\n  /**\r\n   * Creates or updates the cached geometry.\r\n   */\r\n  createOrUpdateGeometry() {\r\n    const startPixel = this.startPixel_;\r\n    const endPixel = this.endPixel_;\r\n    const pixels = [\r\n      startPixel,\r\n      [startPixel[0], endPixel[1]],\r\n      endPixel,\r\n      [endPixel[0], startPixel[1]],\r\n    ];\r\n    const coordinates = pixels.map(\r\n      this.map_.getCoordinateFromPixelInternal,\r\n      this.map_,\r\n    );\r\n    // close the polygon\r\n    coordinates[4] = coordinates[0].slice();\r\n    if (!this.geometry_) {\r\n      this.geometry_ = new Polygon([coordinates]);\r\n    } else {\r\n      this.geometry_.setCoordinates([coordinates]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\r\n   */\r\n  getGeometry() {\r\n    return this.geometry_;\r\n  }\r\n}\r\n\r\nexport default RenderBox;\r\n", "/**\r\n * @module ol/interaction/DragBox\r\n */\r\n// FIXME draw drag box\r\nimport Event from '../events/Event.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport RenderBox from '../render/Box.js';\r\nimport {mouseActionButton} from '../events/condition.js';\r\n\r\n/**\r\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\r\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\r\n * true should be returned.\r\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\r\n * to indicate whether that event should be handled.\r\n * Default is {@link ol/events/condition~mouseActionButton}.\r\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\r\n * `boxEndCondition` function.\r\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\r\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\r\n * Default is `true` if the area of the box is bigger than the `minArea` option.\r\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\r\n * before `boxend` is fired.\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst DragBoxEventType = {\r\n  /**\r\n   * Triggered upon drag box start.\r\n   * @event DragBoxEvent#boxstart\r\n   * @api\r\n   */\r\n  BOXSTART: 'boxstart',\r\n\r\n  /**\r\n   * Triggered on drag when box is active.\r\n   * @event DragBoxEvent#boxdrag\r\n   * @api\r\n   */\r\n  BOXDRAG: 'boxdrag',\r\n\r\n  /**\r\n   * Triggered upon drag box end.\r\n   * @event DragBoxEvent#boxend\r\n   * @api\r\n   */\r\n  BOXEND: 'boxend',\r\n\r\n  /**\r\n   * Triggered upon drag box canceled.\r\n   * @event DragBoxEvent#boxcancel\r\n   * @api\r\n   */\r\n  BOXCANCEL: 'boxcancel',\r\n};\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\r\n * this type.\r\n */\r\nexport class DragBoxEvent extends Event {\r\n  /**\r\n   * @param {string} type The event type.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\r\n   */\r\n  constructor(type, coordinate, mapBrowserEvent) {\r\n    super(type);\r\n\r\n    /**\r\n     * The coordinate of the drag event.\r\n     * @const\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @api\r\n     */\r\n    this.coordinate = coordinate;\r\n\r\n    /**\r\n     * @const\r\n     * @type {import(\"../MapBrowserEvent.js\").default}\r\n     * @api\r\n     */\r\n    this.mapBrowserEvent = mapBrowserEvent;\r\n  }\r\n}\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\r\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\r\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to draw a vector box by clicking and dragging on the map,\r\n * normally combined with an {@link module:ol/events/condition} that limits\r\n * it to when the shift or other key is held down. This is used, for example,\r\n * for zooming to a specific area of the map\r\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\r\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\r\n *\r\n * @fires DragBoxEvent\r\n * @api\r\n */\r\nclass DragBox extends PointerInteraction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    /***\r\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {DragBoxOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    options = options ? options : {};\r\n\r\n    /**\r\n     * @type {import(\"../render/Box.js\").default}\r\n     * @private\r\n     */\r\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\r\n\r\n    if (options.onBoxEnd) {\r\n      this.onBoxEnd = options.onBoxEnd;\r\n    }\r\n\r\n    /**\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     * @private\r\n     */\r\n    this.startPixel_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\r\n\r\n    /**\r\n     * @private\r\n     * @type {EndCondition}\r\n     */\r\n    this.boxEndCondition_ = options.boxEndCondition\r\n      ? options.boxEndCondition\r\n      : this.defaultBoxEndCondition;\r\n  }\r\n\r\n  /**\r\n   * The default condition for determining whether the boxend event\r\n   * should fire.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\r\n   *     leading to the box end.\r\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\r\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\r\n   * @return {boolean} Whether or not the boxend condition should be fired.\r\n   */\r\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\r\n    const width = endPixel[0] - startPixel[0];\r\n    const height = endPixel[1] - startPixel[1];\r\n    return width * width + height * height >= this.minArea_;\r\n  }\r\n\r\n  /**\r\n   * Returns geometry of last drawn box.\r\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\r\n   * @api\r\n   */\r\n  getGeometry() {\r\n    return this.box_.getGeometry();\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\r\n\r\n    this.dispatchEvent(\r\n      new DragBoxEvent(\r\n        DragBoxEventType.BOXDRAG,\r\n        mapBrowserEvent.coordinate,\r\n        mapBrowserEvent,\r\n      ),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    this.box_.setMap(null);\r\n\r\n    const completeBox = this.boxEndCondition_(\r\n      mapBrowserEvent,\r\n      this.startPixel_,\r\n      mapBrowserEvent.pixel,\r\n    );\r\n    if (completeBox) {\r\n      this.onBoxEnd(mapBrowserEvent);\r\n    }\r\n    this.dispatchEvent(\r\n      new DragBoxEvent(\r\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\r\n        mapBrowserEvent.coordinate,\r\n        mapBrowserEvent,\r\n      ),\r\n    );\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (this.condition_(mapBrowserEvent)) {\r\n      this.startPixel_ = mapBrowserEvent.pixel;\r\n      this.box_.setMap(mapBrowserEvent.map);\r\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\r\n      this.dispatchEvent(\r\n        new DragBoxEvent(\r\n          DragBoxEventType.BOXSTART,\r\n          mapBrowserEvent.coordinate,\r\n          mapBrowserEvent,\r\n        ),\r\n      );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Function to execute just before `onboxend` is fired\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   */\r\n  onBoxEnd(event) {}\r\n}\r\n\r\nexport default DragBox;\r\n", "/**\r\n * @module ol/interaction/DragZoom\r\n */\r\nimport DragBox from './DragBox.js';\r\nimport {easeOut} from '../easing.js';\r\nimport {shiftKeyOnly} from '../events/condition.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\r\n * box.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\r\n * @property {number} [duration=200] Animation duration in milliseconds.\r\n * @property {boolean} [out=false] Use interaction for zooming out.\r\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\r\n * `boxEndCondition` function.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map by clicking and dragging on the map,\r\n * normally combined with an {@link module:ol/events/condition} that limits\r\n * it to when a key, shift by default, is held down.\r\n *\r\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\r\n * your custom one configured with `className`.\r\n * @api\r\n */\r\nclass DragZoom extends DragBox {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    const condition = options.condition ? options.condition : shiftKeyOnly;\r\n\r\n    super({\r\n      condition: condition,\r\n      className: options.className || 'ol-dragzoom',\r\n      minArea: options.minArea,\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.out_ = options.out !== undefined ? options.out : false;\r\n  }\r\n\r\n  /**\r\n   * Function to execute just before `onboxend` is fired\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   */\r\n  onBoxEnd(event) {\r\n    const map = this.getMap();\r\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\r\n    let geometry = this.getGeometry();\r\n\r\n    if (this.out_) {\r\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\r\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\r\n      const factor = view.getResolution() / resolution;\r\n      geometry = geometry.clone();\r\n      geometry.scale(factor * factor);\r\n    }\r\n\r\n    view.fitInternal(geometry, {\r\n      duration: this.duration_,\r\n      easing: easeOut,\r\n    });\r\n  }\r\n}\r\n\r\nexport default DragZoom;\r\n", "/**\r\n * @module ol/events/Key\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n * @const\r\n */\r\nexport default {\r\n  LEFT: 'ArrowLeft',\r\n  UP: 'ArrowUp',\r\n  RIGHT: 'ArrowRight',\r\n  DOWN: 'ArrowDown',\r\n};\r\n", "/**\r\n * @module ol/interaction/KeyboardPan\r\n */\r\nimport EventType from '../events/EventType.js';\r\nimport Interaction, {pan} from './Interaction.js';\r\nimport Key from '../events/Key.js';\r\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\r\nimport {rotate as rotateCoordinate} from '../coordinate.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. Default is\r\n * {@link module:ol/events/condition.noModifierKeys} and\r\n * {@link module:ol/events/condition.targetNotEditable}.\r\n * @property {number} [duration=100] Animation duration in milliseconds.\r\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\r\n * press.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to pan the map using keyboard arrows.\r\n * Note that, although this interaction is by default included in maps,\r\n * the keys can only be used when browser focus is on the element to which\r\n * the keyboard events are attached. By default, this is the map div,\r\n * though you can change this with the `keyboardEventTarget` in\r\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\r\n * element, focus will have to be on, and returned to, this element if the keys\r\n * are to function.\r\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\r\n * @api\r\n */\r\nclass KeyboardPan extends Interaction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    options = options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\r\n     * @return {boolean} Combined condition result.\r\n     */\r\n    this.defaultCondition_ = function (mapBrowserEvent) {\r\n      return (\r\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\r\n      );\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ =\r\n      options.condition !== undefined\r\n        ? options.condition\r\n        : this.defaultCondition_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelDelta_ =\r\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\r\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\r\n   * pressed).\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    let stopEvent = false;\r\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\r\n      const keyEvent = /** @type {KeyboardEvent} */ (\r\n        mapBrowserEvent.originalEvent\r\n      );\r\n      const key = keyEvent.key;\r\n      if (\r\n        this.condition_(mapBrowserEvent) &&\r\n        (key == Key.DOWN ||\r\n          key == Key.LEFT ||\r\n          key == Key.RIGHT ||\r\n          key == Key.UP)\r\n      ) {\r\n        const map = mapBrowserEvent.map;\r\n        const view = map.getView();\r\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\r\n        let deltaX = 0,\r\n          deltaY = 0;\r\n        if (key == Key.DOWN) {\r\n          deltaY = -mapUnitsDelta;\r\n        } else if (key == Key.LEFT) {\r\n          deltaX = -mapUnitsDelta;\r\n        } else if (key == Key.RIGHT) {\r\n          deltaX = mapUnitsDelta;\r\n        } else {\r\n          deltaY = mapUnitsDelta;\r\n        }\r\n        const delta = [deltaX, deltaY];\r\n        rotateCoordinate(delta, view.getRotation());\r\n        pan(view, delta, this.duration_);\r\n        keyEvent.preventDefault();\r\n        stopEvent = true;\r\n      }\r\n    }\r\n    return !stopEvent;\r\n  }\r\n}\r\n\r\nexport default KeyboardPan;\r\n", "/**\r\n * @module ol/interaction/KeyboardZoom\r\n */\r\nimport EventType from '../events/EventType.js';\r\nimport Interaction, {zoomByDelta} from './Interaction.js';\r\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=100] Animation duration in milliseconds.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. The default condition is\r\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\r\n * the platform modifier key isn't pressed\r\n * (!{@link module:ol/events/condition.platformModifierKey}).\r\n * @property {number} [delta=1] The zoom level delta on each key press.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map using keyboard + and -.\r\n * Note that, although this interaction is by default included in maps,\r\n * the keys can only be used when browser focus is on the element to which\r\n * the keyboard events are attached. By default, this is the map div,\r\n * though you can change this with the `keyboardEventTarget` in\r\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\r\n * element, focus will have to be on, and returned to, this element if the keys\r\n * are to function.\r\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\r\n * @api\r\n */\r\nclass KeyboardZoom extends Interaction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    options = options ? options : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition\r\n      ? options.condition\r\n      : function (mapBrowserEvent) {\r\n          return (\r\n            !platformModifierKey(mapBrowserEvent) &&\r\n            targetNotEditable(mapBrowserEvent)\r\n          );\r\n        };\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.delta_ = options.delta ? options.delta : 1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\r\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\r\n   * key pressed was '+' or '-').\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    let stopEvent = false;\r\n    if (\r\n      mapBrowserEvent.type == EventType.KEYDOWN ||\r\n      mapBrowserEvent.type == EventType.KEYPRESS\r\n    ) {\r\n      const keyEvent = /** @type {KeyboardEvent} */ (\r\n        mapBrowserEvent.originalEvent\r\n      );\r\n      const key = keyEvent.key;\r\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\r\n        const map = mapBrowserEvent.map;\r\n        const delta = key === '+' ? this.delta_ : -this.delta_;\r\n        const view = map.getView();\r\n        zoomByDelta(view, delta, undefined, this.duration_);\r\n        keyEvent.preventDefault();\r\n        stopEvent = true;\r\n      }\r\n    }\r\n    return !stopEvent;\r\n  }\r\n}\r\n\r\nexport default KeyboardZoom;\r\n", "/**\r\n * @module ol/interaction/MouseWheelZoom\r\n */\r\nimport EventType from '../events/EventType.js';\r\nimport Interaction, {zoomByDelta} from './Interaction.js';\r\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\r\nimport {all, always, focusWithTabindex} from '../events/condition.js';\r\nimport {clamp} from '../math.js';\r\n\r\n/**\r\n * @typedef {'trackpad' | 'wheel'} Mode\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. Default is\r\n * {@link module:ol/events/condition.always}.\r\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\r\n * the interaction will only handle events when the map has the focus.\r\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\r\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\r\n * location as the anchor. When set to `false`, zooming in and out will zoom to\r\n * the center of the screen instead of zooming on the mouse's location.\r\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\r\n * event will always animate to the closest zoom level after an interaction;\r\n * false means intermediary zoom levels are allowed.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map by scrolling the mouse wheel.\r\n * @api\r\n */\r\nclass MouseWheelZoom extends Interaction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    super(\r\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\r\n    );\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.totalDelta_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.lastDelta_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.useAnchor_ =\r\n      options.useAnchor !== undefined ? options.useAnchor : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.constrainResolution_ =\r\n      options.constrainResolution !== undefined\r\n        ? options.constrainResolution\r\n        : false;\r\n\r\n    const condition = options.condition ? options.condition : always;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.onFocusOnly\r\n      ? all(focusWithTabindex, condition)\r\n      : condition;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../coordinate.js\").Coordinate}\r\n     */\r\n    this.lastAnchor_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.startTime_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {ReturnType<typeof setTimeout>}\r\n     */\r\n    this.timeoutId_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Mode|undefined}\r\n     */\r\n    this.mode_ = undefined;\r\n\r\n    /**\r\n     * Trackpad events separated by this delay will be considered separate\r\n     * interactions.\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.trackpadEventGap_ = 400;\r\n\r\n    /**\r\n     * @private\r\n     * @type {ReturnType<typeof setTimeout>}\r\n     */\r\n    this.trackpadTimeoutId_;\r\n\r\n    /**\r\n     * The number of delta values per zoom level\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.deltaPerZoom_ = 300;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  endInteraction_() {\r\n    this.trackpadTimeoutId_ = undefined;\r\n    const map = this.getMap();\r\n    if (!map) {\r\n      return;\r\n    }\r\n    const view = map.getView();\r\n    view.endInteraction(\r\n      undefined,\r\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\r\n      this.lastAnchor_,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\r\n   * zooms the map.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    if (!this.condition_(mapBrowserEvent)) {\r\n      return true;\r\n    }\r\n    const type = mapBrowserEvent.type;\r\n    if (type !== EventType.WHEEL) {\r\n      return true;\r\n    }\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const wheelEvent = /** @type {WheelEvent} */ (\r\n      mapBrowserEvent.originalEvent\r\n    );\r\n    wheelEvent.preventDefault();\r\n\r\n    if (this.useAnchor_) {\r\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\r\n    }\r\n\r\n    // Delta normalisation inspired by\r\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\r\n    let delta;\r\n    if (mapBrowserEvent.type == EventType.WHEEL) {\r\n      delta = wheelEvent.deltaY;\r\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\r\n        delta /= DEVICE_PIXEL_RATIO;\r\n      }\r\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\r\n        delta *= 40;\r\n      }\r\n    }\r\n\r\n    if (delta === 0) {\r\n      return false;\r\n    }\r\n    this.lastDelta_ = delta;\r\n\r\n    const now = Date.now();\r\n\r\n    if (this.startTime_ === undefined) {\r\n      this.startTime_ = now;\r\n    }\r\n\r\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\r\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\r\n    }\r\n\r\n    const view = map.getView();\r\n    if (\r\n      this.mode_ === 'trackpad' &&\r\n      !(view.getConstrainResolution() || this.constrainResolution_)\r\n    ) {\r\n      if (this.trackpadTimeoutId_) {\r\n        clearTimeout(this.trackpadTimeoutId_);\r\n      } else {\r\n        if (view.getAnimating()) {\r\n          view.cancelAnimations();\r\n        }\r\n        view.beginInteraction();\r\n      }\r\n      this.trackpadTimeoutId_ = setTimeout(\r\n        this.endInteraction_.bind(this),\r\n        this.timeout_,\r\n      );\r\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\r\n      this.startTime_ = now;\r\n      return false;\r\n    }\r\n\r\n    this.totalDelta_ += delta;\r\n\r\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\r\n\r\n    clearTimeout(this.timeoutId_);\r\n    this.timeoutId_ = setTimeout(\r\n      this.handleWheelZoom_.bind(this, map),\r\n      timeLeft,\r\n    );\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {import(\"../Map.js\").default} map Map.\r\n   */\r\n  handleWheelZoom_(map) {\r\n    const view = map.getView();\r\n    if (view.getAnimating()) {\r\n      view.cancelAnimations();\r\n    }\r\n    let delta =\r\n      -clamp(\r\n        this.totalDelta_,\r\n        -this.maxDelta_ * this.deltaPerZoom_,\r\n        this.maxDelta_ * this.deltaPerZoom_,\r\n      ) / this.deltaPerZoom_;\r\n    if (view.getConstrainResolution() || this.constrainResolution_) {\r\n      // view has a zoom constraint, zoom by 1\r\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\r\n    }\r\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\r\n\r\n    this.mode_ = undefined;\r\n    this.totalDelta_ = 0;\r\n    this.lastAnchor_ = null;\r\n    this.startTime_ = undefined;\r\n    this.timeoutId_ = undefined;\r\n  }\r\n\r\n  /**\r\n   * Enable or disable using the mouse's location as an anchor when zooming\r\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\r\n   * to zoom to the center of the map\r\n   * @api\r\n   */\r\n  setMouseAnchor(useAnchor) {\r\n    this.useAnchor_ = useAnchor;\r\n    if (!useAnchor) {\r\n      this.lastAnchor_ = null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MouseWheelZoom;\r\n", "/**\r\n * @module ol/interaction/PinchRotate\r\n */\r\nimport PointerInteraction, {\r\n  centroid as centroidFromPointers,\r\n} from './Pointer.js';\r\nimport {FALSE} from '../functions.js';\r\nimport {disable} from '../rotationconstraint.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=250] The duration of the animation in\r\n * milliseconds.\r\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to rotate the map by twisting with two fingers\r\n * on a touch screen.\r\n * @api\r\n */\r\nclass PinchRotate extends PointerInteraction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\r\n      options\r\n    );\r\n\r\n    if (!pointerOptions.stopDown) {\r\n      pointerOptions.stopDown = FALSE;\r\n    }\r\n\r\n    super(pointerOptions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     */\r\n    this.anchor_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lastAngle_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.rotating_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.rotationDelta_ = 0.0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    let rotationDelta = 0.0;\r\n\r\n    const touch0 = this.targetPointers[0];\r\n    const touch1 = this.targetPointers[1];\r\n\r\n    // angle between touches\r\n    const angle = Math.atan2(\r\n      touch1.clientY - touch0.clientY,\r\n      touch1.clientX - touch0.clientX,\r\n    );\r\n\r\n    if (this.lastAngle_ !== undefined) {\r\n      const delta = angle - this.lastAngle_;\r\n      this.rotationDelta_ += delta;\r\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\r\n        this.rotating_ = true;\r\n      }\r\n      rotationDelta = delta;\r\n    }\r\n    this.lastAngle_ = angle;\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n    if (view.getConstraints().rotation === disable) {\r\n      return;\r\n    }\r\n\r\n    // rotate anchor point.\r\n    // FIXME: should be the intersection point between the lines:\r\n    //     touch0,touch1 and previousTouch0,previousTouch1\r\n    this.anchor_ = map.getCoordinateFromPixelInternal(\r\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\r\n    );\r\n\r\n    // rotate\r\n    if (this.rotating_) {\r\n      map.render();\r\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    if (this.targetPointers.length < 2) {\r\n      const map = mapBrowserEvent.map;\r\n      const view = map.getView();\r\n      view.endInteraction(this.duration_);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (this.targetPointers.length >= 2) {\r\n      const map = mapBrowserEvent.map;\r\n      this.anchor_ = null;\r\n      this.lastAngle_ = undefined;\r\n      this.rotating_ = false;\r\n      this.rotationDelta_ = 0.0;\r\n      if (!this.handlingDownUpSequence) {\r\n        map.getView().beginInteraction();\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default PinchRotate;\r\n", "/**\r\n * @module ol/interaction/PinchZoom\r\n */\r\nimport PointerInteraction, {\r\n  centroid as centroidFromPointers,\r\n} from './Pointer.js';\r\nimport {FALSE} from '../functions.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=400] Animation duration in milliseconds.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map by pinching with two fingers\r\n * on a touch screen.\r\n * @api\r\n */\r\nclass PinchZoom extends PointerInteraction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\r\n      options\r\n    );\r\n\r\n    if (!pointerOptions.stopDown) {\r\n      pointerOptions.stopDown = FALSE;\r\n    }\r\n\r\n    super(pointerOptions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     */\r\n    this.anchor_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lastDistance_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.lastScaleDelta_ = 1;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    let scaleDelta = 1.0;\r\n\r\n    const touch0 = this.targetPointers[0];\r\n    const touch1 = this.targetPointers[1];\r\n    const dx = touch0.clientX - touch1.clientX;\r\n    const dy = touch0.clientY - touch1.clientY;\r\n\r\n    // distance between touches\r\n    const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n    if (this.lastDistance_ !== undefined) {\r\n      scaleDelta = this.lastDistance_ / distance;\r\n    }\r\n    this.lastDistance_ = distance;\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n\r\n    if (scaleDelta != 1.0) {\r\n      this.lastScaleDelta_ = scaleDelta;\r\n    }\r\n\r\n    // scale anchor point.\r\n    this.anchor_ = map.getCoordinateFromPixelInternal(\r\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\r\n    );\r\n\r\n    // scale, bypass the resolution constraint\r\n    map.render();\r\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    if (this.targetPointers.length < 2) {\r\n      const map = mapBrowserEvent.map;\r\n      const view = map.getView();\r\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\r\n      view.endInteraction(this.duration_, direction);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (this.targetPointers.length >= 2) {\r\n      const map = mapBrowserEvent.map;\r\n      this.anchor_ = null;\r\n      this.lastDistance_ = undefined;\r\n      this.lastScaleDelta_ = 1;\r\n      if (!this.handlingDownUpSequence) {\r\n        map.getView().beginInteraction();\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default PinchZoom;\r\n", "/**\r\n * @module ol/interaction/defaults\r\n */\r\nimport Collection from '../Collection.js';\r\nimport DoubleClickZoom from './DoubleClickZoom.js';\r\nimport DragPan from './DragPan.js';\r\nimport DragRotate from './DragRotate.js';\r\nimport DragZoom from './DragZoom.js';\r\nimport KeyboardPan from './KeyboardPan.js';\r\nimport KeyboardZoom from './KeyboardZoom.js';\r\nimport Kinetic from '../Kinetic.js';\r\nimport MouseWheelZoom from './MouseWheelZoom.js';\r\nimport PinchRotate from './PinchRotate.js';\r\nimport PinchZoom from './PinchZoom.js';\r\n\r\n/**\r\n * @typedef {Object} DefaultsOptions\r\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\r\n * desired.\r\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\r\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\r\n * useful when page scroll is desired for maps that do not have the browser's\r\n * focus.\r\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\r\n * desired.\r\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\r\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\r\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\r\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\r\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\r\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\r\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\r\n * @property {number} [zoomDuration] Duration of the zoom animation in\r\n * milliseconds.\r\n */\r\n\r\n/**\r\n * Set of interactions included in maps by default. Specific interactions can be\r\n * excluded by setting the appropriate option to false in the constructor\r\n * options, but the order of the interactions is fixed.  If you want to specify\r\n * a different order for interactions, you will need to create your own\r\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\r\n * them into a {@link module:ol/Collection~Collection} in the order you want\r\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\r\n * be of interest if the event propagation needs to be stopped at a point.\r\n * The default set of interactions, in sequence, is:\r\n * * {@link module:ol/interaction/DragRotate~DragRotate}\r\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\r\n * * {@link module:ol/interaction/DragPan~DragPan}\r\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\r\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\r\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\r\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\r\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\r\n * * {@link module:ol/interaction/DragZoom~DragZoom}\r\n *\r\n * @param {DefaultsOptions} [options] Defaults options.\r\n * @return {Collection<import(\"./Interaction.js\").default>}\r\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\r\n * constructor's `interactions` option.\r\n * @api\r\n */\r\nexport function defaults(options) {\r\n  options = options ? options : {};\r\n\r\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\r\n  const interactions = new Collection();\r\n\r\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\r\n\r\n  const altShiftDragRotate =\r\n    options.altShiftDragRotate !== undefined\r\n      ? options.altShiftDragRotate\r\n      : true;\r\n  if (altShiftDragRotate) {\r\n    interactions.push(new DragRotate());\r\n  }\r\n\r\n  const doubleClickZoom =\r\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\r\n  if (doubleClickZoom) {\r\n    interactions.push(\r\n      new DoubleClickZoom({\r\n        delta: options.zoomDelta,\r\n        duration: options.zoomDuration,\r\n      }),\r\n    );\r\n  }\r\n\r\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\r\n  if (dragPan) {\r\n    interactions.push(\r\n      new DragPan({\r\n        onFocusOnly: options.onFocusOnly,\r\n        kinetic: kinetic,\r\n      }),\r\n    );\r\n  }\r\n\r\n  const pinchRotate =\r\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\r\n  if (pinchRotate) {\r\n    interactions.push(new PinchRotate());\r\n  }\r\n\r\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\r\n  if (pinchZoom) {\r\n    interactions.push(\r\n      new PinchZoom({\r\n        duration: options.zoomDuration,\r\n      }),\r\n    );\r\n  }\r\n\r\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\r\n  if (keyboard) {\r\n    interactions.push(new KeyboardPan());\r\n    interactions.push(\r\n      new KeyboardZoom({\r\n        delta: options.zoomDelta,\r\n        duration: options.zoomDuration,\r\n      }),\r\n    );\r\n  }\r\n\r\n  const mouseWheelZoom =\r\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\r\n  if (mouseWheelZoom) {\r\n    interactions.push(\r\n      new MouseWheelZoom({\r\n        onFocusOnly: options.onFocusOnly,\r\n        duration: options.zoomDuration,\r\n      }),\r\n    );\r\n  }\r\n\r\n  const shiftDragZoom =\r\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\r\n  if (shiftDragZoom) {\r\n    interactions.push(\r\n      new DragZoom({\r\n        duration: options.zoomDuration,\r\n      }),\r\n    );\r\n  }\r\n\r\n  return interactions;\r\n}\r\n", "/**\r\n * @module ol/Map\r\n */\r\nimport BaseObject from './Object.js';\r\nimport Collection from './Collection.js';\r\nimport CollectionEventType from './CollectionEventType.js';\r\nimport CompositeMapRenderer from './renderer/Composite.js';\r\nimport EventType from './events/EventType.js';\r\nimport Layer from './layer/Layer.js';\r\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\r\nimport MapBrowserEvent from './MapBrowserEvent.js';\r\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\r\nimport MapBrowserEventType from './MapBrowserEventType.js';\r\nimport MapEvent from './MapEvent.js';\r\nimport MapEventType from './MapEventType.js';\r\nimport MapProperty from './MapProperty.js';\r\nimport ObjectEventType from './ObjectEventType.js';\r\nimport PointerEventType from './pointer/EventType.js';\r\nimport RenderEventType from './render/EventType.js';\r\nimport TileQueue, {getTilePriority} from './TileQueue.js';\r\nimport View from './View.js';\r\nimport ViewHint from './ViewHint.js';\r\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\r\nimport {TRUE} from './functions.js';\r\nimport {\r\n  apply as applyTransform,\r\n  create as createTransform,\r\n} from './transform.js';\r\nimport {assert} from './asserts.js';\r\nimport {\r\n  clone,\r\n  createOrUpdateEmpty,\r\n  equals as equalsExtent,\r\n  getForViewAndSize,\r\n  isEmpty,\r\n} from './extent.js';\r\nimport {defaults as defaultControls} from './control/defaults.js';\r\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\r\nimport {equals} from './array.js';\r\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\r\nimport {getUid} from './util.js';\r\nimport {hasArea} from './size.js';\r\nimport {listen, unlistenByKey} from './events.js';\r\nimport {removeNode} from './dom.js';\r\nimport {warn} from './console.js';\r\n\r\n/**\r\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\r\n * be used in applications.\r\n * @typedef {Object} FrameState\r\n * @property {number} pixelRatio The pixel ratio of the frame.\r\n * @property {number} time The time when rendering of the frame was requested.\r\n * @property {import(\"./View.js\").State} viewState The state of the current view.\r\n * @property {boolean} animate Animate.\r\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\r\n * @property {Object<string, import(\"rbush\").default>|null} declutter Declutter trees by declutter group.\r\n * When null, no decluttering is needed because no layers have decluttering enabled.\r\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\r\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\r\n * @property {number} index Index.\r\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\r\n * @property {number} layerIndex LayerIndex.\r\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\r\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\r\n * @property {import(\"./size.js\").Size} size Size.\r\n * @property {TileQueue} tileQueue TileQueue.\r\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\r\n * @property {Array<number>} viewHints ViewHints.\r\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\r\n * @property {string} mapId The id of the map.\r\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\r\n */\r\n\r\n/**\r\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\r\n */\r\n\r\n/**\r\n * @typedef {Object} AtPixelOptions\r\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\r\n * function. The filter function will receive one argument, the\r\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\r\n * Only layers which are visible and for which this function returns `true`\r\n * will be tested for features. By default, all visible layers will be tested.\r\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\r\n * inside the radius around the given position will be checked for features.\r\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\r\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\r\n */\r\n\r\n/**\r\n * @typedef {Object} MapOptionsInternal\r\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\r\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\r\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\r\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\r\n * @property {Object<string, *>} values Values.\r\n */\r\n\r\n/**\r\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\r\n */\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\r\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\r\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\r\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\r\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\r\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\r\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\r\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\r\n */\r\n\r\n/**\r\n * Object literal with config options for the map.\r\n * @typedef {Object} MapOptions\r\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\r\n * Controls initially added to the map. If not specified,\r\n * {@link module:ol/control/defaults.defaults} is used.\r\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\r\n * physical pixels and device-independent pixels (dips) on the device.\r\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\r\n * Interactions that are initially added to the map. If not specified,\r\n * {@link module:ol/interaction/defaults.defaults} is used.\r\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\r\n * listen to keyboard events on. This determines when the `KeyboardPan` and\r\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\r\n * `document` the keyboard interactions will always trigger. If this option is\r\n * not specified, the element the library listens to keyboard events on is the\r\n * map target (i.e. the user-provided div for the map). If this is not\r\n * `document`, the target element needs to be focused for key events to be\r\n * emitted, requiring that the target element has a `tabindex` attribute.\r\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\r\n * Layers. If this is not defined, a map with no layers will be rendered. Note\r\n * that layers are rendered in the order supplied, so if you want, for example,\r\n * a vector layer to appear on top of a tile layer, it must come after the tile\r\n * layer.\r\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\r\n * simultaneously.\r\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\r\n * cursor must move to be detected as a map move event instead of a click.\r\n * Increasing this value can make it easier to click on the map.\r\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\r\n * Overlays initially added to the map. By default, no overlays are added.\r\n * @property {HTMLElement|string} [target] The container for the map, either the\r\n * element itself or the `id` of the element. If not specified at construction\r\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\r\n * rendered. If passed by element, the container can be in a secondary document.\r\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\r\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\r\n * fetched unless this is specified at construction time or through\r\n * {@link module:ol/Map~Map#setView}.\r\n */\r\n\r\n/**\r\n * @param {import(\"./layer/Base.js\").default} layer Layer.\r\n */\r\nfunction removeLayerMapProperty(layer) {\r\n  if (layer instanceof Layer) {\r\n    layer.setMapInternal(null);\r\n    return;\r\n  }\r\n  if (layer instanceof LayerGroup) {\r\n    layer.getLayers().forEach(removeLayerMapProperty);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"./layer/Base.js\").default} layer Layer.\r\n * @param {Map} map Map.\r\n */\r\nfunction setLayerMapProperty(layer, map) {\r\n  if (layer instanceof Layer) {\r\n    layer.setMapInternal(map);\r\n    return;\r\n  }\r\n  if (layer instanceof LayerGroup) {\r\n    const layers = layer.getLayers().getArray();\r\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\r\n      setLayerMapProperty(layers[i], map);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @classdesc\r\n * The map is the core component of OpenLayers. For a map to render, a view,\r\n * one or more layers, and a target container are needed:\r\n *\r\n *     import Map from 'ol/Map.js';\r\n *     import View from 'ol/View.js';\r\n *     import TileLayer from 'ol/layer/Tile.js';\r\n *     import OSM from 'ol/source/OSM.js';\r\n *\r\n *     const map = new Map({\r\n *       view: new View({\r\n *         center: [0, 0],\r\n *         zoom: 1,\r\n *       }),\r\n *       layers: [\r\n *         new TileLayer({\r\n *           source: new OSM(),\r\n *         }),\r\n *       ],\r\n *       target: 'map',\r\n *     });\r\n *\r\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\r\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\r\n * element with the id `map`.\r\n *\r\n * The constructor places a viewport container (with CSS class name\r\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\r\n * further elements within the viewport: one with CSS class name\r\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\r\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\r\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\r\n * itself is placed in a further element within the viewport.\r\n *\r\n * Layers are stored as a {@link module:ol/Collection~Collection} in\r\n * layerGroups. A top-level group is provided by the library. This is what is\r\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\r\n * options are added to this group, and `addLayer` and `removeLayer` change the\r\n * layer collection in the group. `getLayers` is a convenience function for\r\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\r\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\r\n * options or added with `addLayer` can be groups, which can contain further\r\n * groups, and so on.\r\n *\r\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\r\n * @fires import(\"./MapEvent.js\").MapEvent\r\n * @fires import(\"./render/Event.js\").default#precompose\r\n * @fires import(\"./render/Event.js\").default#postcompose\r\n * @fires import(\"./render/Event.js\").default#rendercomplete\r\n * @api\r\n */\r\nclass Map extends BaseObject {\r\n  /**\r\n   * @param {MapOptions} [options] Map options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    options = options || {};\r\n\r\n    /***\r\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {MapEventHandler<void>}\r\n     */\r\n    this.un;\r\n\r\n    const optionsInternal = createOptionsInternal(options);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.renderComplete_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.loaded_ = true;\r\n\r\n    /** @private */\r\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.maxTilesLoading_ =\r\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ =\r\n      options.pixelRatio !== undefined\r\n        ? options.pixelRatio\r\n        : DEVICE_PIXEL_RATIO;\r\n\r\n    /**\r\n     * @private\r\n     * @type {ReturnType<typeof setTimeout>}\r\n     */\r\n    this.postRenderTimeoutHandle_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.animationDelayKey_;\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.animationDelay_ = this.animationDelay_.bind(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./transform.js\").Transform}\r\n     */\r\n    this.coordinateToPixelTransform_ = createTransform();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./transform.js\").Transform}\r\n     */\r\n    this.pixelToCoordinateTransform_ = createTransform();\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.frameIndex_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?FrameState}\r\n     */\r\n    this.frameState_ = null;\r\n\r\n    /**\r\n     * The extent at the previous 'moveend' event.\r\n     * @private\r\n     * @type {import(\"./extent.js\").Extent}\r\n     */\r\n    this.previousExtent_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     */\r\n    this.viewPropertyListenerKey_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     */\r\n    this.viewChangeListenerKey_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?Array<import(\"./events.js\").EventsKey>}\r\n     */\r\n    this.layerGroupPropertyListenerKeys_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!HTMLElement}\r\n     */\r\n    this.viewport_ = document.createElement('div');\r\n    this.viewport_.className =\r\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\r\n    this.viewport_.style.position = 'relative';\r\n    this.viewport_.style.overflow = 'hidden';\r\n    this.viewport_.style.width = '100%';\r\n    this.viewport_.style.height = '100%';\r\n\r\n    /**\r\n     * @private\r\n     * @type {!HTMLElement}\r\n     */\r\n    this.overlayContainer_ = document.createElement('div');\r\n    this.overlayContainer_.style.position = 'absolute';\r\n    this.overlayContainer_.style.zIndex = '0';\r\n    this.overlayContainer_.style.width = '100%';\r\n    this.overlayContainer_.style.height = '100%';\r\n    this.overlayContainer_.style.pointerEvents = 'none';\r\n    this.overlayContainer_.className = 'ol-overlaycontainer';\r\n    this.viewport_.appendChild(this.overlayContainer_);\r\n\r\n    /**\r\n     * @private\r\n     * @type {!HTMLElement}\r\n     */\r\n    this.overlayContainerStopEvent_ = document.createElement('div');\r\n    this.overlayContainerStopEvent_.style.position = 'absolute';\r\n    this.overlayContainerStopEvent_.style.zIndex = '0';\r\n    this.overlayContainerStopEvent_.style.width = '100%';\r\n    this.overlayContainerStopEvent_.style.height = '100%';\r\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\r\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\r\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\r\n\r\n    /**\r\n     * @private\r\n     * @type {MapBrowserEventHandler}\r\n     */\r\n    this.mapBrowserEventHandler_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.moveTolerance_ = options.moveTolerance;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement|Document}\r\n     */\r\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?Array<import(\"./events.js\").EventsKey>}\r\n     */\r\n    this.targetChangeHandlerKeys_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement|null}\r\n     */\r\n    this.targetElement_ = null;\r\n\r\n    /**\r\n     * @type {ResizeObserver}\r\n     */\r\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\r\n\r\n    /**\r\n     * @type {Collection<import(\"./control/Control.js\").default>}\r\n     * @protected\r\n     */\r\n    this.controls = optionsInternal.controls || defaultControls();\r\n\r\n    /**\r\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\r\n     * @protected\r\n     */\r\n    this.interactions =\r\n      optionsInternal.interactions ||\r\n      defaultInteractions({\r\n        onFocusOnly: true,\r\n      });\r\n\r\n    /**\r\n     * @type {Collection<import(\"./Overlay.js\").default>}\r\n     * @private\r\n     */\r\n    this.overlays_ = optionsInternal.overlays;\r\n\r\n    /**\r\n     * A lookup of overlays by id.\r\n     * @private\r\n     * @type {Object<string, import(\"./Overlay.js\").default>}\r\n     */\r\n    this.overlayIdIndex_ = {};\r\n\r\n    /**\r\n     * @type {import(\"./renderer/Map.js\").default|null}\r\n     * @private\r\n     */\r\n    this.renderer_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Array<PostRenderFunction>}\r\n     */\r\n    this.postRenderFunctions_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {TileQueue}\r\n     */\r\n    this.tileQueue_ = new TileQueue(\r\n      this.getTilePriority.bind(this),\r\n      this.handleTileChange_.bind(this),\r\n    );\r\n\r\n    this.addChangeListener(\r\n      MapProperty.LAYERGROUP,\r\n      this.handleLayerGroupChanged_,\r\n    );\r\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\r\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\r\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\r\n\r\n    // setProperties will trigger the rendering of the map if the map\r\n    // is \"defined\" already.\r\n    this.setProperties(optionsInternal.values);\r\n\r\n    const map = this;\r\n    if (options.view && !(options.view instanceof View)) {\r\n      options.view.then(function (viewOptions) {\r\n        map.setView(new View(viewOptions));\r\n      });\r\n    }\r\n\r\n    this.controls.addEventListener(\r\n      CollectionEventType.ADD,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\r\n       */\r\n      (event) => {\r\n        event.element.setMap(this);\r\n      },\r\n    );\r\n\r\n    this.controls.addEventListener(\r\n      CollectionEventType.REMOVE,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\r\n       */\r\n      (event) => {\r\n        event.element.setMap(null);\r\n      },\r\n    );\r\n\r\n    this.interactions.addEventListener(\r\n      CollectionEventType.ADD,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\r\n       */\r\n      (event) => {\r\n        event.element.setMap(this);\r\n      },\r\n    );\r\n\r\n    this.interactions.addEventListener(\r\n      CollectionEventType.REMOVE,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\r\n       */\r\n      (event) => {\r\n        event.element.setMap(null);\r\n      },\r\n    );\r\n\r\n    this.overlays_.addEventListener(\r\n      CollectionEventType.ADD,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\r\n       */\r\n      (event) => {\r\n        this.addOverlayInternal_(event.element);\r\n      },\r\n    );\r\n\r\n    this.overlays_.addEventListener(\r\n      CollectionEventType.REMOVE,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\r\n       */\r\n      (event) => {\r\n        const id = event.element.getId();\r\n        if (id !== undefined) {\r\n          delete this.overlayIdIndex_[id.toString()];\r\n        }\r\n        event.element.setMap(null);\r\n      },\r\n    );\r\n\r\n    this.controls.forEach(\r\n      /**\r\n       * @param {import(\"./control/Control.js\").default} control Control.\r\n       */\r\n      (control) => {\r\n        control.setMap(this);\r\n      },\r\n    );\r\n\r\n    this.interactions.forEach(\r\n      /**\r\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\r\n       */\r\n      (interaction) => {\r\n        interaction.setMap(this);\r\n      },\r\n    );\r\n\r\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Add the given control to the map.\r\n   * @param {import(\"./control/Control.js\").default} control Control.\r\n   * @api\r\n   */\r\n  addControl(control) {\r\n    this.getControls().push(control);\r\n  }\r\n\r\n  /**\r\n   * Add the given interaction to the map. If you want to add an interaction\r\n   * at another point of the collection use `getInteractions()` and the methods\r\n   * available on {@link module:ol/Collection~Collection}. This can be used to\r\n   * stop the event propagation from the handleEvent function. The interactions\r\n   * get to handle the events in the reverse order of this collection.\r\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\r\n   * @api\r\n   */\r\n  addInteraction(interaction) {\r\n    this.getInteractions().push(interaction);\r\n  }\r\n\r\n  /**\r\n   * Adds the given layer to the top of this map. If you want to add a layer\r\n   * elsewhere in the stack, use `getLayers()` and the methods available on\r\n   * {@link module:ol/Collection~Collection}.\r\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\r\n   * @api\r\n   */\r\n  addLayer(layer) {\r\n    const layers = this.getLayerGroup().getLayers();\r\n    layers.push(layer);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\r\n   * @private\r\n   */\r\n  handleLayerAdd_(event) {\r\n    setLayerMapProperty(event.layer, this);\r\n  }\r\n\r\n  /**\r\n   * Add the given overlay to the map.\r\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\r\n   * @api\r\n   */\r\n  addOverlay(overlay) {\r\n    this.getOverlays().push(overlay);\r\n  }\r\n\r\n  /**\r\n   * This deals with map's overlay collection changes.\r\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\r\n   * @private\r\n   */\r\n  addOverlayInternal_(overlay) {\r\n    const id = overlay.getId();\r\n    if (id !== undefined) {\r\n      this.overlayIdIndex_[id.toString()] = overlay;\r\n    }\r\n    overlay.setMap(this);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Clean up.\r\n   */\r\n  disposeInternal() {\r\n    this.controls.clear();\r\n    this.interactions.clear();\r\n    this.overlays_.clear();\r\n    this.resizeObserver_.disconnect();\r\n    this.setTarget(null);\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * Detect features that intersect a pixel on the viewport, and execute a\r\n   * callback with each intersecting feature. Layers included in the detection can\r\n   * be configured through the `layerFilter` option in `options`.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\r\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\r\n   *     called with two arguments. The first argument is one\r\n   *     {@link module:ol/Feature~Feature feature} or\r\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\r\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\r\n   *     unmanaged layers. To stop detection, callback functions can return a\r\n   *     truthy value.\r\n   * @param {AtPixelOptions} [options] Optional options.\r\n   * @return {T|undefined} Callback result, i.e. the return value of last\r\n   * callback execution, or the first truthy callback return value.\r\n   * @template T\r\n   * @api\r\n   */\r\n  forEachFeatureAtPixel(pixel, callback, options) {\r\n    if (!this.frameState_ || !this.renderer_) {\r\n      return;\r\n    }\r\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\r\n    options = options !== undefined ? options : {};\r\n    const hitTolerance =\r\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\r\n    const layerFilter =\r\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\r\n    const checkWrapped = options.checkWrapped !== false;\r\n    return this.renderer_.forEachFeatureAtCoordinate(\r\n      coordinate,\r\n      this.frameState_,\r\n      hitTolerance,\r\n      checkWrapped,\r\n      callback,\r\n      null,\r\n      layerFilter,\r\n      null,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get all features that intersect a pixel on the viewport.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\r\n   * @param {AtPixelOptions} [options] Optional options.\r\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\r\n   * an empty array if none were found.\r\n   * @api\r\n   */\r\n  getFeaturesAtPixel(pixel, options) {\r\n    const features = [];\r\n    this.forEachFeatureAtPixel(\r\n      pixel,\r\n      function (feature) {\r\n        features.push(feature);\r\n      },\r\n      options,\r\n    );\r\n    return features;\r\n  }\r\n\r\n  /**\r\n   * Get all layers from all layer groups.\r\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\r\n   * @api\r\n   */\r\n  getAllLayers() {\r\n    const layers = [];\r\n    function addLayersFrom(layerGroup) {\r\n      layerGroup.forEach(function (layer) {\r\n        if (layer instanceof LayerGroup) {\r\n          addLayersFrom(layer.getLayers());\r\n        } else {\r\n          layers.push(layer);\r\n        }\r\n      });\r\n    }\r\n    addLayersFrom(this.getLayers());\r\n    return layers;\r\n  }\r\n\r\n  /**\r\n   * Detect if features intersect a pixel on the viewport. Layers included in the\r\n   * detection can be configured through the `layerFilter` option.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\r\n   * @param {AtPixelOptions} [options] Optional options.\r\n   * @return {boolean} Is there a feature at the given pixel?\r\n   * @api\r\n   */\r\n  hasFeatureAtPixel(pixel, options) {\r\n    if (!this.frameState_ || !this.renderer_) {\r\n      return false;\r\n    }\r\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\r\n    options = options !== undefined ? options : {};\r\n    const layerFilter =\r\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\r\n    const hitTolerance =\r\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\r\n    const checkWrapped = options.checkWrapped !== false;\r\n    return this.renderer_.hasFeatureAtCoordinate(\r\n      coordinate,\r\n      this.frameState_,\r\n      hitTolerance,\r\n      checkWrapped,\r\n      layerFilter,\r\n      null,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the coordinate in user projection for a browser event.\r\n   * @param {MouseEvent} event Event.\r\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\r\n   * @api\r\n   */\r\n  getEventCoordinate(event) {\r\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\r\n  }\r\n\r\n  /**\r\n   * Returns the coordinate in view projection for a browser event.\r\n   * @param {MouseEvent} event Event.\r\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\r\n   */\r\n  getEventCoordinateInternal(event) {\r\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\r\n  }\r\n\r\n  /**\r\n   * Returns the map pixel position for a browser event relative to the viewport.\r\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\r\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\r\n   * @api\r\n   */\r\n  getEventPixel(event) {\r\n    const viewport = this.viewport_;\r\n    const viewportPosition = viewport.getBoundingClientRect();\r\n    const viewportSize = this.getSize();\r\n    const scaleX = viewportPosition.width / viewportSize[0];\r\n    const scaleY = viewportPosition.height / viewportSize[1];\r\n    const eventPosition =\r\n      //FIXME Are we really calling this with a TouchEvent anywhere?\r\n      'changedTouches' in event\r\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\r\n        : /** @type {MouseEvent} */ (event);\r\n\r\n    return [\r\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\r\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Get the target in which this map is rendered.\r\n   * Note that this returns what is entered as an option or in setTarget:\r\n   * if that was an element, it returns an element; if a string, it returns that.\r\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\r\n   *     map is rendered in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getTarget() {\r\n    return /** @type {HTMLElement|string|undefined} */ (\r\n      this.get(MapProperty.TARGET)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the DOM element into which this map is rendered. In contrast to\r\n   * `getTarget` this method always return an `Element`, or `null` if the\r\n   * map has no target.\r\n   * @return {HTMLElement} The element that the map is rendered in.\r\n   * @api\r\n   */\r\n  getTargetElement() {\r\n    return this.targetElement_;\r\n  }\r\n\r\n  /**\r\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\r\n   * user projection.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\r\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\r\n   * @api\r\n   */\r\n  getCoordinateFromPixel(pixel) {\r\n    return toUserCoordinate(\r\n      this.getCoordinateFromPixelInternal(pixel),\r\n      this.getView().getProjection(),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\r\n   * map view projection.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\r\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\r\n   */\r\n  getCoordinateFromPixelInternal(pixel) {\r\n    const frameState = this.frameState_;\r\n    if (!frameState) {\r\n      return null;\r\n    }\r\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\r\n  }\r\n\r\n  /**\r\n   * Get the map controls. Modifying this collection changes the controls\r\n   * associated with the map.\r\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\r\n   * @api\r\n   */\r\n  getControls() {\r\n    return this.controls;\r\n  }\r\n\r\n  /**\r\n   * Get the map overlays. Modifying this collection changes the overlays\r\n   * associated with the map.\r\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\r\n   * @api\r\n   */\r\n  getOverlays() {\r\n    return this.overlays_;\r\n  }\r\n\r\n  /**\r\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\r\n   * Note that the index treats string and numeric identifiers as the same. So\r\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\r\n   * @param {string|number} id Overlay identifier.\r\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\r\n   * @api\r\n   */\r\n  getOverlayById(id) {\r\n    const overlay = this.overlayIdIndex_[id.toString()];\r\n    return overlay !== undefined ? overlay : null;\r\n  }\r\n\r\n  /**\r\n   * Get the map interactions. Modifying this collection changes the interactions\r\n   * associated with the map.\r\n   *\r\n   * Interactions are used for e.g. pan, zoom and rotate.\r\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\r\n   * @api\r\n   */\r\n  getInteractions() {\r\n    return this.interactions;\r\n  }\r\n\r\n  /**\r\n   * Get the layergroup associated with this map.\r\n   * @return {LayerGroup} A layer group containing the layers in this map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getLayerGroup() {\r\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\r\n  }\r\n\r\n  /**\r\n   * Clear any existing layers and add layers to the map.\r\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\r\n   * @api\r\n   */\r\n  setLayers(layers) {\r\n    const group = this.getLayerGroup();\r\n    if (layers instanceof Collection) {\r\n      group.setLayers(layers);\r\n      return;\r\n    }\r\n\r\n    const collection = group.getLayers();\r\n    collection.clear();\r\n    collection.extend(layers);\r\n  }\r\n\r\n  /**\r\n   * Get the collection of layers associated with this map.\r\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\r\n   * @api\r\n   */\r\n  getLayers() {\r\n    const layers = this.getLayerGroup().getLayers();\r\n    return layers;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Layers have sources that are still loading.\r\n   */\r\n  getLoadingOrNotReady() {\r\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\r\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\r\n      const state = layerStatesArray[i];\r\n      if (!state.visible) {\r\n        continue;\r\n      }\r\n      const renderer = state.layer.getRenderer();\r\n      if (renderer && !renderer.ready) {\r\n        return true;\r\n      }\r\n      const source = state.layer.getSource();\r\n      if (source && source.loading) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\r\n   * projection and returns the corresponding pixel.\r\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\r\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\r\n   * @api\r\n   */\r\n  getPixelFromCoordinate(coordinate) {\r\n    const viewCoordinate = fromUserCoordinate(\r\n      coordinate,\r\n      this.getView().getProjection(),\r\n    );\r\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\r\n  }\r\n\r\n  /**\r\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\r\n   * projection and returns the corresponding pixel.\r\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\r\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\r\n   */\r\n  getPixelFromCoordinateInternal(coordinate) {\r\n    const frameState = this.frameState_;\r\n    if (!frameState) {\r\n      return null;\r\n    }\r\n    return applyTransform(\r\n      frameState.coordinateToPixelTransform,\r\n      coordinate.slice(0, 2),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the map renderer.\r\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\r\n   */\r\n  getRenderer() {\r\n    return this.renderer_;\r\n  }\r\n\r\n  /**\r\n   * Get the size of this map.\r\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getSize() {\r\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\r\n      this.get(MapProperty.SIZE)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the view associated with this map. A view manages properties such as\r\n   * center and resolution.\r\n   * @return {View} The view that controls this map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getView() {\r\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\r\n  }\r\n\r\n  /**\r\n   * Get the element that serves as the map viewport.\r\n   * @return {HTMLElement} Viewport.\r\n   * @api\r\n   */\r\n  getViewport() {\r\n    return this.viewport_;\r\n  }\r\n\r\n  /**\r\n   * Get the element that serves as the container for overlays.  Elements added to\r\n   * this container will let mousedown and touchstart events through to the map,\r\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\r\n   * events.\r\n   * @return {!HTMLElement} The map's overlay container.\r\n   */\r\n  getOverlayContainer() {\r\n    return this.overlayContainer_;\r\n  }\r\n\r\n  /**\r\n   * Get the element that serves as a container for overlays that don't allow\r\n   * event propagation. Elements added to this container won't let mousedown and\r\n   * touchstart events through to the map, so clicks and gestures on an overlay\r\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\r\n   * @return {!HTMLElement} The map's overlay container that stops events.\r\n   */\r\n  getOverlayContainerStopEvent() {\r\n    return this.overlayContainerStopEvent_;\r\n  }\r\n\r\n  /**\r\n   * @return {!Document} The document where the map is displayed.\r\n   */\r\n  getOwnerDocument() {\r\n    const targetElement = this.getTargetElement();\r\n    return targetElement ? targetElement.ownerDocument : document;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./Tile.js\").default} tile Tile.\r\n   * @param {string} tileSourceKey Tile source key.\r\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\r\n   * @param {number} tileResolution Tile resolution.\r\n   * @return {number} Tile priority.\r\n   */\r\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\r\n    return getTilePriority(\r\n      this.frameState_,\r\n      tile,\r\n      tileSourceKey,\r\n      tileCenter,\r\n      tileResolution,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {UIEvent} browserEvent Browser event.\r\n   * @param {string} [type] Type.\r\n   */\r\n  handleBrowserEvent(browserEvent, type) {\r\n    type = type || browserEvent.type;\r\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\r\n    this.handleMapBrowserEvent(mapBrowserEvent);\r\n  }\r\n\r\n  /**\r\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\r\n   */\r\n  handleMapBrowserEvent(mapBrowserEvent) {\r\n    if (!this.frameState_) {\r\n      // With no view defined, we cannot translate pixels into geographical\r\n      // coordinates so interactions cannot be used.\r\n      return;\r\n    }\r\n    const originalEvent = /** @type {PointerEvent} */ (\r\n      mapBrowserEvent.originalEvent\r\n    );\r\n    const eventType = originalEvent.type;\r\n    if (\r\n      eventType === PointerEventType.POINTERDOWN ||\r\n      eventType === EventType.WHEEL ||\r\n      eventType === EventType.KEYDOWN\r\n    ) {\r\n      const doc = this.getOwnerDocument();\r\n      const rootNode = this.viewport_.getRootNode\r\n        ? this.viewport_.getRootNode()\r\n        : doc;\r\n      const target = /** @type {Node} */ (originalEvent.target);\r\n      if (\r\n        // Abort if the target is a child of the container for elements whose events are not meant\r\n        // to be handled by map interactions.\r\n        this.overlayContainerStopEvent_.contains(target) ||\r\n        // Abort if the event target is a child of the container that is no longer in the page.\r\n        // It's possible for the target to no longer be in the page if it has been removed in an\r\n        // event listener, this might happen in a Control that recreates it's content based on\r\n        // user interaction either manually or via a render in something like https://reactjs.org/\r\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n    mapBrowserEvent.frameState = this.frameState_;\r\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\r\n      const interactionsArray = this.getInteractions().getArray().slice();\r\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\r\n        const interaction = interactionsArray[i];\r\n        if (\r\n          interaction.getMap() !== this ||\r\n          !interaction.getActive() ||\r\n          !this.getTargetElement()\r\n        ) {\r\n          continue;\r\n        }\r\n        const cont = interaction.handleEvent(mapBrowserEvent);\r\n        if (!cont || mapBrowserEvent.propagationStopped) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  handlePostRender() {\r\n    const frameState = this.frameState_;\r\n\r\n    // Manage the tile queue\r\n    // Image loads are expensive and a limited resource, so try to use them\r\n    // efficiently:\r\n    // * When the view is static we allow a large number of parallel tile loads\r\n    //   to complete the frame as quickly as possible.\r\n    // * When animating or interacting, image loads can cause janks, so we reduce\r\n    //   the maximum number of loads per frame and limit the number of parallel\r\n    //   tile loads to remain reactive to view changes and to reduce the chance of\r\n    //   loading tiles that will quickly disappear from view.\r\n    const tileQueue = this.tileQueue_;\r\n    if (!tileQueue.isEmpty()) {\r\n      let maxTotalLoading = this.maxTilesLoading_;\r\n      let maxNewLoads = maxTotalLoading;\r\n      if (frameState) {\r\n        const hints = frameState.viewHints;\r\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\r\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\r\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\r\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\r\n        }\r\n      }\r\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\r\n        tileQueue.reprioritize(); // FIXME only call if view has changed\r\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\r\n      }\r\n    }\r\n\r\n    if (frameState && this.renderer_ && !frameState.animate) {\r\n      if (this.renderComplete_ === true) {\r\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\r\n          this.renderer_.dispatchRenderEvent(\r\n            RenderEventType.RENDERCOMPLETE,\r\n            frameState,\r\n          );\r\n        }\r\n        if (this.loaded_ === false) {\r\n          this.loaded_ = true;\r\n          this.dispatchEvent(\r\n            new MapEvent(MapEventType.LOADEND, this, frameState),\r\n          );\r\n        }\r\n      } else if (this.loaded_ === true) {\r\n        this.loaded_ = false;\r\n        this.dispatchEvent(\r\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\r\n        );\r\n      }\r\n    }\r\n\r\n    const postRenderFunctions = this.postRenderFunctions_;\r\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\r\n      postRenderFunctions[i](this, frameState);\r\n    }\r\n    postRenderFunctions.length = 0;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleSizeChanged_() {\r\n    if (this.getView() && !this.getView().getAnimating()) {\r\n      this.getView().resolveConstraints(0);\r\n    }\r\n\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleTargetChanged_() {\r\n    if (this.mapBrowserEventHandler_) {\r\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\r\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\r\n      }\r\n      this.targetChangeHandlerKeys_ = null;\r\n      this.viewport_.removeEventListener(\r\n        EventType.CONTEXTMENU,\r\n        this.boundHandleBrowserEvent_,\r\n      );\r\n      this.viewport_.removeEventListener(\r\n        EventType.WHEEL,\r\n        this.boundHandleBrowserEvent_,\r\n      );\r\n      this.mapBrowserEventHandler_.dispose();\r\n      this.mapBrowserEventHandler_ = null;\r\n      removeNode(this.viewport_);\r\n    }\r\n\r\n    if (this.targetElement_) {\r\n      this.resizeObserver_.unobserve(this.targetElement_);\r\n      const rootNode = this.targetElement_.getRootNode();\r\n      if (rootNode instanceof ShadowRoot) {\r\n        this.resizeObserver_.unobserve(rootNode.host);\r\n      }\r\n      this.setSize(undefined);\r\n    }\r\n\r\n    // target may be undefined, null, a string or an Element.\r\n    // If it's a string we convert it to an Element before proceeding.\r\n    // If it's not now an Element we remove the viewport from the DOM.\r\n    // If it's an Element we append the viewport element to it.\r\n\r\n    const target = this.getTarget();\r\n    const targetElement =\r\n      typeof target === 'string' ? document.getElementById(target) : target;\r\n    this.targetElement_ = targetElement;\r\n    if (!targetElement) {\r\n      if (this.renderer_) {\r\n        clearTimeout(this.postRenderTimeoutHandle_);\r\n        this.postRenderTimeoutHandle_ = undefined;\r\n        this.postRenderFunctions_.length = 0;\r\n        this.renderer_.dispose();\r\n        this.renderer_ = null;\r\n      }\r\n      if (this.animationDelayKey_) {\r\n        cancelAnimationFrame(this.animationDelayKey_);\r\n        this.animationDelayKey_ = undefined;\r\n      }\r\n    } else {\r\n      targetElement.appendChild(this.viewport_);\r\n      if (!this.renderer_) {\r\n        this.renderer_ = new CompositeMapRenderer(this);\r\n      }\r\n\r\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\r\n        this,\r\n        this.moveTolerance_,\r\n      );\r\n      for (const key in MapBrowserEventType) {\r\n        this.mapBrowserEventHandler_.addEventListener(\r\n          MapBrowserEventType[key],\r\n          this.handleMapBrowserEvent.bind(this),\r\n        );\r\n      }\r\n      this.viewport_.addEventListener(\r\n        EventType.CONTEXTMENU,\r\n        this.boundHandleBrowserEvent_,\r\n        false,\r\n      );\r\n      this.viewport_.addEventListener(\r\n        EventType.WHEEL,\r\n        this.boundHandleBrowserEvent_,\r\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\r\n      );\r\n\r\n      const keyboardEventTarget = !this.keyboardEventTarget_\r\n        ? targetElement\r\n        : this.keyboardEventTarget_;\r\n      this.targetChangeHandlerKeys_ = [\r\n        listen(\r\n          keyboardEventTarget,\r\n          EventType.KEYDOWN,\r\n          this.handleBrowserEvent,\r\n          this,\r\n        ),\r\n        listen(\r\n          keyboardEventTarget,\r\n          EventType.KEYPRESS,\r\n          this.handleBrowserEvent,\r\n          this,\r\n        ),\r\n      ];\r\n      const rootNode = targetElement.getRootNode();\r\n      if (rootNode instanceof ShadowRoot) {\r\n        this.resizeObserver_.observe(rootNode.host);\r\n      }\r\n      this.resizeObserver_.observe(targetElement);\r\n    }\r\n\r\n    this.updateSize();\r\n    // updateSize calls setSize, so no need to call this.render\r\n    // ourselves here.\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleTileChange_() {\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleViewPropertyChanged_() {\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleViewChanged_() {\r\n    if (this.viewPropertyListenerKey_) {\r\n      unlistenByKey(this.viewPropertyListenerKey_);\r\n      this.viewPropertyListenerKey_ = null;\r\n    }\r\n    if (this.viewChangeListenerKey_) {\r\n      unlistenByKey(this.viewChangeListenerKey_);\r\n      this.viewChangeListenerKey_ = null;\r\n    }\r\n    const view = this.getView();\r\n    if (view) {\r\n      this.updateViewportSize_(this.getSize());\r\n\r\n      this.viewPropertyListenerKey_ = listen(\r\n        view,\r\n        ObjectEventType.PROPERTYCHANGE,\r\n        this.handleViewPropertyChanged_,\r\n        this,\r\n      );\r\n      this.viewChangeListenerKey_ = listen(\r\n        view,\r\n        EventType.CHANGE,\r\n        this.handleViewPropertyChanged_,\r\n        this,\r\n      );\r\n\r\n      view.resolveConstraints(0);\r\n    }\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleLayerGroupChanged_() {\r\n    if (this.layerGroupPropertyListenerKeys_) {\r\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\r\n      this.layerGroupPropertyListenerKeys_ = null;\r\n    }\r\n    const layerGroup = this.getLayerGroup();\r\n    if (layerGroup) {\r\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\r\n      this.layerGroupPropertyListenerKeys_ = [\r\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\r\n        listen(layerGroup, EventType.CHANGE, this.render, this),\r\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\r\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\r\n      ];\r\n    }\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Is rendered.\r\n   */\r\n  isRendered() {\r\n    return !!this.frameState_;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  animationDelay_() {\r\n    this.animationDelayKey_ = undefined;\r\n    this.renderFrame_(Date.now());\r\n  }\r\n\r\n  /**\r\n   * Requests an immediate render in a synchronous manner.\r\n   * @api\r\n   */\r\n  renderSync() {\r\n    if (this.animationDelayKey_) {\r\n      cancelAnimationFrame(this.animationDelayKey_);\r\n    }\r\n    this.animationDelay_();\r\n  }\r\n\r\n  /**\r\n   * Redraws all text after new fonts have loaded\r\n   */\r\n  redrawText() {\r\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\r\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\r\n      const layer = layerStates[i].layer;\r\n      if (layer.hasRenderer()) {\r\n        layer.getRenderer().handleFontsChanged();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Request a map rendering (at the next animation frame).\r\n   * @api\r\n   */\r\n  render() {\r\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\r\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove the given control from the map.\r\n   * @param {import(\"./control/Control.js\").default} control Control.\r\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\r\n   *     if the control was not found).\r\n   * @api\r\n   */\r\n  removeControl(control) {\r\n    return this.getControls().remove(control);\r\n  }\r\n\r\n  /**\r\n   * Remove the given interaction from the map.\r\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\r\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\r\n   *     undefined if the interaction was not found).\r\n   * @api\r\n   */\r\n  removeInteraction(interaction) {\r\n    return this.getInteractions().remove(interaction);\r\n  }\r\n\r\n  /**\r\n   * Removes the given layer from the map.\r\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\r\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\r\n   *     layer was not found).\r\n   * @api\r\n   */\r\n  removeLayer(layer) {\r\n    const layers = this.getLayerGroup().getLayers();\r\n    return layers.remove(layer);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\r\n   * @private\r\n   */\r\n  handleLayerRemove_(event) {\r\n    removeLayerMapProperty(event.layer);\r\n  }\r\n\r\n  /**\r\n   * Remove the given overlay from the map.\r\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\r\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\r\n   *     if the overlay was not found).\r\n   * @api\r\n   */\r\n  removeOverlay(overlay) {\r\n    return this.getOverlays().remove(overlay);\r\n  }\r\n\r\n  /**\r\n   * @param {number} time Time.\r\n   * @private\r\n   */\r\n  renderFrame_(time) {\r\n    const size = this.getSize();\r\n    const view = this.getView();\r\n    const previousFrameState = this.frameState_;\r\n    /** @type {?FrameState} */\r\n    let frameState = null;\r\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\r\n      const viewHints = view.getHints(\r\n        this.frameState_ ? this.frameState_.viewHints : undefined,\r\n      );\r\n      const viewState = view.getState();\r\n      frameState = {\r\n        animate: false,\r\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\r\n        declutter: null,\r\n        extent: getForViewAndSize(\r\n          viewState.center,\r\n          viewState.resolution,\r\n          viewState.rotation,\r\n          size,\r\n        ),\r\n        index: this.frameIndex_++,\r\n        layerIndex: 0,\r\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\r\n        pixelRatio: this.pixelRatio_,\r\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\r\n        postRenderFunctions: [],\r\n        size: size,\r\n        tileQueue: this.tileQueue_,\r\n        time: time,\r\n        usedTiles: {},\r\n        viewState: viewState,\r\n        viewHints: viewHints,\r\n        wantedTiles: {},\r\n        mapId: getUid(this),\r\n        renderTargets: {},\r\n      };\r\n      if (viewState.nextCenter && viewState.nextResolution) {\r\n        const rotation = isNaN(viewState.nextRotation)\r\n          ? viewState.rotation\r\n          : viewState.nextRotation;\r\n\r\n        frameState.nextExtent = getForViewAndSize(\r\n          viewState.nextCenter,\r\n          viewState.nextResolution,\r\n          rotation,\r\n          size,\r\n        );\r\n      }\r\n    }\r\n\r\n    this.frameState_ = frameState;\r\n    this.renderer_.renderFrame(frameState);\r\n\r\n    if (frameState) {\r\n      if (frameState.animate) {\r\n        this.render();\r\n      }\r\n      Array.prototype.push.apply(\r\n        this.postRenderFunctions_,\r\n        frameState.postRenderFunctions,\r\n      );\r\n\r\n      if (previousFrameState) {\r\n        const moveStart =\r\n          !this.previousExtent_ ||\r\n          (!isEmpty(this.previousExtent_) &&\r\n            !equalsExtent(frameState.extent, this.previousExtent_));\r\n        if (moveStart) {\r\n          this.dispatchEvent(\r\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\r\n          );\r\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\r\n        }\r\n      }\r\n\r\n      const idle =\r\n        this.previousExtent_ &&\r\n        !frameState.viewHints[ViewHint.ANIMATING] &&\r\n        !frameState.viewHints[ViewHint.INTERACTING] &&\r\n        !equalsExtent(frameState.extent, this.previousExtent_);\r\n\r\n      if (idle) {\r\n        this.dispatchEvent(\r\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\r\n        );\r\n        clone(frameState.extent, this.previousExtent_);\r\n      }\r\n    }\r\n\r\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\r\n\r\n    this.renderComplete_ =\r\n      this.hasListener(MapEventType.LOADSTART) ||\r\n      this.hasListener(MapEventType.LOADEND) ||\r\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\r\n        ? !this.tileQueue_.getTilesLoading() &&\r\n          !this.tileQueue_.getCount() &&\r\n          !this.getLoadingOrNotReady()\r\n        : undefined;\r\n\r\n    if (!this.postRenderTimeoutHandle_) {\r\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\r\n        this.postRenderTimeoutHandle_ = undefined;\r\n        this.handlePostRender();\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the layergroup of this map.\r\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setLayerGroup(layerGroup) {\r\n    const oldLayerGroup = this.getLayerGroup();\r\n    if (oldLayerGroup) {\r\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\r\n    }\r\n    this.set(MapProperty.LAYERGROUP, layerGroup);\r\n  }\r\n\r\n  /**\r\n   * Set the size of this map.\r\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setSize(size) {\r\n    this.set(MapProperty.SIZE, size);\r\n  }\r\n\r\n  /**\r\n   * Set the target element to render this map into.\r\n   * @param {HTMLElement|string} [target] The Element or id of the Element\r\n   *     that the map is rendered in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setTarget(target) {\r\n    this.set(MapProperty.TARGET, target);\r\n  }\r\n\r\n  /**\r\n   * Set the view for this map.\r\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\r\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\r\n   * alternative allows view properties to be resolved by sources or other components that load\r\n   * view-related metadata.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setView(view) {\r\n    if (!view || view instanceof View) {\r\n      this.set(MapProperty.VIEW, view);\r\n      return;\r\n    }\r\n    this.set(MapProperty.VIEW, new View());\r\n\r\n    const map = this;\r\n    view.then(function (viewOptions) {\r\n      map.setView(new View(viewOptions));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Force a recalculation of the map viewport size.  This should be called when\r\n   * third-party code changes the size of the map viewport.\r\n   * @api\r\n   */\r\n  updateSize() {\r\n    const targetElement = this.getTargetElement();\r\n\r\n    let size = undefined;\r\n    if (targetElement) {\r\n      const computedStyle = getComputedStyle(targetElement);\r\n      const width =\r\n        targetElement.offsetWidth -\r\n        parseFloat(computedStyle['borderLeftWidth']) -\r\n        parseFloat(computedStyle['paddingLeft']) -\r\n        parseFloat(computedStyle['paddingRight']) -\r\n        parseFloat(computedStyle['borderRightWidth']);\r\n      const height =\r\n        targetElement.offsetHeight -\r\n        parseFloat(computedStyle['borderTopWidth']) -\r\n        parseFloat(computedStyle['paddingTop']) -\r\n        parseFloat(computedStyle['paddingBottom']) -\r\n        parseFloat(computedStyle['borderBottomWidth']);\r\n      if (!isNaN(width) && !isNaN(height)) {\r\n        size = [width, height];\r\n        if (\r\n          !hasArea(size) &&\r\n          !!(\r\n            targetElement.offsetWidth ||\r\n            targetElement.offsetHeight ||\r\n            targetElement.getClientRects().length\r\n          )\r\n        ) {\r\n          warn(\r\n            \"No map visible because the map container's width or height are 0.\",\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    const oldSize = this.getSize();\r\n    if (size && (!oldSize || !equals(size, oldSize))) {\r\n      this.setSize(size);\r\n      this.updateViewportSize_(size);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recomputes the viewport size and save it on the view object (if any)\r\n   * @param {import(\"./size.js\").Size|undefined} size The size.\r\n   * @private\r\n   */\r\n  updateViewportSize_(size) {\r\n    const view = this.getView();\r\n    if (view) {\r\n      view.setViewportSize(size);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {MapOptions} options Map options.\r\n * @return {MapOptionsInternal} Internal map options.\r\n */\r\nfunction createOptionsInternal(options) {\r\n  /**\r\n   * @type {HTMLElement|Document}\r\n   */\r\n  let keyboardEventTarget = null;\r\n  if (options.keyboardEventTarget !== undefined) {\r\n    keyboardEventTarget =\r\n      typeof options.keyboardEventTarget === 'string'\r\n        ? document.getElementById(options.keyboardEventTarget)\r\n        : options.keyboardEventTarget;\r\n  }\r\n\r\n  /**\r\n   * @type {Object<string, *>}\r\n   */\r\n  const values = {};\r\n\r\n  const layerGroup =\r\n    options.layers &&\r\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\r\n      ? /** @type {LayerGroup} */ (options.layers)\r\n      : new LayerGroup({\r\n          layers:\r\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\r\n              options.layers\r\n            ),\r\n        });\r\n  values[MapProperty.LAYERGROUP] = layerGroup;\r\n\r\n  values[MapProperty.TARGET] = options.target;\r\n\r\n  values[MapProperty.VIEW] =\r\n    options.view instanceof View ? options.view : new View();\r\n\r\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\r\n  let controls;\r\n  if (options.controls !== undefined) {\r\n    if (Array.isArray(options.controls)) {\r\n      controls = new Collection(options.controls.slice());\r\n    } else {\r\n      assert(\r\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\r\n        'Expected `controls` to be an array or an `ol/Collection.js`',\r\n      );\r\n      controls = options.controls;\r\n    }\r\n  }\r\n\r\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\r\n  let interactions;\r\n  if (options.interactions !== undefined) {\r\n    if (Array.isArray(options.interactions)) {\r\n      interactions = new Collection(options.interactions.slice());\r\n    } else {\r\n      assert(\r\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\r\n          'function',\r\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\r\n      );\r\n      interactions = options.interactions;\r\n    }\r\n  }\r\n\r\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\r\n  let overlays;\r\n  if (options.overlays !== undefined) {\r\n    if (Array.isArray(options.overlays)) {\r\n      overlays = new Collection(options.overlays.slice());\r\n    } else {\r\n      assert(\r\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\r\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\r\n      );\r\n      overlays = options.overlays;\r\n    }\r\n  } else {\r\n    overlays = new Collection();\r\n  }\r\n\r\n  return {\r\n    controls: controls,\r\n    interactions: interactions,\r\n    keyboardEventTarget: keyboardEventTarget,\r\n    overlays: overlays,\r\n    values: values,\r\n  };\r\n}\r\nexport default Map;\r\n", "/**\r\n * @module ol/Overlay\r\n */\r\nimport BaseObject from './Object.js';\r\nimport MapEventType from './MapEventType.js';\r\nimport {CLASS_SELECTABLE} from './css.js';\r\nimport {containsExtent} from './extent.js';\r\nimport {listen, unlistenByKey} from './events.js';\r\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\r\n\r\n/**\r\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\r\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\r\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\r\n * `'top-center'`, or `'top-right'`.\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\r\n * with the {@link module:ol/Map~Map#getOverlayById} method.\r\n * @property {HTMLElement} [element] The overlay element.\r\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\r\n * the overlay. The first element in the\r\n * array is the horizontal offset. A positive value shifts the overlay right.\r\n * The second element in the array is the vertical offset. A positive value\r\n * shifts the overlay down.\r\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\r\n * in map projection.\r\n * @property {Positioning} [positioning='top-left'] Defines how\r\n * the overlay is actually positioned with respect to its `position` property.\r\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\r\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\r\n * `'top-center'`, and `'top-right'`.\r\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\r\n * viewport should be stopped. If `true` the overlay is placed in the same\r\n * container as that of the controls (CSS class name\r\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\r\n * with CSS class name specified by the `className` property.\r\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\r\n * in the overlay container, or appended. If the overlay is placed in the same\r\n * container as that of the controls (see the `stopEvent` option) you will\r\n * probably set `insertFirst` to `true` so the overlay is displayed below the\r\n * controls.\r\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\r\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\r\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\r\n * name.\r\n */\r\n\r\n/**\r\n * @typedef {Object} PanOptions\r\n * @property {number} [duration=1000] The duration of the animation in\r\n * milliseconds.\r\n * @property {function(number):number} [easing] The easing function to use. Can\r\n * be one from {@link module:ol/easing} or a custom function.\r\n * Default is {@link module:ol/easing.inAndOut}.\r\n */\r\n\r\n/**\r\n * @typedef {Object} PanIntoViewOptions\r\n * @property {PanOptions} [animation={}] The animation parameters for the pan\r\n * @property {number} [margin=20] The margin (in pixels) between the\r\n * overlay and the borders of the map when panning into view.\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n * @protected\r\n */\r\nconst Property = {\r\n  ELEMENT: 'element',\r\n  MAP: 'map',\r\n  OFFSET: 'offset',\r\n  POSITION: 'position',\r\n  POSITIONING: 'positioning',\r\n};\r\n\r\n/**\r\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\r\n *   'change:positioning'} OverlayObjectEventTypes\r\n */\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\r\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\r\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * An element to be displayed over the map and attached to a single map\r\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\r\n * visible widgets. Unlike Controls, they are not in a fixed position on the\r\n * screen, but are tied to a geographical coordinate, so panning the map will\r\n * move an Overlay but not a Control.\r\n *\r\n * Example:\r\n *\r\n *     import Overlay from 'ol/Overlay.js';\r\n *\r\n *     // ...\r\n *     const popup = new Overlay({\r\n *       element: document.getElementById('popup'),\r\n *     });\r\n *     popup.setPosition(coordinate);\r\n *     map.addOverlay(popup);\r\n *\r\n * @api\r\n */\r\nclass Overlay extends BaseObject {\r\n  /**\r\n   * @param {Options} options Overlay options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    /***\r\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {OverlayOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Options}\r\n     */\r\n    this.options = options;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number|string|undefined}\r\n     */\r\n    this.id = options.id;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {boolean}\r\n     */\r\n    this.insertFirst =\r\n      options.insertFirst !== undefined ? options.insertFirst : true;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {boolean}\r\n     */\r\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {HTMLElement}\r\n     */\r\n    this.element = document.createElement('div');\r\n    this.element.className =\r\n      options.className !== undefined\r\n        ? options.className\r\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\r\n    this.element.style.position = 'absolute';\r\n    this.element.style.pointerEvents = 'auto';\r\n\r\n    /**\r\n     * @protected\r\n     * @type {PanIntoViewOptions|undefined}\r\n     */\r\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {{transform_: string,\r\n     *         visible: boolean}}\r\n     */\r\n    this.rendered = {\r\n      transform_: '',\r\n      visible: true,\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     */\r\n    this.mapPostrenderListenerKey = null;\r\n\r\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\r\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\r\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\r\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\r\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\r\n\r\n    if (options.element !== undefined) {\r\n      this.setElement(options.element);\r\n    }\r\n\r\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\r\n\r\n    this.setPositioning(options.positioning || 'top-left');\r\n\r\n    if (options.position !== undefined) {\r\n      this.setPosition(options.position);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the DOM element of this overlay.\r\n   * @return {HTMLElement|undefined} The Element containing the overlay.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getElement() {\r\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\r\n  }\r\n\r\n  /**\r\n   * Get the overlay identifier which is set on constructor.\r\n   * @return {number|string|undefined} Id.\r\n   * @api\r\n   */\r\n  getId() {\r\n    return this.id;\r\n  }\r\n\r\n  /**\r\n   * Get the map associated with this overlay.\r\n   * @return {import(\"./Map.js\").default|null} The map that the\r\n   * overlay is part of.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getMap() {\r\n    return /** @type {import(\"./Map.js\").default|null} */ (\r\n      this.get(Property.MAP) || null\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the offset of this overlay.\r\n   * @return {Array<number>} The offset.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getOffset() {\r\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\r\n  }\r\n\r\n  /**\r\n   * Get the current position of this overlay.\r\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\r\n   *     anchored at.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getPosition() {\r\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\r\n      this.get(Property.POSITION)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the current positioning of this overlay.\r\n   * @return {Positioning} How the overlay is positioned\r\n   *     relative to its point on the map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getPositioning() {\r\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  handleElementChanged() {\r\n    removeChildren(this.element);\r\n    const element = this.getElement();\r\n    if (element) {\r\n      this.element.appendChild(element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  handleMapChanged() {\r\n    if (this.mapPostrenderListenerKey) {\r\n      removeNode(this.element);\r\n      unlistenByKey(this.mapPostrenderListenerKey);\r\n      this.mapPostrenderListenerKey = null;\r\n    }\r\n    const map = this.getMap();\r\n    if (map) {\r\n      this.mapPostrenderListenerKey = listen(\r\n        map,\r\n        MapEventType.POSTRENDER,\r\n        this.render,\r\n        this,\r\n      );\r\n      this.updatePixelPosition();\r\n      const container = this.stopEvent\r\n        ? map.getOverlayContainerStopEvent()\r\n        : map.getOverlayContainer();\r\n      if (this.insertFirst) {\r\n        container.insertBefore(this.element, container.childNodes[0] || null);\r\n      } else {\r\n        container.appendChild(this.element);\r\n      }\r\n      this.performAutoPan();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  render() {\r\n    this.updatePixelPosition();\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  handleOffsetChanged() {\r\n    this.updatePixelPosition();\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  handlePositionChanged() {\r\n    this.updatePixelPosition();\r\n    this.performAutoPan();\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  handlePositioningChanged() {\r\n    this.updatePixelPosition();\r\n  }\r\n\r\n  /**\r\n   * Set the DOM element to be associated with this overlay.\r\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setElement(element) {\r\n    this.set(Property.ELEMENT, element);\r\n  }\r\n\r\n  /**\r\n   * Set the map to be associated with this overlay.\r\n   * @param {import(\"./Map.js\").default|null} map The map that the\r\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    this.set(Property.MAP, map);\r\n  }\r\n\r\n  /**\r\n   * Set the offset for this overlay.\r\n   * @param {Array<number>} offset Offset.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setOffset(offset) {\r\n    this.set(Property.OFFSET, offset);\r\n  }\r\n\r\n  /**\r\n   * Set the position for this overlay. If the position is `undefined` the\r\n   * overlay is hidden.\r\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\r\n   *     is anchored at.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setPosition(position) {\r\n    this.set(Property.POSITION, position);\r\n  }\r\n\r\n  /**\r\n   * Pan the map so that the overlay is entirely visible in the current viewport\r\n   * (if necessary) using the configured autoPan parameters\r\n   * @protected\r\n   */\r\n  performAutoPan() {\r\n    if (this.autoPan) {\r\n      this.panIntoView(this.autoPan);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Pan the map so that the overlay is entirely visible in the current viewport\r\n   * (if necessary).\r\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\r\n   * @api\r\n   */\r\n  panIntoView(panIntoViewOptions) {\r\n    const map = this.getMap();\r\n\r\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\r\n      return;\r\n    }\r\n\r\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\r\n    const element = this.getElement();\r\n    const overlayRect = this.getRect(element, [\r\n      outerWidth(element),\r\n      outerHeight(element),\r\n    ]);\r\n\r\n    panIntoViewOptions = panIntoViewOptions || {};\r\n\r\n    const myMargin =\r\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\r\n    if (!containsExtent(mapRect, overlayRect)) {\r\n      // the overlay is not completely inside the viewport, so pan the map\r\n      const offsetLeft = overlayRect[0] - mapRect[0];\r\n      const offsetRight = mapRect[2] - overlayRect[2];\r\n      const offsetTop = overlayRect[1] - mapRect[1];\r\n      const offsetBottom = mapRect[3] - overlayRect[3];\r\n\r\n      const delta = [0, 0];\r\n      if (offsetLeft < 0) {\r\n        // move map to the left\r\n        delta[0] = offsetLeft - myMargin;\r\n      } else if (offsetRight < 0) {\r\n        // move map to the right\r\n        delta[0] = Math.abs(offsetRight) + myMargin;\r\n      }\r\n      if (offsetTop < 0) {\r\n        // move map up\r\n        delta[1] = offsetTop - myMargin;\r\n      } else if (offsetBottom < 0) {\r\n        // move map down\r\n        delta[1] = Math.abs(offsetBottom) + myMargin;\r\n      }\r\n\r\n      if (delta[0] !== 0 || delta[1] !== 0) {\r\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\r\n          map.getView().getCenterInternal()\r\n        );\r\n        const centerPx = map.getPixelFromCoordinateInternal(center);\r\n        if (!centerPx) {\r\n          return;\r\n        }\r\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\r\n\r\n        const panOptions = panIntoViewOptions.animation || {};\r\n        map.getView().animateInternal({\r\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\r\n          duration: panOptions.duration,\r\n          easing: panOptions.easing,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the extent of an element relative to the document\r\n   * @param {HTMLElement} element The element.\r\n   * @param {import(\"./size.js\").Size} size The size of the element.\r\n   * @return {import(\"./extent.js\").Extent} The extent.\r\n   * @protected\r\n   */\r\n  getRect(element, size) {\r\n    const box = element.getBoundingClientRect();\r\n    const offsetX = box.left + window.pageXOffset;\r\n    const offsetY = box.top + window.pageYOffset;\r\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\r\n  }\r\n\r\n  /**\r\n   * Set the positioning for this overlay.\r\n   * @param {Positioning} positioning how the overlay is\r\n   *     positioned relative to its point on the map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setPositioning(positioning) {\r\n    this.set(Property.POSITIONING, positioning);\r\n  }\r\n\r\n  /**\r\n   * Modify the visibility of the element.\r\n   * @param {boolean} visible Element visibility.\r\n   * @protected\r\n   */\r\n  setVisible(visible) {\r\n    if (this.rendered.visible !== visible) {\r\n      this.element.style.display = visible ? '' : 'none';\r\n      this.rendered.visible = visible;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update pixel position.\r\n   * @protected\r\n   */\r\n  updatePixelPosition() {\r\n    const map = this.getMap();\r\n    const position = this.getPosition();\r\n    if (!map || !map.isRendered() || !position) {\r\n      this.setVisible(false);\r\n      return;\r\n    }\r\n\r\n    const pixel = map.getPixelFromCoordinate(position);\r\n    const mapSize = map.getSize();\r\n    this.updateRenderedPosition(pixel, mapSize);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\r\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\r\n   * @protected\r\n   */\r\n  updateRenderedPosition(pixel, mapSize) {\r\n    const style = this.element.style;\r\n    const offset = this.getOffset();\r\n\r\n    const positioning = this.getPositioning();\r\n\r\n    this.setVisible(true);\r\n\r\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\r\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\r\n    let posX = '0%';\r\n    let posY = '0%';\r\n    if (\r\n      positioning == 'bottom-right' ||\r\n      positioning == 'center-right' ||\r\n      positioning == 'top-right'\r\n    ) {\r\n      posX = '-100%';\r\n    } else if (\r\n      positioning == 'bottom-center' ||\r\n      positioning == 'center-center' ||\r\n      positioning == 'top-center'\r\n    ) {\r\n      posX = '-50%';\r\n    }\r\n    if (\r\n      positioning == 'bottom-left' ||\r\n      positioning == 'bottom-center' ||\r\n      positioning == 'bottom-right'\r\n    ) {\r\n      posY = '-100%';\r\n    } else if (\r\n      positioning == 'center-left' ||\r\n      positioning == 'center-center' ||\r\n      positioning == 'center-right'\r\n    ) {\r\n      posY = '-50%';\r\n    }\r\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\r\n    if (this.rendered.transform_ != transform) {\r\n      this.rendered.transform_ = transform;\r\n      style.transform = transform;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * returns the options this Overlay has been created with\r\n   * @return {Options} overlay options\r\n   */\r\n  getOptions() {\r\n    return this.options;\r\n  }\r\n}\r\n\r\nexport default Overlay;\r\n"],
  "mappings": "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",
  "names": ["get", "get", "scale", "Image_default", "toString", "get", "scale", "context", "Image_default", "scale", "scale", "scale", "Image_default", "scale", "get", "image", "type", "context", "toString", "context", "Property", "fillInstruction", "p1", "p2", "p3", "scale", "scale", "measureAndCacheTextWidth", "rotate", "line", "scale", "text", "p1", "p2", "p3", "p4", "fillInstruction", "strokeInstruction", "intersects", "i", "ii", "i", "result", "i", "geometry", "loading", "Layer_default", "EventType_default", "wrapX", "extent", "userExtent", "Vector_default", "Vector_default", "EventType_default", "equals", "isEmpty", "clone", "wrapX", "p1", "p2", "wrapX", "callback", "Event_default", "EventType_default", "Property", "EventType_default", "EventType_default", "newEvent", "always", "centroid", "map", "always", "defaults", "defaults", "EventType_default", "isEmpty", "equals", "Map_default", "Property"]
}
